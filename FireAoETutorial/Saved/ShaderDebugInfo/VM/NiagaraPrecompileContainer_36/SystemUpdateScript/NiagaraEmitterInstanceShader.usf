#line 1 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
#line 6 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
#pragma warning(disable:4008)
#line 7 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
#line 1 "/Engine/Public/Platform.ush"
#line 9 "/Engine/Public/Platform.ush"
#line 1 "FP16Math.ush"
#line 10 "/Engine/Public/Platform.ush"
#line 43 "/Engine/Public/Platform.ush"
#line 1 "ShaderVersion.ush"
#line 44 "/Engine/Public/Platform.ush"
#line 595 "/Engine/Public/Platform.ush"
float min3( float a, float b, float c )
{
	return min( a, min( b, c ) );
}

float max3( float a, float b, float c )
{
	return max( a, max( b, c ) );
}

float2 min3( float2 a, float2 b, float2 c )
{
	return float2(
		min3( a.x, b.x, c.x ),
		min3( a.y, b.y, c.y )
	);
}

float2 max3( float2 a, float2 b, float2 c )
{
	return float2(
		max3( a.x, b.x, c.x ),
		max3( a.y, b.y, c.y )
	);
}

float3 max3( float3 a, float3 b, float3 c )
{
	return float3(
		max3( a.x, b.x, c.x ),
		max3( a.y, b.y, c.y ),
		max3( a.z, b.z, c.z )
	);
}

float3 min3( float3 a, float3 b, float3 c )
{
	return float3(
		min3( a.x, b.x, c.x ),
		min3( a.y, b.y, c.y ),
		min3( a.z, b.z, c.z )
	);
}

float4 min3( float4 a, float4 b, float4 c )
{
	return float4(
		min3( a.x, b.x, c.x ),
		min3( a.y, b.y, c.y ),
		min3( a.z, b.z, c.z ),
		min3( a.w, b.w, c.w )
	);
}

float4 max3( float4 a, float4 b, float4 c )
{
	return float4(
		max3( a.x, b.x, c.x ),
		max3( a.y, b.y, c.y ),
		max3( a.z, b.z, c.z ),
		max3( a.w, b.w, c.w )
	);
}




float UnpackByte0(uint v) { return float(v & 0xff); }
float UnpackByte1(uint v) { return float((v >> 8) & 0xff); }
float UnpackByte2(uint v) { return float((v >> 16) & 0xff); }
float UnpackByte3(uint v) { return float(v >> 24); }
#line 8 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"






	const static float PI = 3.1415926535897932f;

	const static float TWO_PI = 3.1415926535897932f*2.0f;
#line 18 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
#line 1 "/Engine/Private/Definitions.usf"
#line 19 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"


float4 ModuloPrecise(float4 x, float4 y){ return x - y * trunc(x/y); }
float3 ModuloPrecise(float3 x, float3 y){ return x - y * trunc(x/y); }
float2 ModuloPrecise(float2 x, float2 y){ return x - y * trunc(x/y);}
float ModuloPrecise(float x, float y){ return x - y * trunc(x/y); }
int ModuloPrecise(int x, int y){ return x - y * (x/y); }
int Modulo(int x, int y){ return x - y * (x/y); }



float4 Reciprocal(float4 x){ return 1.0f/x;}
float3 Reciprocal(float3 x){ return 1.0f/x; }
float2 Reciprocal(float2 x){ return 1.0f/x;}
float Reciprocal(float x){ return 1.0f/x; }



bool NiagaraAll(bool b) { return b; }
bool NiagaraAny(bool b) { return b; }









bool NiagaraAll(bool2 b) { return b.x && b.y; }
bool NiagaraAll(bool3 b) { return b.x && b.y && b.z; }
bool NiagaraAll(bool4 b) { return b.x && b.y && b.z && b.w; }
bool NiagaraAny(bool2 b) { return b.x || b.y; }
bool NiagaraAny(bool3 b) { return b.x || b.y || b.z; }
bool NiagaraAny(bool4 b) { return b.x || b.y || b.z || b.w; }
#line 193 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
float4 rand4(int Seed1, int Seed2, int Seed3, int Seed4)
{
	int4 v = int4(Seed4, Seed1, Seed2, Seed3) * 1664525 + 1013904223;

	v.x += v.y*v.w;
	v.y += v.z*v.x;
	v.z += v.x*v.y;
	v.w += v.y*v.z;
	v.x += v.y*v.w;
	v.y += v.z*v.x;
	v.z += v.x*v.y;
	v.w += v.y*v.z;






	return float4((v >> 8) & 0x00ffffff) / 16777216.0;

}







float3 rand3(int Seed1, int Seed2, int Seed3, int Seed4)
{
	int3 v = int3(Seed1, Seed2, Seed4 | (Seed3 << 16)) * 1664525 + 1013904223;

	v.x += v.y*v.z;
	v.y += v.z*v.x;
	v.z += v.x*v.y;
	v.x += v.y*v.z;
	v.y += v.z*v.x;
	v.z += v.x*v.y;

	return float3((v >> 8) & 0x00ffffff) / 16777216.0;
}


static int RandomCounterDeterministic = 0;


float rand(float x, int Seed1, int Seed2, int Seed3)
{
	RandomCounterDeterministic += 1;
	return rand3(Seed1, Seed2, Seed3, RandomCounterDeterministic).x * x;
}


float2 rand(float2 x, int Seed1, int Seed2, int Seed3)
{
	RandomCounterDeterministic += 1;
	return rand3(Seed1, Seed2, Seed3, RandomCounterDeterministic).xy * x;
}


float3 rand(float3 x, int Seed1, int Seed2, int Seed3)
{
	RandomCounterDeterministic += 1;
	return rand3(Seed1, Seed2, Seed3, RandomCounterDeterministic).xyz * x;
}


float4 rand(float4 x, int Seed1, int Seed2, int Seed3)
{
	RandomCounterDeterministic += 1;
	return rand4(Seed1, Seed2, Seed3, RandomCounterDeterministic).xyzw * x;
}


int rand(int x, int Seed1, int Seed2, int Seed3)
{


	RandomCounterDeterministic += 1;
	return int(rand3(Seed1, Seed2, Seed3, RandomCounterDeterministic).x * (x+1));
}
#line 323 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
	float rand(float x);

	float2 rand(float2 x)
	{
		return float2(rand(x.x), rand(x.y));
	}

	float3 rand(float3 x)
	{
		return float3(rand(x.x), rand(x.y), rand(x.z));
	}

	float4 rand(float4 x)
	{
		return float4(rand(x.x), rand(x.y), rand(x.z), rand(x.w));
	}

	int rand(int x);



float rand_float(float x)
{
	return rand(x.x);
}

float2 rand_float(float2 x)
{
	return float2(rand_float(x.x), rand_float(x.y));
}

float3 rand_float(float3 x)
{
	return float3(rand_float(x.x), rand_float(x.y), rand_float(x.z));
}

float4 rand_float(float4 x)
{
	return float4(rand_float(x.x), rand_float(x.y), rand_float(x.z), rand_float(x.w));
}

int rand_int(int x)
{



	return rand_float(x.x);
}


float rand_float(float x, int Seed1, int Seed2, int Seed3)
{
	return rand(x.x, Seed1, Seed2, Seed3);
}

float2 rand_float(float2 x, int Seed1, int Seed2, int Seed3)
{
	return rand(x, Seed1, Seed2, Seed3);
}

float3 rand_float(float3 x, int Seed1, int Seed2, int Seed3)
{
	return rand(x, Seed1, Seed2, Seed3);
}

float4 rand_float(float4 x, int Seed1, int Seed2, int Seed3)
{
	return rand(x, Seed1, Seed2, Seed3);
}

int rand_int(int x, int Seed1, int Seed2, int Seed3)
{


	return rand(x.x-1, Seed1, Seed2, Seed3);
}
#line 405 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
	float noise(float x);
	float noise(float2 x);
	float noise(float3 x);



	float4 Modulo(float4 x, float4 y);
	float3 Modulo(float3 x, float3 y);
	float2 Modulo(float2 x, float2 y);
	float Modulo(float x, float y);


	int ExecIndex();



	int AcquireIndex(int DataSetID, bool DoAcquire);

	void AcquireID(int DataSetID, out int IDIndex, out int IDAcquireTag);
	void UpdateID(int DataSetID, int IDIndex, int InstanceIndex);

	float InputDataFloat(int DataSetIndex, int RegisterIdx);
	int InputDataInt(int DataSetIndex, int RegisterIdx);
	bool InputDataBool(int DataSetIndex, int RegisterIdx);

	float InputDataNoadvanceFloat(int DataSetIndex, int RegisterIdx);
	int InputDataNoadvanceInt(int DataSetIndex, int RegisterIdx);
	bool InputDataNoadvanceBool(int DataSetIndex, int RegisterIdx);

	void OutputDataFloat(int DataSetIndex, int RegisterIndex, int InstanceIndex, float Value);
	void OutputDataInt(int DataSetIndex, int RegisterIndex, int InstanceIndex, int Value);
	void OutputDataBool(int DataSetIndex, int RegisterIndex, int InstanceIndex, bool Value);
#line 683 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
	int OutputIndex(const int DataSetID, const bool bStageKillsParticles, const bool bIsValid)
	{
#line 698 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
			return AcquireIndex(DataSetID, bIsValid);
	}
#line 702 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"
#line 1 "/Engine/Generated/NiagaraEmitterInstance.ush"




struct NiagaraSpawnInfo
{
	int Count;
	float InterpStartDt;
	float IntervalDt;
	int SpawnGroup;
};

struct NiagaraRandInfo
{
	int Seed1;
	int Seed2;
	int Seed3;
};

struct NiagaraID
{
	int Index;
	int AcquireTag;
};

cbuffer FNiagaraGlobalParameters
{
	float Engine_DeltaTime;
	float Engine_InverseDeltaTime;
	float Engine_Time;
	float Engine_RealTime;
}

cbuffer FNiagaraSystemParameters
{
}

cbuffer FNiagaraOwnerParameters
{
}

cbuffer FNiagaraEmitterParameters
{
}

cbuffer FNiagaraExternalParameters
{
	float Constants_SystemState_LoopDelay;
	float Constants_SystemState_LoopDuration;
	float Constants_INTEGER_02_ShockwaveAdd002_EmitterState_LoopDuration;
	float Constants_INTEGER_02_ShockwaveAdd002_SpawnBurst_Instantaneous_SpawnTime;
	int Constants_INTEGER_02_ShockwaveAdd002_SpawnBurst_Instantaneous_SpawnGroup;
	float Constants_INTEGER_02_ShockwaveAdd002_SpawnBurst_Instantaneous_SpawnProbability;
	int Constants_INTEGER_02_ShockwaveAdd002_SpawnBurst_Instantaneous_SpawnCount;
	float Constants_INTEGER_02_ShockwaveAdd001_EmitterState_LoopDuration;
	float Constants_INTEGER_02_ShockwaveAdd001_SpawnBurst_Instantaneous_SpawnTime;
	int Constants_INTEGER_02_ShockwaveAdd001_SpawnBurst_Instantaneous_SpawnGroup;
	float Constants_INTEGER_02_ShockwaveAdd001_SpawnBurst_Instantaneous_SpawnProbability;
	int Constants_INTEGER_02_ShockwaveAdd001_SpawnBurst_Instantaneous_SpawnCount;
	float Constants_INTEGER_02_ShockwaveAdd_EmitterState_LoopDuration;
	float Constants_INTEGER_02_ShockwaveAdd_SpawnBurst_Instantaneous_SpawnTime;
	int Constants_INTEGER_02_ShockwaveAdd_SpawnBurst_Instantaneous_SpawnGroup;
	float Constants_INTEGER_02_ShockwaveAdd_SpawnBurst_Instantaneous_SpawnProbability;
	int Constants_INTEGER_02_ShockwaveAdd_SpawnBurst_Instantaneous_SpawnCount;
	float Constants_INTEGER_02_FireImpact2Add_EmitterState_LoopDuration;
	float Constants_INTEGER_02_FireImpact2Add_SpawnBurst_Instantaneous_SpawnTime;
	int Constants_INTEGER_02_FireImpact2Add_SpawnBurst_Instantaneous_SpawnGroup;
	float Constants_INTEGER_02_FireImpact2Add_SpawnBurst_Instantaneous_SpawnProbability;
	int Constants_INTEGER_02_FireImpact2Add_SpawnBurst_Instantaneous_SpawnCount;
	float Constants_INTEGER_02_BeamFlash_EmitterState_LoopDuration;
	float Constants_INTEGER_02_BeamFlash_SpawnBurst_Instantaneous_SpawnTime;
	int Constants_INTEGER_02_BeamFlash_SpawnBurst_Instantaneous_SpawnGroup;
	float Constants_INTEGER_02_BeamFlash_SpawnBurst_Instantaneous_SpawnProbability;
	int Constants_INTEGER_02_BeamFlash_SpawnBurst_Instantaneous_SpawnCount;
	float Constants_INTEGER_02_BeamGround_EmitterState_LoopDuration;
	float Constants_INTEGER_02_BeamGround_SpawnBurst_Instantaneous_SpawnTime;
	int Constants_INTEGER_02_BeamGround_SpawnBurst_Instantaneous_SpawnGroup;
	float Constants_INTEGER_02_BeamGround_SpawnBurst_Instantaneous_SpawnProbability;
	int Constants_INTEGER_02_BeamGround_SpawnBurst_Instantaneous_SpawnCount;
	float Constants_INTEGER_02_SparksOutAdd_EmitterState_LoopDuration;
	int Constants_INTEGER_02_SparksOutAdd_UniformRangedInt_Minimum;
	int Constants_INTEGER_02_SparksOutAdd_UniformRangedInt_Maximum;
	int Constants_INTEGER_02_SparksOutAdd_UniformRangedInt_RandomSeed;
	float Constants_INTEGER_02_SparksOutAdd_SpawnBurst_Instantaneous_SpawnTime;
	int Constants_INTEGER_02_SparksOutAdd_SpawnBurst_Instantaneous_SpawnGroup;
	float Constants_INTEGER_02_SparksOutAdd_SpawnBurst_Instantaneous_SpawnProbability;
	float Constants_INTEGER_02_CylinderAdd_EmitterState_LoopDuration;
	float Constants_INTEGER_02_CylinderAdd_SpawnBurst_Instantaneous_SpawnTime;
	int Constants_INTEGER_02_CylinderAdd_SpawnBurst_Instantaneous_SpawnGroup;
	float Constants_INTEGER_02_CylinderAdd_SpawnBurst_Instantaneous_SpawnProbability;
	int Constants_INTEGER_02_CylinderAdd_SpawnBurst_Instantaneous_SpawnCount;
	float Constants_INTEGER_01_SparksInAdd_Divide_Float001_B;
	float Constants_INTEGER_01_SparksInAdd_EmitterState_LoopDelay;
	float Constants_INTEGER_01_SparksInAdd_SpawnRate_SpawnRate;
	int Constants_INTEGER_01_SparksInAdd_SpawnRate_SpawnGroup;
	float Constants_INTEGER_01_SparksInAdd_SpawnRate_SpawnProbability;
	float Constants_INTEGER_01_GroupBeamAdd_EmitterState_LoopDuration;
	float Constants_INTEGER_01_GroupBeamAdd_EmitterState_LoopDelay;
	float Constants_INTEGER_01_GroupBeamAdd_SpawnBurst_Instantaneous_SpawnTime;
	int Constants_INTEGER_01_GroupBeamAdd_SpawnBurst_Instantaneous_SpawnGroup;
	float Constants_INTEGER_01_GroupBeamAdd_SpawnBurst_Instantaneous_SpawnProbability;
	int Constants_INTEGER_01_GroupBeamAdd_SpawnBurst_Instantaneous_SpawnCount;
	float Constants_INTEGER_01_CylinderAdd_EmitterState_LoopDuration;
	float Constants_INTEGER_01_CylinderAdd_EmitterState_LoopDelay;
	float Constants_INTEGER_01_CylinderAdd_SpawnBurst_Instantaneous_SpawnTime;
	int Constants_INTEGER_01_CylinderAdd_SpawnBurst_Instantaneous_SpawnGroup;
	float Constants_INTEGER_01_CylinderAdd_SpawnBurst_Instantaneous_SpawnProbability;
	int Constants_INTEGER_01_CylinderAdd_SpawnBurst_Instantaneous_SpawnCount;
	int Emitter_RandomSeed;
}

struct FParamMap0_VectorFromFloat
{
	float Value;
};

struct FParamMap0_VectorFromCurve001
{
	float CurveIndex;
};

struct FParamMap0_VectorFromCurve
{
	float CurveIndex;
};

struct FParamMap0_Vector2DFromFloat001
{
	float Value;
};

struct FParamMap0_Vector2DFromFloat
{
	float Value;
};

struct FParamMap0_User_INTEGER_02_SparksOutAdd
{
	int RandomSeed;
};

struct FParamMap0_User
{
	float4 color01;
	float4 color02;
	float ImpactDelay;
	FParamMap0_User_INTEGER_02_SparksOutAdd INTEGER_02_SparksOutAdd;
};

struct FParamMap0_UniformRangedVector2D
{
	bool FixedRandomSeed;
	float2 Maximum;
	float2 Minimum;
	bool OverrideRandomness;
	bool OverrideSeed;
	int RandomnessMode;
	int RandomSeed;
};

struct FParamMap0_UniformRangedLinearColor
{
	bool FixedRandomSeed;
	float4 Maximum;
	float4 Minimum;
	bool OverrideRandomness;
	bool OverrideSeed;
	int RandomnessMode;
	int RandomSeed;
};

struct FParamMap0_UniformRangedInt
{
	bool FixedRandomSeed;
	int Maximum;
	int Minimum;
	bool OverrideRandomness;
	bool OverrideSeed;
	int RandomnessMode;
	int RandomSeed;
};

struct FParamMap0_UniformRangedFloat001
{
	bool FixedRandomSeed;
	float Maximum;
	float Minimum;
	bool OverrideRandomness;
	bool OverrideSeed;
	int RandomnessMode;
	int RandomSeed;
};

struct FParamMap0_UniformRangedFloat
{
	bool FixedRandomSeed;
	float Maximum;
	float Minimum;
	bool OverrideRandomness;
	bool OverrideSeed;
	int RandomnessMode;
	int RandomSeed;
};

struct FParamMap0_Transient
{
	float3 MeshScaleFactor;
	float4 ParticleColorScaleFactor;
	float PhysicsDeltaTime;
	float PhysicsDrag;
	float3 PhysicsForce;
	float PhysicsRotationalDrag;
	float3 PhysicsRotationalForce;
	int ScalabilityEmitterExecutionState;
	float ScalabilityEmitterSpawnCountScale;
	int ScalabilityExecutionState;
	bool SpawningbCanEverSpawn;
	float2 SpriteSizeScaleFactor;
};

struct FParamMap0_TransformPosition
{
	bool ApplyScale;
	int DestinationSpace;
	float3 Position;
	int SourceSpace;
};

struct FParamMap0_SystemState
{
	float LoopDelay;
	float LoopDuration;
	bool RecalculateDurationEachLoop;
};

struct FParamMap0_System
{
	float Age;
	bool bCompleteOnInactive;
	float CurrentLoopDuration;
	int ExecutionState;
	int ExecutionStateSource;
	int LoopCount;
	float LoopedAge;
	float NormalizedLoopAge;
};

struct FParamMap0_SphereLocation
{
	int CoordinateSpace;
	bool FixedRandomSeed;
	bool HemisphereX;
	bool HemisphereY;
	bool HemisphereZ;
	float3 NonUniformScale;
	bool NormalizeThickness;
	float3 Offset;
	bool OverrideRandomness;
	bool OverrideSeed;
	int RandomnessMode;
	int RandomSeed;
	int SpawnGroupMask;
	float3 SphereOrigin;
	float SphereRadius;
	int SurfaceExpansionMode;
	float SurfaceOnlyBandThickness;
};

struct FParamMap0_SpawnRate
{
	int SpawnGroup;
	float SpawnProbability;
	float SpawnRate;
};

struct FParamMap0_SpawnBurst_Instantaneous
{
	float Age;
	int SpawnCount;
	int SpawnGroup;
	float SpawnProbability;
	float SpawnTime;
};

struct FParamMap0_SolveRotationalForcesAndVelocity
{
	float DeltaTime;
	float4 MeshOrientation;
	float RotationalInertia;
	float3 RotationalVelocity;
	bool WritetoIntrinsicProperties;
};

struct FParamMap0_SolveForcesAndVelocity
{
	float AccelerationLimit;
	float DeltaTime;
	float3 Force;
	float Mass;
	float3 Position;
	float3 PreviousVelocity;
	float SpeedLimit;
	float3 Velocity;
	bool WritetoIntrinsicProperties;
};

struct FParamMap0_SetVariables_8F6BFABF4A68DD0717680888D30C109A_INTEGER_02_SparksOutAdd
{
	float SphereRadius;
};

struct FParamMap0_SetVariables_8F6BFABF4A68DD0717680888D30C109A_INTEGER_01_SparksInAdd
{
	float SphereRadius;
};

struct FParamMap0_SetVariables_8F6BFABF4A68DD0717680888D30C109A
{
	FParamMap0_SetVariables_8F6BFABF4A68DD0717680888D30C109A_INTEGER_01_SparksInAdd INTEGER_01_SparksInAdd;
	FParamMap0_SetVariables_8F6BFABF4A68DD0717680888D30C109A_INTEGER_02_SparksOutAdd INTEGER_02_SparksOutAdd;
};

struct FParamMap0_SetVariables_1DE51F5340274BD0EEC2A088FDAFEA0B_Particles
{
	float3 Position;
};

struct FParamMap0_SetVariables_1DE51F5340274BD0EEC2A088FDAFEA0B
{
	FParamMap0_SetVariables_1DE51F5340274BD0EEC2A088FDAFEA0B_Particles Particles;
};

struct FParamMap0_ScaleSpriteSize
{
	float2 InitialSpriteSize;
	float2 ScaleFactor;
};

struct FParamMap0_ScaleMeshSize
{
	float3 InitialMeshScale;
	float3 ScaleFactor;
};

struct FParamMap0_ScaleColor
{
	float4 ColorValueToScale;
	float ScaleAlpha;
	float3 ScaleRGB;
};

struct FParamMap0_ParticleState
{
	float DeltaTime;
	float Lifetime;
};

struct FParamMap0_Particles_Initial
{
	float4 Color;
	float3 Scale;
	float2 SpriteSize;
};

struct FParamMap0_Particles
{
	float Age;
	float4 Color;
	float4 DynamicMaterialParameter;
	FParamMap0_Particles_Initial Initial;
	float Lifetime;
	float Mass;
	float MaterialRandom;
	float4 MeshOrientation;
	float NormalizedAge;
	float3 Position;
	float3 PreviousVelocity;
	float RotationalInertia;
	float3 RotationalVelocity;
	float3 Scale;
	float SpriteRotation;
	float2 SpriteSize;
	int UniqueID;
	float3 Velocity;
};

struct FParamMap0_OUTPUT_VAR_SphereLocation
{
	float3 SphereNormal;
};

struct FParamMap0_OUTPUT_VAR_SolveRotationalForcesAndVelocity
{
	float IncomingPhysicsRotationalDrag;
	float3 IncomingPhysicsRotationalForce;
	float4 MeshOrientation;
	float3 RotationalVelocity;
};

struct FParamMap0_OUTPUT_VAR_SolveForcesAndVelocity
{
	float IncomingPhysicsDrag;
	float3 IncomingPhysicsForce;
	float3 Position;
	float3 Velocity;
};

struct FParamMap0_OUTPUT_VAR_ParticleState
{
	bool FirstFrame;
};

struct FParamMap0_OUTPUT_VAR_AddVelocityFromPoint
{
	float NormalizedFalloff;
};

struct FParamMap0_OUTPUT_VAR
{
	FParamMap0_OUTPUT_VAR_AddVelocityFromPoint AddVelocityFromPoint;
	FParamMap0_OUTPUT_VAR_ParticleState ParticleState;
	FParamMap0_OUTPUT_VAR_SolveForcesAndVelocity SolveForcesAndVelocity;
	FParamMap0_OUTPUT_VAR_SolveRotationalForcesAndVelocity SolveRotationalForcesAndVelocity;
	FParamMap0_OUTPUT_VAR_SphereLocation SphereLocation;
};

struct FParamMap0_MeshRotationForce
{
	float LeverRadiusASC40cmASC41;
	float3 Rotation;
};

struct FParamMap0_MakeVector3_FromColor
{
	float4 Color;
};

struct FParamMap0_Local_SystemState
{
	bool LoopCountIncreased;
};

struct FParamMap0_Local_SphereLocation
{
	float3 SphereVector;
};

struct FParamMap0_Local_SpawnRate
{
	float InterpStartDT;
	float IntervalDT;
	int SpawnCount;
	float SpawnRate;
};

struct FParamMap0_Local_SolveRotationalForcesAndVelocity
{
	float DeltaTime;
	float3 ForceRotationsInRadians;
};

struct FParamMap0_Local_SolveForcesAndVelocity
{
	float DeltaTime;
	float Mass;
	float3 PhysicsForce;
};

struct FParamMap0_Local_KillParticlesInVolume
{
	bool IsInside;
};

struct FParamMap0_Local_EmitterState
{
	bool LoopCountIncreased;
	float LoopDuration;
	bool NoActiveEmitterParticles;
	int PreviousEmitterState;
};

struct FParamMap0_Local
{
	FParamMap0_Local_EmitterState EmitterState;
	FParamMap0_Local_KillParticlesInVolume KillParticlesInVolume;
	FParamMap0_Local_SolveForcesAndVelocity SolveForcesAndVelocity;
	FParamMap0_Local_SolveRotationalForcesAndVelocity SolveRotationalForcesAndVelocity;
	FParamMap0_Local_SpawnRate SpawnRate;
	FParamMap0_Local_SphereLocation SphereLocation;
	FParamMap0_Local_SystemState SystemState;
};

struct FParamMap0_KillParticlesInVolume
{
	float3 BoxSize;
	float ConeAngle;
	float3 ConeAxis;
	float ConeLength;
	bool InvertVolume;
	float3 OriginOffset;
	float3 PlaneNormal;
	float3 SlabAxis;
	float SlabWidth;
	float SphereRadius;
	float3 VolumeOrigin;
};

struct FParamMap0_INTEGER_02_SparksOutAdd_SpawnBurst_Instantaneous
{
	NiagaraSpawnInfo SpawnBurst;
};

struct FParamMap0_INTEGER_02_SparksOutAdd_Scalability
{
	float DistanceFraction;
};

struct FParamMap0_INTEGER_02_SparksOutAdd
{
	float Age;
	float CurrentLoopDelay;
	float CurrentLoopDuration;
	int ExecutionState;
	int ExecutionStateSource;
	bool LocalSpace;
	int LoopCount;
	float LoopedAge;
	float NormalizedLoopAge;
	FParamMap0_INTEGER_02_SparksOutAdd_Scalability Scalability;
	FParamMap0_INTEGER_02_SparksOutAdd_SpawnBurst_Instantaneous SpawnBurst_Instantaneous;
	float SphereRadius;
};

struct FParamMap0_INTEGER_02_ShockwaveAdd_SpawnBurst_Instantaneous
{
	NiagaraSpawnInfo SpawnBurst;
};

struct FParamMap0_INTEGER_02_ShockwaveAdd_Scalability
{
	float DistanceFraction;
};

struct FParamMap0_INTEGER_02_ShockwaveAdd002_SpawnBurst_Instantaneous
{
	NiagaraSpawnInfo SpawnBurst;
};

struct FParamMap0_INTEGER_02_ShockwaveAdd002_Scalability
{
	float DistanceFraction;
};

struct FParamMap0_INTEGER_02_ShockwaveAdd002
{
	float Age;
	float CurrentLoopDelay;
	float CurrentLoopDuration;
	int ExecutionState;
	int ExecutionStateSource;
	bool LocalSpace;
	int LoopCount;
	float LoopedAge;
	float NormalizedLoopAge;
	FParamMap0_INTEGER_02_ShockwaveAdd002_Scalability Scalability;
	FParamMap0_INTEGER_02_ShockwaveAdd002_SpawnBurst_Instantaneous SpawnBurst_Instantaneous;
};

struct FParamMap0_INTEGER_02_ShockwaveAdd001_SpawnBurst_Instantaneous
{
	NiagaraSpawnInfo SpawnBurst;
};

struct FParamMap0_INTEGER_02_ShockwaveAdd001_Scalability
{
	float DistanceFraction;
};

struct FParamMap0_INTEGER_02_ShockwaveAdd001
{
	float Age;
	float CurrentLoopDelay;
	float CurrentLoopDuration;
	int ExecutionState;
	int ExecutionStateSource;
	bool LocalSpace;
	int LoopCount;
	float LoopedAge;
	float NormalizedLoopAge;
	FParamMap0_INTEGER_02_ShockwaveAdd001_Scalability Scalability;
	FParamMap0_INTEGER_02_ShockwaveAdd001_SpawnBurst_Instantaneous SpawnBurst_Instantaneous;
};

struct FParamMap0_INTEGER_02_ShockwaveAdd
{
	float Age;
	float CurrentLoopDelay;
	float CurrentLoopDuration;
	int ExecutionState;
	int ExecutionStateSource;
	bool LocalSpace;
	int LoopCount;
	float LoopedAge;
	float NormalizedLoopAge;
	FParamMap0_INTEGER_02_ShockwaveAdd_Scalability Scalability;
	FParamMap0_INTEGER_02_ShockwaveAdd_SpawnBurst_Instantaneous SpawnBurst_Instantaneous;
};

struct FParamMap0_INTEGER_02_FireImpact2Add_SpawnBurst_Instantaneous
{
	NiagaraSpawnInfo SpawnBurst;
};

struct FParamMap0_INTEGER_02_FireImpact2Add_Scalability
{
	float DistanceFraction;
};

struct FParamMap0_INTEGER_02_FireImpact2Add
{
	float Age;
	float CurrentLoopDelay;
	float CurrentLoopDuration;
	int ExecutionState;
	int ExecutionStateSource;
	bool LocalSpace;
	int LoopCount;
	float LoopedAge;
	float NormalizedLoopAge;
	FParamMap0_INTEGER_02_FireImpact2Add_Scalability Scalability;
	FParamMap0_INTEGER_02_FireImpact2Add_SpawnBurst_Instantaneous SpawnBurst_Instantaneous;
};

struct FParamMap0_INTEGER_02_CylinderAdd_SpawnBurst_Instantaneous
{
	NiagaraSpawnInfo SpawnBurst;
};

struct FParamMap0_INTEGER_02_CylinderAdd_Scalability
{
	float DistanceFraction;
};

struct FParamMap0_INTEGER_02_CylinderAdd
{
	float Age;
	float CurrentLoopDelay;
	float CurrentLoopDuration;
	int ExecutionState;
	int ExecutionStateSource;
	bool LocalSpace;
	int LoopCount;
	float LoopedAge;
	float NormalizedLoopAge;
	FParamMap0_INTEGER_02_CylinderAdd_Scalability Scalability;
	FParamMap0_INTEGER_02_CylinderAdd_SpawnBurst_Instantaneous SpawnBurst_Instantaneous;
};

struct FParamMap0_INTEGER_02_BeamGround_SpawnBurst_Instantaneous
{
	NiagaraSpawnInfo SpawnBurst;
};

struct FParamMap0_INTEGER_02_BeamGround_Scalability
{
	float DistanceFraction;
};

struct FParamMap0_INTEGER_02_BeamGround
{
	float Age;
	float CurrentLoopDelay;
	float CurrentLoopDuration;
	int ExecutionState;
	int ExecutionStateSource;
	bool LocalSpace;
	int LoopCount;
	float LoopedAge;
	float NormalizedLoopAge;
	FParamMap0_INTEGER_02_BeamGround_Scalability Scalability;
	FParamMap0_INTEGER_02_BeamGround_SpawnBurst_Instantaneous SpawnBurst_Instantaneous;
};

struct FParamMap0_INTEGER_02_BeamFlash_SpawnBurst_Instantaneous
{
	NiagaraSpawnInfo SpawnBurst;
};

struct FParamMap0_INTEGER_02_BeamFlash_Scalability
{
	float DistanceFraction;
};

struct FParamMap0_INTEGER_02_BeamFlash
{
	float Age;
	float CurrentLoopDelay;
	float CurrentLoopDuration;
	int ExecutionState;
	int ExecutionStateSource;
	bool LocalSpace;
	int LoopCount;
	float LoopedAge;
	float NormalizedLoopAge;
	FParamMap0_INTEGER_02_BeamFlash_Scalability Scalability;
	FParamMap0_INTEGER_02_BeamFlash_SpawnBurst_Instantaneous SpawnBurst_Instantaneous;
};

struct FParamMap0_INTEGER_01_SparksInAdd_SpawnRate
{
	NiagaraSpawnInfo SpawnOutputInfo;
	float SpawnRemainder;
};

struct FParamMap0_INTEGER_01_SparksInAdd_Scalability
{
	float DistanceFraction;
};

struct FParamMap0_INTEGER_01_SparksInAdd
{
	float Age;
	float CurrentLoopDuration;
	int ExecutionState;
	int ExecutionStateSource;
	bool LocalSpace;
	int LoopCount;
	float LoopedAge;
	float NormalizedLoopAge;
	FParamMap0_INTEGER_01_SparksInAdd_Scalability Scalability;
	FParamMap0_INTEGER_01_SparksInAdd_SpawnRate SpawnRate;
	float SphereRadius;
};

struct FParamMap0_INTEGER_01_GroupBeamAdd_SpawnBurst_Instantaneous
{
	NiagaraSpawnInfo SpawnBurst;
};

struct FParamMap0_INTEGER_01_GroupBeamAdd_Scalability
{
	float DistanceFraction;
};

struct FParamMap0_INTEGER_01_GroupBeamAdd
{
	float Age;
	float CurrentLoopDuration;
	int ExecutionState;
	int ExecutionStateSource;
	bool LocalSpace;
	int LoopCount;
	float LoopedAge;
	float NormalizedLoopAge;
	FParamMap0_INTEGER_01_GroupBeamAdd_Scalability Scalability;
	FParamMap0_INTEGER_01_GroupBeamAdd_SpawnBurst_Instantaneous SpawnBurst_Instantaneous;
};

struct FParamMap0_INTEGER_01_CylinderAdd_SpawnBurst_Instantaneous
{
	NiagaraSpawnInfo SpawnBurst;
};

struct FParamMap0_INTEGER_01_CylinderAdd_Scalability
{
	float DistanceFraction;
};

struct FParamMap0_INTEGER_01_CylinderAdd
{
	float Age;
	float CurrentLoopDuration;
	int ExecutionState;
	int ExecutionStateSource;
	bool LocalSpace;
	int LoopCount;
	float LoopedAge;
	float NormalizedLoopAge;
	FParamMap0_INTEGER_01_CylinderAdd_Scalability Scalability;
	FParamMap0_INTEGER_01_CylinderAdd_SpawnBurst_Instantaneous SpawnBurst_Instantaneous;
};

struct FParamMap0_InitializeParticle
{
	float4 Color;
	float Lifetime;
	float Mass;
	float MaterialRandom;
	float3 MeshScale;
	float3 Position;
	float SpriteRotation;
	float2 SpriteSize;
	bool WriteColor;
	bool WriteLifetime;
	bool WriteMass;
	bool WriteMaterialRandom;
	bool WritePosition;
	bool WriteScale;
	bool WriteSpriteRotation;
	bool WriteSpriteSize;
};

struct FParamMap0_FloatFromCurve002
{
	float CurveIndex;
	float ScaleCurve;
};

struct FParamMap0_FloatFromCurve001
{
	float CurveIndex;
	float ScaleCurve;
};

struct FParamMap0_FloatFromCurve
{
	float CurveIndex;
	float ScaleCurve;
};

struct FParamMap0_Engine_System
{
	int TickCount;
};

struct FParamMap0_Engine_Owner
{
	int ExecutionState;
	float LODDistanceFraction;
	float3 Position;
	float4x4 SystemLocalToWorld;
	float4x4 SystemLocalToWorldNoScale;
	float4x4 SystemWorldToLocal;
	float4x4 SystemWorldToLocalNoScale;
};

struct FParamMap0_Engine_INTEGER_02_SparksOutAdd
{
	int NumParticles;
	float SpawnCountScale;
};

struct FParamMap0_Engine_INTEGER_02_ShockwaveAdd002
{
	int NumParticles;
	float SpawnCountScale;
};

struct FParamMap0_Engine_INTEGER_02_ShockwaveAdd001
{
	int NumParticles;
	float SpawnCountScale;
};

struct FParamMap0_Engine_INTEGER_02_ShockwaveAdd
{
	int NumParticles;
	float SpawnCountScale;
};

struct FParamMap0_Engine_INTEGER_02_FireImpact2Add
{
	int NumParticles;
	float SpawnCountScale;
};

struct FParamMap0_Engine_INTEGER_02_CylinderAdd
{
	int NumParticles;
	float SpawnCountScale;
};

struct FParamMap0_Engine_INTEGER_02_BeamGround
{
	int NumParticles;
	float SpawnCountScale;
};

struct FParamMap0_Engine_INTEGER_02_BeamFlash
{
	int NumParticles;
	float SpawnCountScale;
};

struct FParamMap0_Engine_INTEGER_01_SparksInAdd
{
	int NumParticles;
	float SpawnCountScale;
};

struct FParamMap0_Engine_INTEGER_01_GroupBeamAdd
{
	int NumParticles;
	float SpawnCountScale;
};

struct FParamMap0_Engine_INTEGER_01_CylinderAdd
{
	int NumParticles;
	float SpawnCountScale;
};

struct FParamMap0_Engine_Emitter
{
	int TotalSpawnedParticles;
};

struct FParamMap0_Engine
{
	float DeltaTime;
	FParamMap0_Engine_Emitter Emitter;
	FParamMap0_Engine_INTEGER_01_CylinderAdd INTEGER_01_CylinderAdd;
	FParamMap0_Engine_INTEGER_01_GroupBeamAdd INTEGER_01_GroupBeamAdd;
	FParamMap0_Engine_INTEGER_01_SparksInAdd INTEGER_01_SparksInAdd;
	FParamMap0_Engine_INTEGER_02_BeamFlash INTEGER_02_BeamFlash;
	FParamMap0_Engine_INTEGER_02_BeamGround INTEGER_02_BeamGround;
	FParamMap0_Engine_INTEGER_02_CylinderAdd INTEGER_02_CylinderAdd;
	FParamMap0_Engine_INTEGER_02_FireImpact2Add INTEGER_02_FireImpact2Add;
	FParamMap0_Engine_INTEGER_02_ShockwaveAdd INTEGER_02_ShockwaveAdd;
	FParamMap0_Engine_INTEGER_02_ShockwaveAdd001 INTEGER_02_ShockwaveAdd001;
	FParamMap0_Engine_INTEGER_02_ShockwaveAdd002 INTEGER_02_ShockwaveAdd002;
	FParamMap0_Engine_INTEGER_02_SparksOutAdd INTEGER_02_SparksOutAdd;
	float InverseDeltaTime;
	FParamMap0_Engine_Owner Owner;
	float RealTime;
	FParamMap0_Engine_System System;
	float Time;
};

struct FParamMap0_EmitterState
{
	float LoopDelay;
	float LoopDuration;
};

struct FParamMap0_Emitter
{
	int RandomSeed;
};

struct FParamMap0_DynamicMaterialParameters
{
	float Index0Param1;
	float Index0Param2;
	float Index0Param3;
	float Index0Param4;
	bool Param0WriteEnabled;
	bool Param1WriteEnabled;
	bool Param2WriteEnabled;
	bool Param3WriteEnabled;
};

struct FParamMap0_Divide_Float001
{
	float A;
	float B;
};

struct FParamMap0_Divide_Float
{
	float A;
	float B;
};

struct FParamMap0_DataInstance
{
	bool Alive;
};

struct FParamMap0_Constants_SystemState
{
	float LoopDelay;
	float LoopDuration;
};

struct FParamMap0_Constants_INTEGER_02_SparksOutAdd_UniformRangedInt
{
	int Maximum;
	int Minimum;
	int RandomSeed;
};

struct FParamMap0_Constants_INTEGER_02_SparksOutAdd_SpawnBurst_Instantaneous
{
	int SpawnGroup;
	float SpawnProbability;
	float SpawnTime;
};

struct FParamMap0_Constants_INTEGER_02_SparksOutAdd_EmitterState
{
	float LoopDuration;
};

struct FParamMap0_Constants_INTEGER_02_SparksOutAdd
{
	FParamMap0_Constants_INTEGER_02_SparksOutAdd_EmitterState EmitterState;
	FParamMap0_Constants_INTEGER_02_SparksOutAdd_SpawnBurst_Instantaneous SpawnBurst_Instantaneous;
	FParamMap0_Constants_INTEGER_02_SparksOutAdd_UniformRangedInt UniformRangedInt;
};

struct FParamMap0_Constants_INTEGER_02_ShockwaveAdd_SpawnBurst_Instantaneous
{
	int SpawnCount;
	int SpawnGroup;
	float SpawnProbability;
	float SpawnTime;
};

struct FParamMap0_Constants_INTEGER_02_ShockwaveAdd_EmitterState
{
	float LoopDuration;
};

struct FParamMap0_Constants_INTEGER_02_ShockwaveAdd002_SpawnBurst_Instantaneous
{
	int SpawnCount;
	int SpawnGroup;
	float SpawnProbability;
	float SpawnTime;
};

struct FParamMap0_Constants_INTEGER_02_ShockwaveAdd002_EmitterState
{
	float LoopDuration;
};

struct FParamMap0_Constants_INTEGER_02_ShockwaveAdd002
{
	FParamMap0_Constants_INTEGER_02_ShockwaveAdd002_EmitterState EmitterState;
	FParamMap0_Constants_INTEGER_02_ShockwaveAdd002_SpawnBurst_Instantaneous SpawnBurst_Instantaneous;
};

struct FParamMap0_Constants_INTEGER_02_ShockwaveAdd001_SpawnBurst_Instantaneous
{
	int SpawnCount;
	int SpawnGroup;
	float SpawnProbability;
	float SpawnTime;
};

struct FParamMap0_Constants_INTEGER_02_ShockwaveAdd001_EmitterState
{
	float LoopDuration;
};

struct FParamMap0_Constants_INTEGER_02_ShockwaveAdd001
{
	FParamMap0_Constants_INTEGER_02_ShockwaveAdd001_EmitterState EmitterState;
	FParamMap0_Constants_INTEGER_02_ShockwaveAdd001_SpawnBurst_Instantaneous SpawnBurst_Instantaneous;
};

struct FParamMap0_Constants_INTEGER_02_ShockwaveAdd
{
	FParamMap0_Constants_INTEGER_02_ShockwaveAdd_EmitterState EmitterState;
	FParamMap0_Constants_INTEGER_02_ShockwaveAdd_SpawnBurst_Instantaneous SpawnBurst_Instantaneous;
};

struct FParamMap0_Constants_INTEGER_02_FireImpact2Add_SpawnBurst_Instantaneous
{
	int SpawnCount;
	int SpawnGroup;
	float SpawnProbability;
	float SpawnTime;
};

struct FParamMap0_Constants_INTEGER_02_FireImpact2Add_EmitterState
{
	float LoopDuration;
};

struct FParamMap0_Constants_INTEGER_02_FireImpact2Add
{
	FParamMap0_Constants_INTEGER_02_FireImpact2Add_EmitterState EmitterState;
	FParamMap0_Constants_INTEGER_02_FireImpact2Add_SpawnBurst_Instantaneous SpawnBurst_Instantaneous;
};

struct FParamMap0_Constants_INTEGER_02_CylinderAdd_SpawnBurst_Instantaneous
{
	int SpawnCount;
	int SpawnGroup;
	float SpawnProbability;
	float SpawnTime;
};

struct FParamMap0_Constants_INTEGER_02_CylinderAdd_EmitterState
{
	float LoopDuration;
};

struct FParamMap0_Constants_INTEGER_02_CylinderAdd
{
	FParamMap0_Constants_INTEGER_02_CylinderAdd_EmitterState EmitterState;
	FParamMap0_Constants_INTEGER_02_CylinderAdd_SpawnBurst_Instantaneous SpawnBurst_Instantaneous;
};

struct FParamMap0_Constants_INTEGER_02_BeamGround_SpawnBurst_Instantaneous
{
	int SpawnCount;
	int SpawnGroup;
	float SpawnProbability;
	float SpawnTime;
};

struct FParamMap0_Constants_INTEGER_02_BeamGround_EmitterState
{
	float LoopDuration;
};

struct FParamMap0_Constants_INTEGER_02_BeamGround
{
	FParamMap0_Constants_INTEGER_02_BeamGround_EmitterState EmitterState;
	FParamMap0_Constants_INTEGER_02_BeamGround_SpawnBurst_Instantaneous SpawnBurst_Instantaneous;
};

struct FParamMap0_Constants_INTEGER_02_BeamFlash_SpawnBurst_Instantaneous
{
	int SpawnCount;
	int SpawnGroup;
	float SpawnProbability;
	float SpawnTime;
};

struct FParamMap0_Constants_INTEGER_02_BeamFlash_EmitterState
{
	float LoopDuration;
};

struct FParamMap0_Constants_INTEGER_02_BeamFlash
{
	FParamMap0_Constants_INTEGER_02_BeamFlash_EmitterState EmitterState;
	FParamMap0_Constants_INTEGER_02_BeamFlash_SpawnBurst_Instantaneous SpawnBurst_Instantaneous;
};

struct FParamMap0_Constants_INTEGER_01_SparksInAdd_SpawnRate
{
	int SpawnGroup;
	float SpawnProbability;
	float SpawnRate;
};

struct FParamMap0_Constants_INTEGER_01_SparksInAdd_EmitterState
{
	float LoopDelay;
};

struct FParamMap0_Constants_INTEGER_01_SparksInAdd_Divide_Float001
{
	float B;
};

struct FParamMap0_Constants_INTEGER_01_SparksInAdd
{
	FParamMap0_Constants_INTEGER_01_SparksInAdd_Divide_Float001 Divide_Float001;
	FParamMap0_Constants_INTEGER_01_SparksInAdd_EmitterState EmitterState;
	FParamMap0_Constants_INTEGER_01_SparksInAdd_SpawnRate SpawnRate;
};

struct FParamMap0_Constants_INTEGER_01_GroupBeamAdd_SpawnBurst_Instantaneous
{
	int SpawnCount;
	int SpawnGroup;
	float SpawnProbability;
	float SpawnTime;
};

struct FParamMap0_Constants_INTEGER_01_GroupBeamAdd_EmitterState
{
	float LoopDelay;
	float LoopDuration;
};

struct FParamMap0_Constants_INTEGER_01_GroupBeamAdd
{
	FParamMap0_Constants_INTEGER_01_GroupBeamAdd_EmitterState EmitterState;
	FParamMap0_Constants_INTEGER_01_GroupBeamAdd_SpawnBurst_Instantaneous SpawnBurst_Instantaneous;
};

struct FParamMap0_Constants_INTEGER_01_CylinderAdd_SpawnBurst_Instantaneous
{
	int SpawnCount;
	int SpawnGroup;
	float SpawnProbability;
	float SpawnTime;
};

struct FParamMap0_Constants_INTEGER_01_CylinderAdd_EmitterState
{
	float LoopDelay;
	float LoopDuration;
};

struct FParamMap0_Constants_INTEGER_01_CylinderAdd
{
	FParamMap0_Constants_INTEGER_01_CylinderAdd_EmitterState EmitterState;
	FParamMap0_Constants_INTEGER_01_CylinderAdd_SpawnBurst_Instantaneous SpawnBurst_Instantaneous;
};

struct FParamMap0_Constants
{
	FParamMap0_Constants_INTEGER_01_CylinderAdd INTEGER_01_CylinderAdd;
	FParamMap0_Constants_INTEGER_01_GroupBeamAdd INTEGER_01_GroupBeamAdd;
	FParamMap0_Constants_INTEGER_01_SparksInAdd INTEGER_01_SparksInAdd;
	FParamMap0_Constants_INTEGER_02_BeamFlash INTEGER_02_BeamFlash;
	FParamMap0_Constants_INTEGER_02_BeamGround INTEGER_02_BeamGround;
	FParamMap0_Constants_INTEGER_02_CylinderAdd INTEGER_02_CylinderAdd;
	FParamMap0_Constants_INTEGER_02_FireImpact2Add INTEGER_02_FireImpact2Add;
	FParamMap0_Constants_INTEGER_02_ShockwaveAdd INTEGER_02_ShockwaveAdd;
	FParamMap0_Constants_INTEGER_02_ShockwaveAdd001 INTEGER_02_ShockwaveAdd001;
	FParamMap0_Constants_INTEGER_02_ShockwaveAdd002 INTEGER_02_ShockwaveAdd002;
	FParamMap0_Constants_INTEGER_02_SparksOutAdd INTEGER_02_SparksOutAdd;
	FParamMap0_Constants_SystemState SystemState;
};

struct FParamMap0_AddVelocityFromPoint
{
	float3 DefaultPosition;
	bool InvertVelocityFalloff;
	float3 OriginOffset;
	int OriginOffsetCoordinateSpace;
	bool UseFalloffDistance;
	float VelocityFalloffDistance;
	float3 VelocityOrigin;
	float VelocityStrength;
};

struct FParamMap0
{
	FParamMap0_AddVelocityFromPoint AddVelocityFromPoint;
	FParamMap0_Constants Constants;
	FParamMap0_DataInstance DataInstance;
	FParamMap0_Divide_Float Divide_Float;
	FParamMap0_Divide_Float001 Divide_Float001;
	FParamMap0_DynamicMaterialParameters DynamicMaterialParameters;
	FParamMap0_Emitter Emitter;
	FParamMap0_EmitterState EmitterState;
	FParamMap0_Engine Engine;
	FParamMap0_FloatFromCurve FloatFromCurve;
	FParamMap0_FloatFromCurve001 FloatFromCurve001;
	FParamMap0_FloatFromCurve002 FloatFromCurve002;
	FParamMap0_InitializeParticle InitializeParticle;
	FParamMap0_INTEGER_01_CylinderAdd INTEGER_01_CylinderAdd;
	FParamMap0_INTEGER_01_GroupBeamAdd INTEGER_01_GroupBeamAdd;
	FParamMap0_INTEGER_01_SparksInAdd INTEGER_01_SparksInAdd;
	FParamMap0_INTEGER_02_BeamFlash INTEGER_02_BeamFlash;
	FParamMap0_INTEGER_02_BeamGround INTEGER_02_BeamGround;
	FParamMap0_INTEGER_02_CylinderAdd INTEGER_02_CylinderAdd;
	FParamMap0_INTEGER_02_FireImpact2Add INTEGER_02_FireImpact2Add;
	FParamMap0_INTEGER_02_ShockwaveAdd INTEGER_02_ShockwaveAdd;
	FParamMap0_INTEGER_02_ShockwaveAdd001 INTEGER_02_ShockwaveAdd001;
	FParamMap0_INTEGER_02_ShockwaveAdd002 INTEGER_02_ShockwaveAdd002;
	FParamMap0_INTEGER_02_SparksOutAdd INTEGER_02_SparksOutAdd;
	FParamMap0_KillParticlesInVolume KillParticlesInVolume;
	FParamMap0_Local Local;
	FParamMap0_MakeVector3_FromColor MakeVector3_FromColor;
	FParamMap0_MeshRotationForce MeshRotationForce;
	FParamMap0_OUTPUT_VAR OUTPUT_VAR;
	FParamMap0_Particles Particles;
	FParamMap0_ParticleState ParticleState;
	FParamMap0_ScaleColor ScaleColor;
	FParamMap0_ScaleMeshSize ScaleMeshSize;
	FParamMap0_ScaleSpriteSize ScaleSpriteSize;
	FParamMap0_SetVariables_1DE51F5340274BD0EEC2A088FDAFEA0B SetVariables_1DE51F5340274BD0EEC2A088FDAFEA0B;
	FParamMap0_SetVariables_8F6BFABF4A68DD0717680888D30C109A SetVariables_8F6BFABF4A68DD0717680888D30C109A;
	FParamMap0_SolveForcesAndVelocity SolveForcesAndVelocity;
	FParamMap0_SolveRotationalForcesAndVelocity SolveRotationalForcesAndVelocity;
	FParamMap0_SpawnBurst_Instantaneous SpawnBurst_Instantaneous;
	FParamMap0_SpawnRate SpawnRate;
	FParamMap0_SphereLocation SphereLocation;
	FParamMap0_System System;
	FParamMap0_SystemState SystemState;
	FParamMap0_TransformPosition TransformPosition;
	FParamMap0_Transient Transient;
	FParamMap0_UniformRangedFloat UniformRangedFloat;
	FParamMap0_UniformRangedFloat001 UniformRangedFloat001;
	FParamMap0_UniformRangedInt UniformRangedInt;
	FParamMap0_UniformRangedLinearColor UniformRangedLinearColor;
	FParamMap0_UniformRangedVector2D UniformRangedVector2D;
	FParamMap0_User User;
	FParamMap0_Vector2DFromFloat Vector2DFromFloat;
	FParamMap0_Vector2DFromFloat001 Vector2DFromFloat001;
	FParamMap0_VectorFromCurve VectorFromCurve;
	FParamMap0_VectorFromCurve001 VectorFromCurve001;
	FParamMap0_VectorFromFloat VectorFromFloat;
};

struct FSimulationContext
{
	FParamMap0 Map;
};

static float HackSpawnInterp = 1.0;
void SystemState_SystemChangeState002_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void SystemState_SystemChangeState_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void SystemState_SystemChangeState001_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void SystemState_Func_(inout FSimulationContext Context);
void EmitterState_EmitterChangeState002_INTEGER_02_ShockwaveAdd002_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_EmitterChangeState_INTEGER_02_ShockwaveAdd002_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_EmitterChangeState005_INTEGER_02_ShockwaveAdd002_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_EmitterChangeState003_INTEGER_02_ShockwaveAdd002_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_INTEGER_02_ShockwaveAdd002_Func_(inout FSimulationContext Context);
void SpawnBurst_Instantaneous_INTEGER_02_ShockwaveAdd002_Func_(inout FSimulationContext Context);
void INTEGER_02_ShockwaveAdd002_Func_(inout FSimulationContext Context);
void EmitterState_EmitterChangeState002_INTEGER_02_ShockwaveAdd001_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_EmitterChangeState_INTEGER_02_ShockwaveAdd001_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_EmitterChangeState005_INTEGER_02_ShockwaveAdd001_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_EmitterChangeState003_INTEGER_02_ShockwaveAdd001_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_INTEGER_02_ShockwaveAdd001_Func_(inout FSimulationContext Context);
void SpawnBurst_Instantaneous_INTEGER_02_ShockwaveAdd001_Func_(inout FSimulationContext Context);
void INTEGER_02_ShockwaveAdd001_Func_(inout FSimulationContext Context);
void EmitterState_EmitterChangeState002_INTEGER_02_ShockwaveAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_EmitterChangeState_INTEGER_02_ShockwaveAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_EmitterChangeState005_INTEGER_02_ShockwaveAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_EmitterChangeState003_INTEGER_02_ShockwaveAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_INTEGER_02_ShockwaveAdd_Func_(inout FSimulationContext Context);
void SpawnBurst_Instantaneous_INTEGER_02_ShockwaveAdd_Func_(inout FSimulationContext Context);
void INTEGER_02_ShockwaveAdd_Func_(inout FSimulationContext Context);
void EmitterState_EmitterChangeState002_INTEGER_02_FireImpact2Add_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_EmitterChangeState_INTEGER_02_FireImpact2Add_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_EmitterChangeState005_INTEGER_02_FireImpact2Add_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_EmitterChangeState003_INTEGER_02_FireImpact2Add_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_INTEGER_02_FireImpact2Add_Func_(inout FSimulationContext Context);
void SpawnBurst_Instantaneous_INTEGER_02_FireImpact2Add_Func_(inout FSimulationContext Context);
void INTEGER_02_FireImpact2Add_Func_(inout FSimulationContext Context);
void EmitterState_EmitterChangeState002_INTEGER_02_BeamFlash_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_EmitterChangeState_INTEGER_02_BeamFlash_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_EmitterChangeState005_INTEGER_02_BeamFlash_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_EmitterChangeState003_INTEGER_02_BeamFlash_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_INTEGER_02_BeamFlash_Func_(inout FSimulationContext Context);
void SpawnBurst_Instantaneous_INTEGER_02_BeamFlash_Func_(inout FSimulationContext Context);
void INTEGER_02_BeamFlash_Func_(inout FSimulationContext Context);
void EmitterState_EmitterChangeState002_INTEGER_02_BeamGround_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_EmitterChangeState_INTEGER_02_BeamGround_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_EmitterChangeState005_INTEGER_02_BeamGround_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_EmitterChangeState003_INTEGER_02_BeamGround_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_INTEGER_02_BeamGround_Func_(inout FSimulationContext Context);
void SpawnBurst_Instantaneous_INTEGER_02_BeamGround_Func_(inout FSimulationContext Context);
void INTEGER_02_BeamGround_Func_(inout FSimulationContext Context);
void EmitterState_EmitterChangeState002_INTEGER_02_SparksOutAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_EmitterChangeState_INTEGER_02_SparksOutAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_EmitterChangeState005_INTEGER_02_SparksOutAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_EmitterChangeState003_INTEGER_02_SparksOutAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_INTEGER_02_SparksOutAdd_Func_(inout FSimulationContext Context);
void GetRandomInfo_Emitter_Determinism_false_Emitter_Emitter_Emitter_Func_(int In_Seed, int In_Engine_System_TickCount, bool In_OverrideSeed, int In_Particles_UniqueID, int In_Emitter_RandomSeed, bool In_FixedOverrideSeed, int In_RandomnessMode, out NiagaraRandInfo Out_RandomInfo, out bool Out_UseDeterministicRandoms, inout FSimulationContext Context);
void RandomRangeInteger_Func_(int In_Min, int In_Max, int In_Seed, int In_RandomnessMode, bool In_OverrideSeed, bool In_FixedOverrideSeed, out int Out_Result, inout FSimulationContext Context);
void UniformRangedInt_INTEGER_02_SparksOutAdd_Func_(out int Out_UniformRangedInt, inout FSimulationContext Context);
void SpawnBurst_Instantaneous_INTEGER_02_SparksOutAdd_Func_(inout FSimulationContext Context);
void INTEGER_02_SparksOutAdd_Func_(inout FSimulationContext Context);
void EmitterState_EmitterChangeState002_INTEGER_02_CylinderAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_EmitterChangeState_INTEGER_02_CylinderAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_EmitterChangeState005_INTEGER_02_CylinderAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_EmitterChangeState003_INTEGER_02_CylinderAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_INTEGER_02_CylinderAdd_Func_(inout FSimulationContext Context);
void SpawnBurst_Instantaneous_INTEGER_02_CylinderAdd_Func_(inout FSimulationContext Context);
void INTEGER_02_CylinderAdd_Func_(inout FSimulationContext Context);
void Divide_Float001_INTEGER_01_SparksInAdd_Func_(out float Out_Result, inout FSimulationContext Context);
void EmitterState_EmitterChangeState002_INTEGER_01_SparksInAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_EmitterChangeState_INTEGER_01_SparksInAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_EmitterChangeState005_INTEGER_01_SparksInAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_EmitterChangeState003_INTEGER_01_SparksInAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_INTEGER_01_SparksInAdd_Func_(inout FSimulationContext Context);
void SpawnRate_INTEGER_01_SparksInAdd_Func_(inout FSimulationContext Context);
void INTEGER_01_SparksInAdd_Func_(inout FSimulationContext Context);
void EmitterState_EmitterChangeState002_INTEGER_01_GroupBeamAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_EmitterChangeState_INTEGER_01_GroupBeamAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_EmitterChangeState005_INTEGER_01_GroupBeamAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_EmitterChangeState003_INTEGER_01_GroupBeamAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_INTEGER_01_GroupBeamAdd_Func_(inout FSimulationContext Context);
void SpawnBurst_Instantaneous_INTEGER_01_GroupBeamAdd_Func_(inout FSimulationContext Context);
void INTEGER_01_GroupBeamAdd_Func_(inout FSimulationContext Context);
void EmitterState_EmitterChangeState002_INTEGER_01_CylinderAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_EmitterChangeState_INTEGER_01_CylinderAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_EmitterChangeState005_INTEGER_01_CylinderAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_EmitterChangeState003_INTEGER_01_CylinderAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);
void EmitterState_INTEGER_01_CylinderAdd_Func_(inout FSimulationContext Context);
void SpawnBurst_Instantaneous_INTEGER_01_CylinderAdd_Func_(inout FSimulationContext Context);
void INTEGER_01_CylinderAdd_Func_(inout FSimulationContext Context);
float GetSpawnInterpolation();
void SystemState_SystemChangeState002_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	bool Result11 = NiagaraAll(Context.Map.System.ExecutionStateSource <= In_NewStateSource);
	bool Result12 = In_Condition && Result11;
	int ENiagaraExecutionState_IfResult;
	int ENiagaraExecutionStateSource_IfResult;
	if(Result12)
	{
	ENiagaraExecutionState_IfResult = In_NewState;
	ENiagaraExecutionStateSource_IfResult = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult = Context.Map.System.ExecutionState;
	ENiagaraExecutionStateSource_IfResult = Context.Map.System.ExecutionStateSource;
	}
	Context.Map.System.ExecutionState = ENiagaraExecutionState_IfResult;
	Context.Map.System.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult;
}

void SystemState_SystemChangeState_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	bool Result13 = NiagaraAll(Context.Map.System.ExecutionStateSource <= In_NewStateSource);
	bool Result14 = In_Condition && Result13;
	int ENiagaraExecutionState_IfResult1;
	int ENiagaraExecutionStateSource_IfResult1;
	if(Result14)
	{
	ENiagaraExecutionState_IfResult1 = In_NewState;
	ENiagaraExecutionStateSource_IfResult1 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult1 = Context.Map.System.ExecutionState;
	ENiagaraExecutionStateSource_IfResult1 = Context.Map.System.ExecutionStateSource;
	}
	Context.Map.System.ExecutionState = ENiagaraExecutionState_IfResult1;
	Context.Map.System.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult1;
}

void SystemState_SystemChangeState001_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	bool Result16 = NiagaraAll(Context.Map.System.ExecutionStateSource <= In_NewStateSource);
	bool Result17 = In_Condition && Result16;
	int ENiagaraExecutionState_IfResult2;
	int ENiagaraExecutionStateSource_IfResult2;
	if(Result17)
	{
	ENiagaraExecutionState_IfResult2 = In_NewState;
	ENiagaraExecutionStateSource_IfResult2 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult2 = Context.Map.System.ExecutionState;
	ENiagaraExecutionStateSource_IfResult2 = Context.Map.System.ExecutionStateSource;
	}
	Context.Map.System.ExecutionState = ENiagaraExecutionState_IfResult2;
	Context.Map.System.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult2;
}

void SystemState_Func_(inout FSimulationContext Context)
{
	float Constant3 = 0;
	bool Result = NiagaraAll(Context.Map.System.Age == Constant3);
	float Constant4 = 0.016667;
	float Result1 = max(Context.Map.Constants.SystemState.LoopDuration, Constant4);
	float Duration_IfResult;
	if(Result)
	{
	Duration_IfResult = Result1;
	}
	else
	{
	Duration_IfResult = Context.Map.System.CurrentLoopDuration;
	}
	float Constant5 = 0;
	Context.Map.System.CurrentLoopDuration = Duration_IfResult;
	Context.Map.SystemState.LoopDelay = Constant5;
	float Result2 = Context.Map.System.Age + Context.Map.Engine.DeltaTime;
	float Result3 = Context.Map.Engine.DeltaTime + Context.Map.System.LoopedAge;
	float Result4 = Result3 / Context.Map.System.CurrentLoopDuration;
	int Count;
	Count = Result4;
	int Constant6 = 0;
	int Result5 = max(Count, Constant6);
	float Result6 = Result5 * Context.Map.System.CurrentLoopDuration;
	float Result7 = Result3 - Result6;
	int Constant7 = 0;
	bool Result8 = NiagaraAll(Result5 > Constant7);
	int Result9 = Result5 + Context.Map.System.LoopCount;
	Context.Map.System.Age = Result2;
	Context.Map.System.LoopedAge = Result7;
	Context.Map.Local.SystemState.LoopCountIncreased = Result8;
	Context.Map.System.LoopCount = Result9;
	float float_IfResult;
	if(Context.Map.SystemState.RecalculateDurationEachLoop)
	{
	float_IfResult = Context.Map.Constants.SystemState.LoopDuration;
	}
	else
	{
	float_IfResult = Context.Map.System.CurrentLoopDuration;
	}
	float CurrentLoopDuration_IfResult;
	float LoopedAge_IfResult;
	if(Context.Map.Local.SystemState.LoopCountIncreased)
	{
	CurrentLoopDuration_IfResult = float_IfResult;
	LoopedAge_IfResult = Context.Map.System.LoopedAge;
	}
	else
	{
	CurrentLoopDuration_IfResult = Context.Map.System.CurrentLoopDuration;
	LoopedAge_IfResult = Context.Map.System.LoopedAge;
	}
	Context.Map.System.CurrentLoopDuration = CurrentLoopDuration_IfResult;
	Context.Map.System.LoopedAge = LoopedAge_IfResult;
	float Result10 = Context.Map.System.LoopedAge / Context.Map.System.CurrentLoopDuration;
	Context.Map.System.NormalizedLoopAge = Result10;
	bool Constant8 = true;
	int Constant9 = 0;
	SystemState_SystemChangeState002_Func_(Context.Map.Transient.ScalabilityExecutionState, Constant8, Constant9, Context);
	int Constant10 = 3;
	bool Constant11 = false;
	int Constant12 = 3;
	SystemState_SystemChangeState_Func_(Constant10, Constant11, Constant12, Context);
	bool Constant13 = true;
	Context.Map.System.bCompleteOnInactive = Constant13;
	int Constant14 = 0;
	bool Result15 = NiagaraAll(Context.Map.Engine.Owner.ExecutionState != Constant14);
	int Constant15 = 2;
	SystemState_SystemChangeState001_Func_(Context.Map.Engine.Owner.ExecutionState, Result15, Constant15, Context);
}

void EmitterState_EmitterChangeState002_INTEGER_02_ShockwaveAdd002_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant26 = 3;
	bool Result33 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionState != Constant26);
	int Constant27 = 4;
	bool Result34 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionState != Constant27);
	bool Result35 = Result33 && Result34;
	bool Result36 = In_Condition && Result35;
	bool Result37 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionStateSource <= In_NewStateSource);
	bool Result38 = Result36 && Result37;
	int ENiagaraExecutionState_IfResult3;
	int ENiagaraExecutionStateSource_IfResult3;
	if(Result38)
	{
	ENiagaraExecutionState_IfResult3 = In_NewState;
	ENiagaraExecutionStateSource_IfResult3 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult3 = Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionState;
	ENiagaraExecutionStateSource_IfResult3 = Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionStateSource;
	}
	Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionState = ENiagaraExecutionState_IfResult3;
	Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult3;
}

void EmitterState_EmitterChangeState_INTEGER_02_ShockwaveAdd002_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant30 = 3;
	bool Result39 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionState != Constant30);
	int Constant31 = 4;
	bool Result40 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionState != Constant31);
	bool Result41 = Result39 && Result40;
	bool Result42 = In_Condition && Result41;
	bool Result43 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionStateSource <= In_NewStateSource);
	bool Result44 = Result42 && Result43;
	int ENiagaraExecutionState_IfResult4;
	int ENiagaraExecutionStateSource_IfResult4;
	if(Result44)
	{
	ENiagaraExecutionState_IfResult4 = In_NewState;
	ENiagaraExecutionStateSource_IfResult4 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult4 = Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionState;
	ENiagaraExecutionStateSource_IfResult4 = Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionStateSource;
	}
	Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionState = ENiagaraExecutionState_IfResult4;
	Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult4;
}

void EmitterState_EmitterChangeState005_INTEGER_02_ShockwaveAdd002_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant36 = 3;
	bool Result48 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionState != Constant36);
	int Constant37 = 4;
	bool Result49 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionState != Constant37);
	bool Result50 = Result48 && Result49;
	bool Result51 = In_Condition && Result50;
	bool Result52 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionStateSource <= In_NewStateSource);
	bool Result53 = Result51 && Result52;
	int ENiagaraExecutionState_IfResult5;
	int ENiagaraExecutionStateSource_IfResult5;
	if(Result53)
	{
	ENiagaraExecutionState_IfResult5 = In_NewState;
	ENiagaraExecutionStateSource_IfResult5 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult5 = Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionState;
	ENiagaraExecutionStateSource_IfResult5 = Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionStateSource;
	}
	Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionState = ENiagaraExecutionState_IfResult5;
	Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult5;
}

void EmitterState_EmitterChangeState003_INTEGER_02_ShockwaveAdd002_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant42 = 3;
	bool Result58 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionState != Constant42);
	int Constant43 = 4;
	bool Result59 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionState != Constant43);
	bool Result60 = Result58 && Result59;
	bool Result61 = In_Condition && Result60;
	bool Result62 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionStateSource <= In_NewStateSource);
	bool Result63 = Result61 && Result62;
	int ENiagaraExecutionState_IfResult6;
	int ENiagaraExecutionStateSource_IfResult6;
	if(Result63)
	{
	ENiagaraExecutionState_IfResult6 = In_NewState;
	ENiagaraExecutionStateSource_IfResult6 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult6 = Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionState;
	ENiagaraExecutionStateSource_IfResult6 = Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionStateSource;
	}
	Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionState = ENiagaraExecutionState_IfResult6;
	Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult6;
}

void EmitterState_INTEGER_02_ShockwaveAdd002_Func_(inout FSimulationContext Context)
{
	Context.Map.Local.EmitterState.PreviousEmitterState = Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionState;
	float Constant16 = 0.016667;
	float Result18 = max(Context.Map.Constants.INTEGER_02_ShockwaveAdd002.EmitterState.LoopDuration, Constant16);
	Context.Map.Local.EmitterState.LoopDuration = Result18;
	float Constant17 = 0;
	bool Result19 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd002.Age == Constant17);
	float Result20 = -(Context.Map.EmitterState.LoopDelay);
	float LoopedAge_IfResult1;
	float CurrentLoopDuration_IfResult1;
	float CurrentLoopDelay_IfResult;
	if(Result19)
	{
	LoopedAge_IfResult1 = Result20;
	CurrentLoopDuration_IfResult1 = Context.Map.Local.EmitterState.LoopDuration;
	CurrentLoopDelay_IfResult = Context.Map.EmitterState.LoopDelay;
	}
	else
	{
	LoopedAge_IfResult1 = Context.Map.INTEGER_02_ShockwaveAdd002.LoopedAge;
	CurrentLoopDuration_IfResult1 = Context.Map.INTEGER_02_ShockwaveAdd002.CurrentLoopDuration;
	CurrentLoopDelay_IfResult = Context.Map.INTEGER_02_ShockwaveAdd002.CurrentLoopDelay;
	}
	Context.Map.INTEGER_02_ShockwaveAdd002.LoopedAge = LoopedAge_IfResult1;
	Context.Map.INTEGER_02_ShockwaveAdd002.CurrentLoopDuration = CurrentLoopDuration_IfResult1;
	Context.Map.INTEGER_02_ShockwaveAdd002.CurrentLoopDelay = CurrentLoopDelay_IfResult;
	float Result21 = Context.Map.INTEGER_02_ShockwaveAdd002.Age + Context.Map.Engine.DeltaTime;
	float Result22 = Context.Map.Engine.DeltaTime + Context.Map.INTEGER_02_ShockwaveAdd002.LoopedAge;
	float Result23 = Result22 / Context.Map.INTEGER_02_ShockwaveAdd002.CurrentLoopDuration;
	int Count1;
	Count1 = Result23;
	int Constant18 = 0;
	int Result24 = max(Count1, Constant18);
	float Result25 = Result24 * Context.Map.INTEGER_02_ShockwaveAdd002.CurrentLoopDuration;
	float Result26 = Result22 - Result25;
	int Constant19 = 0;
	bool Result27 = NiagaraAll(Result24 > Constant19);
	int Result28 = Result24 + Context.Map.INTEGER_02_ShockwaveAdd002.LoopCount;
	Context.Map.INTEGER_02_ShockwaveAdd002.Age = Result21;
	Context.Map.INTEGER_02_ShockwaveAdd002.LoopedAge = Result26;
	Context.Map.Local.EmitterState.LoopCountIncreased = Result27;
	Context.Map.INTEGER_02_ShockwaveAdd002.LoopCount = Result28;
	float Constant20 = 0;
	float Duration_IfResult1;
	float LoopedAge_IfResult2;
	if(Context.Map.Local.EmitterState.LoopCountIncreased)
	{
	Duration_IfResult1 = Context.Map.Local.EmitterState.LoopDuration;
	LoopedAge_IfResult2 = Constant20;
	}
	else
	{
	Duration_IfResult1 = Context.Map.INTEGER_02_ShockwaveAdd002.CurrentLoopDuration;
	LoopedAge_IfResult2 = Context.Map.INTEGER_02_ShockwaveAdd002.LoopedAge;
	}
	Context.Map.INTEGER_02_ShockwaveAdd002.CurrentLoopDuration = Duration_IfResult1;
	Context.Map.INTEGER_02_ShockwaveAdd002.LoopedAge = LoopedAge_IfResult2;
	float Result29 = Context.Map.INTEGER_02_ShockwaveAdd002.LoopedAge / Context.Map.INTEGER_02_ShockwaveAdd002.CurrentLoopDuration;
	Context.Map.INTEGER_02_ShockwaveAdd002.NormalizedLoopAge = Result29;
	float Constant21 = 0;
	float Constant22 = 1.0001;
	float Result30 = clamp(Context.Map.Engine.Owner.LODDistanceFraction,Constant21,Constant22);
	Context.Map.INTEGER_02_ShockwaveAdd002.Scalability.DistanceFraction = Result30;
	int Constant23 = 0;
	Context.Map.Transient.ScalabilityEmitterExecutionState = Constant23;
	int Constant24 = 0;
	bool Result31 = NiagaraAll(Context.Map.Engine.INTEGER_02_ShockwaveAdd002.NumParticles == Constant24);
	Context.Map.Local.EmitterState.NoActiveEmitterParticles = Result31;
	int Constant25 = 0;
	bool Result32 = NiagaraAll(Context.Map.System.ExecutionStateSource == Constant25);
	EmitterState_EmitterChangeState002_INTEGER_02_ShockwaveAdd002_Func_(Context.Map.System.ExecutionState, Result32, Context.Map.System.ExecutionStateSource, Context);
	int Constant28 = 1;
	int Constant29 = 1;
	EmitterState_EmitterChangeState_INTEGER_02_ShockwaveAdd002_Func_(Constant28, Context.Map.Local.EmitterState.LoopCountIncreased, Constant29, Context);
	int Constant32 = 1;
	int Constant33 = 0;
	bool Result45 = NiagaraAll(Context.Map.System.ExecutionState != Constant33);
	int Constant34 = 2;
	bool Result46 = NiagaraAll(Context.Map.System.ExecutionStateSource == Constant34);
	bool Result47 = Result45 && Result46;
	int Constant35 = 1;
	EmitterState_EmitterChangeState005_INTEGER_02_ShockwaveAdd002_Func_(Constant32, Result47, Constant35, Context);
	int Constant38 = 3;
	int Constant39 = 0;
	bool Result54 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionState != Constant39);
	int Constant40 = 0;
	bool Result55 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionStateSource != Constant40);
	bool Result56 = Result54 && Result55;
	bool Result57 = Context.Map.Local.EmitterState.NoActiveEmitterParticles && Result56;
	int Constant41 = 3;
	EmitterState_EmitterChangeState003_INTEGER_02_ShockwaveAdd002_Func_(Constant38, Result57, Constant41, Context);
}

void SpawnBurst_Instantaneous_INTEGER_02_ShockwaveAdd002_Func_(inout FSimulationContext Context)
{
	Context.Map.SpawnBurst_Instantaneous.Age = Context.Map.INTEGER_02_ShockwaveAdd002.LoopedAge;
	float Result64 = Context.Map.SpawnBurst_Instantaneous.Age - Context.Map.Engine.DeltaTime;
	float Result65 = Context.Map.Constants.INTEGER_02_ShockwaveAdd002.SpawnBurst_Instantaneous.SpawnTime - Result64;
	float Constant44 = 0;
	float Output1;
	Output1 = Constant44;
	bool Result66 = NiagaraAll(Result65 >= Output1);
	float Result67 = Context.Map.Constants.INTEGER_02_ShockwaveAdd002.SpawnBurst_Instantaneous.SpawnTime - Context.Map.SpawnBurst_Instantaneous.Age;
	bool Result68 = NiagaraAll(Result67 < Output1);
	bool Result69 = Result66 && Result68;
	float Constant45 = 1;
	Context.Map.Transient.ScalabilityEmitterSpawnCountScale = Constant45;
	int Constant46 = 0;
	bool Result70 = NiagaraAll(Context.Map.Constants.INTEGER_02_ShockwaveAdd002.SpawnBurst_Instantaneous.SpawnCount == Constant46);
	float Constant47 = 0;
	float Result71 = Context.Map.Constants.INTEGER_02_ShockwaveAdd002.SpawnBurst_Instantaneous.SpawnCount * Context.Map.Transient.ScalabilityEmitterSpawnCountScale * Context.Map.Engine.INTEGER_02_ShockwaveAdd002.SpawnCountScale;
	float Constant48 = 1;
	float Result72 = max(Result71, Constant48);
	float float_IfResult1;
	if(Result70)
	{
	float_IfResult1 = Constant47;
	}
	else
	{
	float_IfResult1 = Result72;
	}
	float Constant49 = 0;
	NiagaraSpawnInfo Output11;
	Output11.Count = float_IfResult1;
	Output11.InterpStartDt = Result65;
	Output11.IntervalDt = Constant49;
	Output11.SpawnGroup = Context.Map.Constants.INTEGER_02_ShockwaveAdd002.SpawnBurst_Instantaneous.SpawnGroup;
	int Constant50 = 0;
	float Constant51 = 0;
	float Constant52 = 0;
	NiagaraSpawnInfo Output12;
	Output12.Count = Constant50;
	Output12.InterpStartDt = Constant51;
	Output12.SpawnGroup = Context.Map.Constants.INTEGER_02_ShockwaveAdd002.SpawnBurst_Instantaneous.SpawnGroup;
	Output12.IntervalDt = Constant52;
	NiagaraSpawnInfo SpawnInfo_IfResult;
	if(Result69)
	{
	SpawnInfo_IfResult = Output11;
	}
	else
	{
	SpawnInfo_IfResult = Output12;
	}
	Context.Map.INTEGER_02_ShockwaveAdd002.SpawnBurst_Instantaneous.SpawnBurst = SpawnInfo_IfResult;
	bool Constant53 = false;
	Context.Map.Transient.SpawningbCanEverSpawn = Constant53;
	bool Result73 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd002.LoopedAge <= Context.Map.Constants.INTEGER_02_ShockwaveAdd002.SpawnBurst_Instantaneous.SpawnTime);
	bool Result74 = Context.Map.Transient.SpawningbCanEverSpawn || Result73;
	Context.Map.Transient.SpawningbCanEverSpawn = Result74;
}

void INTEGER_02_ShockwaveAdd002_Func_(inout FSimulationContext Context)
{
	Context.Map.EmitterState.LoopDelay = Context.Map.User.ImpactDelay;
	EnterStatScope(3 );
	EmitterState_INTEGER_02_ShockwaveAdd002_Func_(Context);
	ExitStatScope( );
	EnterStatScope(4 );
	SpawnBurst_Instantaneous_INTEGER_02_ShockwaveAdd002_Func_(Context);
	ExitStatScope( );
}

void EmitterState_EmitterChangeState002_INTEGER_02_ShockwaveAdd001_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant64 = 3;
	bool Result90 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionState != Constant64);
	int Constant65 = 4;
	bool Result91 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionState != Constant65);
	bool Result92 = Result90 && Result91;
	bool Result93 = In_Condition && Result92;
	bool Result94 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionStateSource <= In_NewStateSource);
	bool Result95 = Result93 && Result94;
	int ENiagaraExecutionState_IfResult7;
	int ENiagaraExecutionStateSource_IfResult7;
	if(Result95)
	{
	ENiagaraExecutionState_IfResult7 = In_NewState;
	ENiagaraExecutionStateSource_IfResult7 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult7 = Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionState;
	ENiagaraExecutionStateSource_IfResult7 = Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionStateSource;
	}
	Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionState = ENiagaraExecutionState_IfResult7;
	Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult7;
}

void EmitterState_EmitterChangeState_INTEGER_02_ShockwaveAdd001_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant68 = 3;
	bool Result96 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionState != Constant68);
	int Constant69 = 4;
	bool Result97 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionState != Constant69);
	bool Result98 = Result96 && Result97;
	bool Result99 = In_Condition && Result98;
	bool Result100 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionStateSource <= In_NewStateSource);
	bool Result101 = Result99 && Result100;
	int ENiagaraExecutionState_IfResult8;
	int ENiagaraExecutionStateSource_IfResult8;
	if(Result101)
	{
	ENiagaraExecutionState_IfResult8 = In_NewState;
	ENiagaraExecutionStateSource_IfResult8 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult8 = Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionState;
	ENiagaraExecutionStateSource_IfResult8 = Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionStateSource;
	}
	Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionState = ENiagaraExecutionState_IfResult8;
	Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult8;
}

void EmitterState_EmitterChangeState005_INTEGER_02_ShockwaveAdd001_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant74 = 3;
	bool Result105 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionState != Constant74);
	int Constant75 = 4;
	bool Result106 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionState != Constant75);
	bool Result107 = Result105 && Result106;
	bool Result108 = In_Condition && Result107;
	bool Result109 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionStateSource <= In_NewStateSource);
	bool Result110 = Result108 && Result109;
	int ENiagaraExecutionState_IfResult9;
	int ENiagaraExecutionStateSource_IfResult9;
	if(Result110)
	{
	ENiagaraExecutionState_IfResult9 = In_NewState;
	ENiagaraExecutionStateSource_IfResult9 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult9 = Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionState;
	ENiagaraExecutionStateSource_IfResult9 = Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionStateSource;
	}
	Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionState = ENiagaraExecutionState_IfResult9;
	Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult9;
}

void EmitterState_EmitterChangeState003_INTEGER_02_ShockwaveAdd001_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant80 = 3;
	bool Result115 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionState != Constant80);
	int Constant81 = 4;
	bool Result116 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionState != Constant81);
	bool Result117 = Result115 && Result116;
	bool Result118 = In_Condition && Result117;
	bool Result119 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionStateSource <= In_NewStateSource);
	bool Result120 = Result118 && Result119;
	int ENiagaraExecutionState_IfResult10;
	int ENiagaraExecutionStateSource_IfResult10;
	if(Result120)
	{
	ENiagaraExecutionState_IfResult10 = In_NewState;
	ENiagaraExecutionStateSource_IfResult10 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult10 = Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionState;
	ENiagaraExecutionStateSource_IfResult10 = Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionStateSource;
	}
	Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionState = ENiagaraExecutionState_IfResult10;
	Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult10;
}

void EmitterState_INTEGER_02_ShockwaveAdd001_Func_(inout FSimulationContext Context)
{
	Context.Map.Local.EmitterState.PreviousEmitterState = Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionState;
	float Constant54 = 0.016667;
	float Result75 = max(Context.Map.Constants.INTEGER_02_ShockwaveAdd001.EmitterState.LoopDuration, Constant54);
	Context.Map.Local.EmitterState.LoopDuration = Result75;
	float Constant55 = 0;
	bool Result76 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd001.Age == Constant55);
	float Result77 = -(Context.Map.EmitterState.LoopDelay);
	float LoopedAge_IfResult3;
	float CurrentLoopDuration_IfResult2;
	float CurrentLoopDelay_IfResult1;
	if(Result76)
	{
	LoopedAge_IfResult3 = Result77;
	CurrentLoopDuration_IfResult2 = Context.Map.Local.EmitterState.LoopDuration;
	CurrentLoopDelay_IfResult1 = Context.Map.EmitterState.LoopDelay;
	}
	else
	{
	LoopedAge_IfResult3 = Context.Map.INTEGER_02_ShockwaveAdd001.LoopedAge;
	CurrentLoopDuration_IfResult2 = Context.Map.INTEGER_02_ShockwaveAdd001.CurrentLoopDuration;
	CurrentLoopDelay_IfResult1 = Context.Map.INTEGER_02_ShockwaveAdd001.CurrentLoopDelay;
	}
	Context.Map.INTEGER_02_ShockwaveAdd001.LoopedAge = LoopedAge_IfResult3;
	Context.Map.INTEGER_02_ShockwaveAdd001.CurrentLoopDuration = CurrentLoopDuration_IfResult2;
	Context.Map.INTEGER_02_ShockwaveAdd001.CurrentLoopDelay = CurrentLoopDelay_IfResult1;
	float Result78 = Context.Map.INTEGER_02_ShockwaveAdd001.Age + Context.Map.Engine.DeltaTime;
	float Result79 = Context.Map.Engine.DeltaTime + Context.Map.INTEGER_02_ShockwaveAdd001.LoopedAge;
	float Result80 = Result79 / Context.Map.INTEGER_02_ShockwaveAdd001.CurrentLoopDuration;
	int Count2;
	Count2 = Result80;
	int Constant56 = 0;
	int Result81 = max(Count2, Constant56);
	float Result82 = Result81 * Context.Map.INTEGER_02_ShockwaveAdd001.CurrentLoopDuration;
	float Result83 = Result79 - Result82;
	int Constant57 = 0;
	bool Result84 = NiagaraAll(Result81 > Constant57);
	int Result85 = Result81 + Context.Map.INTEGER_02_ShockwaveAdd001.LoopCount;
	Context.Map.INTEGER_02_ShockwaveAdd001.Age = Result78;
	Context.Map.INTEGER_02_ShockwaveAdd001.LoopedAge = Result83;
	Context.Map.Local.EmitterState.LoopCountIncreased = Result84;
	Context.Map.INTEGER_02_ShockwaveAdd001.LoopCount = Result85;
	float Constant58 = 0;
	float Duration_IfResult2;
	float LoopedAge_IfResult4;
	if(Context.Map.Local.EmitterState.LoopCountIncreased)
	{
	Duration_IfResult2 = Context.Map.Local.EmitterState.LoopDuration;
	LoopedAge_IfResult4 = Constant58;
	}
	else
	{
	Duration_IfResult2 = Context.Map.INTEGER_02_ShockwaveAdd001.CurrentLoopDuration;
	LoopedAge_IfResult4 = Context.Map.INTEGER_02_ShockwaveAdd001.LoopedAge;
	}
	Context.Map.INTEGER_02_ShockwaveAdd001.CurrentLoopDuration = Duration_IfResult2;
	Context.Map.INTEGER_02_ShockwaveAdd001.LoopedAge = LoopedAge_IfResult4;
	float Result86 = Context.Map.INTEGER_02_ShockwaveAdd001.LoopedAge / Context.Map.INTEGER_02_ShockwaveAdd001.CurrentLoopDuration;
	Context.Map.INTEGER_02_ShockwaveAdd001.NormalizedLoopAge = Result86;
	float Constant59 = 0;
	float Constant60 = 1.0001;
	float Result87 = clamp(Context.Map.Engine.Owner.LODDistanceFraction,Constant59,Constant60);
	Context.Map.INTEGER_02_ShockwaveAdd001.Scalability.DistanceFraction = Result87;
	int Constant61 = 0;
	Context.Map.Transient.ScalabilityEmitterExecutionState = Constant61;
	int Constant62 = 0;
	bool Result88 = NiagaraAll(Context.Map.Engine.INTEGER_02_ShockwaveAdd001.NumParticles == Constant62);
	Context.Map.Local.EmitterState.NoActiveEmitterParticles = Result88;
	int Constant63 = 0;
	bool Result89 = NiagaraAll(Context.Map.System.ExecutionStateSource == Constant63);
	EmitterState_EmitterChangeState002_INTEGER_02_ShockwaveAdd001_Func_(Context.Map.System.ExecutionState, Result89, Context.Map.System.ExecutionStateSource, Context);
	int Constant66 = 1;
	int Constant67 = 1;
	EmitterState_EmitterChangeState_INTEGER_02_ShockwaveAdd001_Func_(Constant66, Context.Map.Local.EmitterState.LoopCountIncreased, Constant67, Context);
	int Constant70 = 1;
	int Constant71 = 0;
	bool Result102 = NiagaraAll(Context.Map.System.ExecutionState != Constant71);
	int Constant72 = 2;
	bool Result103 = NiagaraAll(Context.Map.System.ExecutionStateSource == Constant72);
	bool Result104 = Result102 && Result103;
	int Constant73 = 1;
	EmitterState_EmitterChangeState005_INTEGER_02_ShockwaveAdd001_Func_(Constant70, Result104, Constant73, Context);
	int Constant76 = 3;
	int Constant77 = 0;
	bool Result111 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionState != Constant77);
	int Constant78 = 0;
	bool Result112 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionStateSource != Constant78);
	bool Result113 = Result111 && Result112;
	bool Result114 = Context.Map.Local.EmitterState.NoActiveEmitterParticles && Result113;
	int Constant79 = 3;
	EmitterState_EmitterChangeState003_INTEGER_02_ShockwaveAdd001_Func_(Constant76, Result114, Constant79, Context);
}

void SpawnBurst_Instantaneous_INTEGER_02_ShockwaveAdd001_Func_(inout FSimulationContext Context)
{
	Context.Map.SpawnBurst_Instantaneous.Age = Context.Map.INTEGER_02_ShockwaveAdd001.LoopedAge;
	float Result121 = Context.Map.SpawnBurst_Instantaneous.Age - Context.Map.Engine.DeltaTime;
	float Result122 = Context.Map.Constants.INTEGER_02_ShockwaveAdd001.SpawnBurst_Instantaneous.SpawnTime - Result121;
	float Constant82 = 0;
	float Output13;
	Output13 = Constant82;
	bool Result123 = NiagaraAll(Result122 >= Output13);
	float Result124 = Context.Map.Constants.INTEGER_02_ShockwaveAdd001.SpawnBurst_Instantaneous.SpawnTime - Context.Map.SpawnBurst_Instantaneous.Age;
	bool Result125 = NiagaraAll(Result124 < Output13);
	bool Result126 = Result123 && Result125;
	int Constant83 = 0;
	bool Result127 = NiagaraAll(Context.Map.Constants.INTEGER_02_ShockwaveAdd001.SpawnBurst_Instantaneous.SpawnCount == Constant83);
	float Constant84 = 0;
	float Result128 = Context.Map.Constants.INTEGER_02_ShockwaveAdd001.SpawnBurst_Instantaneous.SpawnCount * Context.Map.Transient.ScalabilityEmitterSpawnCountScale * Context.Map.Engine.INTEGER_02_ShockwaveAdd001.SpawnCountScale;
	float Constant85 = 1;
	float Result129 = max(Result128, Constant85);
	float float_IfResult2;
	if(Result127)
	{
	float_IfResult2 = Constant84;
	}
	else
	{
	float_IfResult2 = Result129;
	}
	float Constant86 = 0;
	NiagaraSpawnInfo Output14;
	Output14.Count = float_IfResult2;
	Output14.InterpStartDt = Result122;
	Output14.IntervalDt = Constant86;
	Output14.SpawnGroup = Context.Map.Constants.INTEGER_02_ShockwaveAdd001.SpawnBurst_Instantaneous.SpawnGroup;
	int Constant87 = 0;
	float Constant88 = 0;
	float Constant89 = 0;
	NiagaraSpawnInfo Output15;
	Output15.Count = Constant87;
	Output15.InterpStartDt = Constant88;
	Output15.SpawnGroup = Context.Map.Constants.INTEGER_02_ShockwaveAdd001.SpawnBurst_Instantaneous.SpawnGroup;
	Output15.IntervalDt = Constant89;
	NiagaraSpawnInfo SpawnInfo_IfResult1;
	if(Result126)
	{
	SpawnInfo_IfResult1 = Output14;
	}
	else
	{
	SpawnInfo_IfResult1 = Output15;
	}
	Context.Map.INTEGER_02_ShockwaveAdd001.SpawnBurst_Instantaneous.SpawnBurst = SpawnInfo_IfResult1;
	bool Result130 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd001.LoopedAge <= Context.Map.Constants.INTEGER_02_ShockwaveAdd001.SpawnBurst_Instantaneous.SpawnTime);
	bool Result131 = Context.Map.Transient.SpawningbCanEverSpawn || Result130;
	Context.Map.Transient.SpawningbCanEverSpawn = Result131;
}

void INTEGER_02_ShockwaveAdd001_Func_(inout FSimulationContext Context)
{
	Context.Map.EmitterState.LoopDelay = Context.Map.User.ImpactDelay;
	EnterStatScope(6 );
	EmitterState_INTEGER_02_ShockwaveAdd001_Func_(Context);
	ExitStatScope( );
	EnterStatScope(7 );
	SpawnBurst_Instantaneous_INTEGER_02_ShockwaveAdd001_Func_(Context);
	ExitStatScope( );
}

void EmitterState_EmitterChangeState002_INTEGER_02_ShockwaveAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant100 = 3;
	bool Result147 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd.ExecutionState != Constant100);
	int Constant101 = 4;
	bool Result148 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd.ExecutionState != Constant101);
	bool Result149 = Result147 && Result148;
	bool Result150 = In_Condition && Result149;
	bool Result151 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd.ExecutionStateSource <= In_NewStateSource);
	bool Result152 = Result150 && Result151;
	int ENiagaraExecutionState_IfResult11;
	int ENiagaraExecutionStateSource_IfResult11;
	if(Result152)
	{
	ENiagaraExecutionState_IfResult11 = In_NewState;
	ENiagaraExecutionStateSource_IfResult11 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult11 = Context.Map.INTEGER_02_ShockwaveAdd.ExecutionState;
	ENiagaraExecutionStateSource_IfResult11 = Context.Map.INTEGER_02_ShockwaveAdd.ExecutionStateSource;
	}
	Context.Map.INTEGER_02_ShockwaveAdd.ExecutionState = ENiagaraExecutionState_IfResult11;
	Context.Map.INTEGER_02_ShockwaveAdd.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult11;
}

void EmitterState_EmitterChangeState_INTEGER_02_ShockwaveAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant104 = 3;
	bool Result153 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd.ExecutionState != Constant104);
	int Constant105 = 4;
	bool Result154 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd.ExecutionState != Constant105);
	bool Result155 = Result153 && Result154;
	bool Result156 = In_Condition && Result155;
	bool Result157 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd.ExecutionStateSource <= In_NewStateSource);
	bool Result158 = Result156 && Result157;
	int ENiagaraExecutionState_IfResult12;
	int ENiagaraExecutionStateSource_IfResult12;
	if(Result158)
	{
	ENiagaraExecutionState_IfResult12 = In_NewState;
	ENiagaraExecutionStateSource_IfResult12 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult12 = Context.Map.INTEGER_02_ShockwaveAdd.ExecutionState;
	ENiagaraExecutionStateSource_IfResult12 = Context.Map.INTEGER_02_ShockwaveAdd.ExecutionStateSource;
	}
	Context.Map.INTEGER_02_ShockwaveAdd.ExecutionState = ENiagaraExecutionState_IfResult12;
	Context.Map.INTEGER_02_ShockwaveAdd.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult12;
}

void EmitterState_EmitterChangeState005_INTEGER_02_ShockwaveAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant110 = 3;
	bool Result162 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd.ExecutionState != Constant110);
	int Constant111 = 4;
	bool Result163 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd.ExecutionState != Constant111);
	bool Result164 = Result162 && Result163;
	bool Result165 = In_Condition && Result164;
	bool Result166 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd.ExecutionStateSource <= In_NewStateSource);
	bool Result167 = Result165 && Result166;
	int ENiagaraExecutionState_IfResult13;
	int ENiagaraExecutionStateSource_IfResult13;
	if(Result167)
	{
	ENiagaraExecutionState_IfResult13 = In_NewState;
	ENiagaraExecutionStateSource_IfResult13 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult13 = Context.Map.INTEGER_02_ShockwaveAdd.ExecutionState;
	ENiagaraExecutionStateSource_IfResult13 = Context.Map.INTEGER_02_ShockwaveAdd.ExecutionStateSource;
	}
	Context.Map.INTEGER_02_ShockwaveAdd.ExecutionState = ENiagaraExecutionState_IfResult13;
	Context.Map.INTEGER_02_ShockwaveAdd.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult13;
}

void EmitterState_EmitterChangeState003_INTEGER_02_ShockwaveAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant116 = 3;
	bool Result172 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd.ExecutionState != Constant116);
	int Constant117 = 4;
	bool Result173 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd.ExecutionState != Constant117);
	bool Result174 = Result172 && Result173;
	bool Result175 = In_Condition && Result174;
	bool Result176 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd.ExecutionStateSource <= In_NewStateSource);
	bool Result177 = Result175 && Result176;
	int ENiagaraExecutionState_IfResult14;
	int ENiagaraExecutionStateSource_IfResult14;
	if(Result177)
	{
	ENiagaraExecutionState_IfResult14 = In_NewState;
	ENiagaraExecutionStateSource_IfResult14 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult14 = Context.Map.INTEGER_02_ShockwaveAdd.ExecutionState;
	ENiagaraExecutionStateSource_IfResult14 = Context.Map.INTEGER_02_ShockwaveAdd.ExecutionStateSource;
	}
	Context.Map.INTEGER_02_ShockwaveAdd.ExecutionState = ENiagaraExecutionState_IfResult14;
	Context.Map.INTEGER_02_ShockwaveAdd.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult14;
}

void EmitterState_INTEGER_02_ShockwaveAdd_Func_(inout FSimulationContext Context)
{
	Context.Map.Local.EmitterState.PreviousEmitterState = Context.Map.INTEGER_02_ShockwaveAdd.ExecutionState;
	float Constant90 = 0.016667;
	float Result132 = max(Context.Map.Constants.INTEGER_02_ShockwaveAdd.EmitterState.LoopDuration, Constant90);
	Context.Map.Local.EmitterState.LoopDuration = Result132;
	float Constant91 = 0;
	bool Result133 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd.Age == Constant91);
	float Result134 = -(Context.Map.EmitterState.LoopDelay);
	float LoopedAge_IfResult5;
	float CurrentLoopDuration_IfResult3;
	float CurrentLoopDelay_IfResult2;
	if(Result133)
	{
	LoopedAge_IfResult5 = Result134;
	CurrentLoopDuration_IfResult3 = Context.Map.Local.EmitterState.LoopDuration;
	CurrentLoopDelay_IfResult2 = Context.Map.EmitterState.LoopDelay;
	}
	else
	{
	LoopedAge_IfResult5 = Context.Map.INTEGER_02_ShockwaveAdd.LoopedAge;
	CurrentLoopDuration_IfResult3 = Context.Map.INTEGER_02_ShockwaveAdd.CurrentLoopDuration;
	CurrentLoopDelay_IfResult2 = Context.Map.INTEGER_02_ShockwaveAdd.CurrentLoopDelay;
	}
	Context.Map.INTEGER_02_ShockwaveAdd.LoopedAge = LoopedAge_IfResult5;
	Context.Map.INTEGER_02_ShockwaveAdd.CurrentLoopDuration = CurrentLoopDuration_IfResult3;
	Context.Map.INTEGER_02_ShockwaveAdd.CurrentLoopDelay = CurrentLoopDelay_IfResult2;
	float Result135 = Context.Map.INTEGER_02_ShockwaveAdd.Age + Context.Map.Engine.DeltaTime;
	float Result136 = Context.Map.Engine.DeltaTime + Context.Map.INTEGER_02_ShockwaveAdd.LoopedAge;
	float Result137 = Result136 / Context.Map.INTEGER_02_ShockwaveAdd.CurrentLoopDuration;
	int Count3;
	Count3 = Result137;
	int Constant92 = 0;
	int Result138 = max(Count3, Constant92);
	float Result139 = Result138 * Context.Map.INTEGER_02_ShockwaveAdd.CurrentLoopDuration;
	float Result140 = Result136 - Result139;
	int Constant93 = 0;
	bool Result141 = NiagaraAll(Result138 > Constant93);
	int Result142 = Result138 + Context.Map.INTEGER_02_ShockwaveAdd.LoopCount;
	Context.Map.INTEGER_02_ShockwaveAdd.Age = Result135;
	Context.Map.INTEGER_02_ShockwaveAdd.LoopedAge = Result140;
	Context.Map.Local.EmitterState.LoopCountIncreased = Result141;
	Context.Map.INTEGER_02_ShockwaveAdd.LoopCount = Result142;
	float Constant94 = 0;
	float Duration_IfResult3;
	float LoopedAge_IfResult6;
	if(Context.Map.Local.EmitterState.LoopCountIncreased)
	{
	Duration_IfResult3 = Context.Map.Local.EmitterState.LoopDuration;
	LoopedAge_IfResult6 = Constant94;
	}
	else
	{
	Duration_IfResult3 = Context.Map.INTEGER_02_ShockwaveAdd.CurrentLoopDuration;
	LoopedAge_IfResult6 = Context.Map.INTEGER_02_ShockwaveAdd.LoopedAge;
	}
	Context.Map.INTEGER_02_ShockwaveAdd.CurrentLoopDuration = Duration_IfResult3;
	Context.Map.INTEGER_02_ShockwaveAdd.LoopedAge = LoopedAge_IfResult6;
	float Result143 = Context.Map.INTEGER_02_ShockwaveAdd.LoopedAge / Context.Map.INTEGER_02_ShockwaveAdd.CurrentLoopDuration;
	Context.Map.INTEGER_02_ShockwaveAdd.NormalizedLoopAge = Result143;
	float Constant95 = 0;
	float Constant96 = 1.0001;
	float Result144 = clamp(Context.Map.Engine.Owner.LODDistanceFraction,Constant95,Constant96);
	Context.Map.INTEGER_02_ShockwaveAdd.Scalability.DistanceFraction = Result144;
	int Constant97 = 0;
	Context.Map.Transient.ScalabilityEmitterExecutionState = Constant97;
	int Constant98 = 0;
	bool Result145 = NiagaraAll(Context.Map.Engine.INTEGER_02_ShockwaveAdd.NumParticles == Constant98);
	Context.Map.Local.EmitterState.NoActiveEmitterParticles = Result145;
	int Constant99 = 0;
	bool Result146 = NiagaraAll(Context.Map.System.ExecutionStateSource == Constant99);
	EmitterState_EmitterChangeState002_INTEGER_02_ShockwaveAdd_Func_(Context.Map.System.ExecutionState, Result146, Context.Map.System.ExecutionStateSource, Context);
	int Constant102 = 1;
	int Constant103 = 1;
	EmitterState_EmitterChangeState_INTEGER_02_ShockwaveAdd_Func_(Constant102, Context.Map.Local.EmitterState.LoopCountIncreased, Constant103, Context);
	int Constant106 = 1;
	int Constant107 = 0;
	bool Result159 = NiagaraAll(Context.Map.System.ExecutionState != Constant107);
	int Constant108 = 2;
	bool Result160 = NiagaraAll(Context.Map.System.ExecutionStateSource == Constant108);
	bool Result161 = Result159 && Result160;
	int Constant109 = 1;
	EmitterState_EmitterChangeState005_INTEGER_02_ShockwaveAdd_Func_(Constant106, Result161, Constant109, Context);
	int Constant112 = 3;
	int Constant113 = 0;
	bool Result168 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd.ExecutionState != Constant113);
	int Constant114 = 0;
	bool Result169 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd.ExecutionStateSource != Constant114);
	bool Result170 = Result168 && Result169;
	bool Result171 = Context.Map.Local.EmitterState.NoActiveEmitterParticles && Result170;
	int Constant115 = 3;
	EmitterState_EmitterChangeState003_INTEGER_02_ShockwaveAdd_Func_(Constant112, Result171, Constant115, Context);
}

void SpawnBurst_Instantaneous_INTEGER_02_ShockwaveAdd_Func_(inout FSimulationContext Context)
{
	Context.Map.SpawnBurst_Instantaneous.Age = Context.Map.INTEGER_02_ShockwaveAdd.LoopedAge;
	float Result178 = Context.Map.SpawnBurst_Instantaneous.Age - Context.Map.Engine.DeltaTime;
	float Result179 = Context.Map.Constants.INTEGER_02_ShockwaveAdd.SpawnBurst_Instantaneous.SpawnTime - Result178;
	float Constant118 = 0;
	float Output16;
	Output16 = Constant118;
	bool Result180 = NiagaraAll(Result179 >= Output16);
	float Result181 = Context.Map.Constants.INTEGER_02_ShockwaveAdd.SpawnBurst_Instantaneous.SpawnTime - Context.Map.SpawnBurst_Instantaneous.Age;
	bool Result182 = NiagaraAll(Result181 < Output16);
	bool Result183 = Result180 && Result182;
	int Constant119 = 0;
	bool Result184 = NiagaraAll(Context.Map.Constants.INTEGER_02_ShockwaveAdd.SpawnBurst_Instantaneous.SpawnCount == Constant119);
	float Constant120 = 0;
	float Result185 = Context.Map.Constants.INTEGER_02_ShockwaveAdd.SpawnBurst_Instantaneous.SpawnCount * Context.Map.Transient.ScalabilityEmitterSpawnCountScale * Context.Map.Engine.INTEGER_02_ShockwaveAdd.SpawnCountScale;
	float Constant121 = 1;
	float Result186 = max(Result185, Constant121);
	float float_IfResult3;
	if(Result184)
	{
	float_IfResult3 = Constant120;
	}
	else
	{
	float_IfResult3 = Result186;
	}
	float Constant122 = 0;
	NiagaraSpawnInfo Output17;
	Output17.Count = float_IfResult3;
	Output17.InterpStartDt = Result179;
	Output17.IntervalDt = Constant122;
	Output17.SpawnGroup = Context.Map.Constants.INTEGER_02_ShockwaveAdd.SpawnBurst_Instantaneous.SpawnGroup;
	int Constant123 = 0;
	float Constant124 = 0;
	float Constant125 = 0;
	NiagaraSpawnInfo Output18;
	Output18.Count = Constant123;
	Output18.InterpStartDt = Constant124;
	Output18.SpawnGroup = Context.Map.Constants.INTEGER_02_ShockwaveAdd.SpawnBurst_Instantaneous.SpawnGroup;
	Output18.IntervalDt = Constant125;
	NiagaraSpawnInfo SpawnInfo_IfResult2;
	if(Result183)
	{
	SpawnInfo_IfResult2 = Output17;
	}
	else
	{
	SpawnInfo_IfResult2 = Output18;
	}
	Context.Map.INTEGER_02_ShockwaveAdd.SpawnBurst_Instantaneous.SpawnBurst = SpawnInfo_IfResult2;
	bool Result187 = NiagaraAll(Context.Map.INTEGER_02_ShockwaveAdd.LoopedAge <= Context.Map.Constants.INTEGER_02_ShockwaveAdd.SpawnBurst_Instantaneous.SpawnTime);
	bool Result188 = Context.Map.Transient.SpawningbCanEverSpawn || Result187;
	Context.Map.Transient.SpawningbCanEverSpawn = Result188;
}

void INTEGER_02_ShockwaveAdd_Func_(inout FSimulationContext Context)
{
	Context.Map.EmitterState.LoopDelay = Context.Map.User.ImpactDelay;
	EnterStatScope(9 );
	EmitterState_INTEGER_02_ShockwaveAdd_Func_(Context);
	ExitStatScope( );
	EnterStatScope(10 );
	SpawnBurst_Instantaneous_INTEGER_02_ShockwaveAdd_Func_(Context);
	ExitStatScope( );
}

void EmitterState_EmitterChangeState002_INTEGER_02_FireImpact2Add_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant136 = 3;
	bool Result204 = NiagaraAll(Context.Map.INTEGER_02_FireImpact2Add.ExecutionState != Constant136);
	int Constant137 = 4;
	bool Result205 = NiagaraAll(Context.Map.INTEGER_02_FireImpact2Add.ExecutionState != Constant137);
	bool Result206 = Result204 && Result205;
	bool Result207 = In_Condition && Result206;
	bool Result208 = NiagaraAll(Context.Map.INTEGER_02_FireImpact2Add.ExecutionStateSource <= In_NewStateSource);
	bool Result209 = Result207 && Result208;
	int ENiagaraExecutionState_IfResult15;
	int ENiagaraExecutionStateSource_IfResult15;
	if(Result209)
	{
	ENiagaraExecutionState_IfResult15 = In_NewState;
	ENiagaraExecutionStateSource_IfResult15 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult15 = Context.Map.INTEGER_02_FireImpact2Add.ExecutionState;
	ENiagaraExecutionStateSource_IfResult15 = Context.Map.INTEGER_02_FireImpact2Add.ExecutionStateSource;
	}
	Context.Map.INTEGER_02_FireImpact2Add.ExecutionState = ENiagaraExecutionState_IfResult15;
	Context.Map.INTEGER_02_FireImpact2Add.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult15;
}

void EmitterState_EmitterChangeState_INTEGER_02_FireImpact2Add_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant140 = 3;
	bool Result210 = NiagaraAll(Context.Map.INTEGER_02_FireImpact2Add.ExecutionState != Constant140);
	int Constant141 = 4;
	bool Result211 = NiagaraAll(Context.Map.INTEGER_02_FireImpact2Add.ExecutionState != Constant141);
	bool Result212 = Result210 && Result211;
	bool Result213 = In_Condition && Result212;
	bool Result214 = NiagaraAll(Context.Map.INTEGER_02_FireImpact2Add.ExecutionStateSource <= In_NewStateSource);
	bool Result215 = Result213 && Result214;
	int ENiagaraExecutionState_IfResult16;
	int ENiagaraExecutionStateSource_IfResult16;
	if(Result215)
	{
	ENiagaraExecutionState_IfResult16 = In_NewState;
	ENiagaraExecutionStateSource_IfResult16 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult16 = Context.Map.INTEGER_02_FireImpact2Add.ExecutionState;
	ENiagaraExecutionStateSource_IfResult16 = Context.Map.INTEGER_02_FireImpact2Add.ExecutionStateSource;
	}
	Context.Map.INTEGER_02_FireImpact2Add.ExecutionState = ENiagaraExecutionState_IfResult16;
	Context.Map.INTEGER_02_FireImpact2Add.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult16;
}

void EmitterState_EmitterChangeState005_INTEGER_02_FireImpact2Add_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant146 = 3;
	bool Result219 = NiagaraAll(Context.Map.INTEGER_02_FireImpact2Add.ExecutionState != Constant146);
	int Constant147 = 4;
	bool Result220 = NiagaraAll(Context.Map.INTEGER_02_FireImpact2Add.ExecutionState != Constant147);
	bool Result221 = Result219 && Result220;
	bool Result222 = In_Condition && Result221;
	bool Result223 = NiagaraAll(Context.Map.INTEGER_02_FireImpact2Add.ExecutionStateSource <= In_NewStateSource);
	bool Result224 = Result222 && Result223;
	int ENiagaraExecutionState_IfResult17;
	int ENiagaraExecutionStateSource_IfResult17;
	if(Result224)
	{
	ENiagaraExecutionState_IfResult17 = In_NewState;
	ENiagaraExecutionStateSource_IfResult17 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult17 = Context.Map.INTEGER_02_FireImpact2Add.ExecutionState;
	ENiagaraExecutionStateSource_IfResult17 = Context.Map.INTEGER_02_FireImpact2Add.ExecutionStateSource;
	}
	Context.Map.INTEGER_02_FireImpact2Add.ExecutionState = ENiagaraExecutionState_IfResult17;
	Context.Map.INTEGER_02_FireImpact2Add.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult17;
}

void EmitterState_EmitterChangeState003_INTEGER_02_FireImpact2Add_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant152 = 3;
	bool Result229 = NiagaraAll(Context.Map.INTEGER_02_FireImpact2Add.ExecutionState != Constant152);
	int Constant153 = 4;
	bool Result230 = NiagaraAll(Context.Map.INTEGER_02_FireImpact2Add.ExecutionState != Constant153);
	bool Result231 = Result229 && Result230;
	bool Result232 = In_Condition && Result231;
	bool Result233 = NiagaraAll(Context.Map.INTEGER_02_FireImpact2Add.ExecutionStateSource <= In_NewStateSource);
	bool Result234 = Result232 && Result233;
	int ENiagaraExecutionState_IfResult18;
	int ENiagaraExecutionStateSource_IfResult18;
	if(Result234)
	{
	ENiagaraExecutionState_IfResult18 = In_NewState;
	ENiagaraExecutionStateSource_IfResult18 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult18 = Context.Map.INTEGER_02_FireImpact2Add.ExecutionState;
	ENiagaraExecutionStateSource_IfResult18 = Context.Map.INTEGER_02_FireImpact2Add.ExecutionStateSource;
	}
	Context.Map.INTEGER_02_FireImpact2Add.ExecutionState = ENiagaraExecutionState_IfResult18;
	Context.Map.INTEGER_02_FireImpact2Add.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult18;
}

void EmitterState_INTEGER_02_FireImpact2Add_Func_(inout FSimulationContext Context)
{
	Context.Map.Local.EmitterState.PreviousEmitterState = Context.Map.INTEGER_02_FireImpact2Add.ExecutionState;
	float Constant126 = 0.016667;
	float Result189 = max(Context.Map.Constants.INTEGER_02_FireImpact2Add.EmitterState.LoopDuration, Constant126);
	Context.Map.Local.EmitterState.LoopDuration = Result189;
	float Constant127 = 0;
	bool Result190 = NiagaraAll(Context.Map.INTEGER_02_FireImpact2Add.Age == Constant127);
	float Result191 = -(Context.Map.EmitterState.LoopDelay);
	float LoopedAge_IfResult7;
	float CurrentLoopDuration_IfResult4;
	float CurrentLoopDelay_IfResult3;
	if(Result190)
	{
	LoopedAge_IfResult7 = Result191;
	CurrentLoopDuration_IfResult4 = Context.Map.Local.EmitterState.LoopDuration;
	CurrentLoopDelay_IfResult3 = Context.Map.EmitterState.LoopDelay;
	}
	else
	{
	LoopedAge_IfResult7 = Context.Map.INTEGER_02_FireImpact2Add.LoopedAge;
	CurrentLoopDuration_IfResult4 = Context.Map.INTEGER_02_FireImpact2Add.CurrentLoopDuration;
	CurrentLoopDelay_IfResult3 = Context.Map.INTEGER_02_FireImpact2Add.CurrentLoopDelay;
	}
	Context.Map.INTEGER_02_FireImpact2Add.LoopedAge = LoopedAge_IfResult7;
	Context.Map.INTEGER_02_FireImpact2Add.CurrentLoopDuration = CurrentLoopDuration_IfResult4;
	Context.Map.INTEGER_02_FireImpact2Add.CurrentLoopDelay = CurrentLoopDelay_IfResult3;
	float Result192 = Context.Map.INTEGER_02_FireImpact2Add.Age + Context.Map.Engine.DeltaTime;
	float Result193 = Context.Map.Engine.DeltaTime + Context.Map.INTEGER_02_FireImpact2Add.LoopedAge;
	float Result194 = Result193 / Context.Map.INTEGER_02_FireImpact2Add.CurrentLoopDuration;
	int Count4;
	Count4 = Result194;
	int Constant128 = 0;
	int Result195 = max(Count4, Constant128);
	float Result196 = Result195 * Context.Map.INTEGER_02_FireImpact2Add.CurrentLoopDuration;
	float Result197 = Result193 - Result196;
	int Constant129 = 0;
	bool Result198 = NiagaraAll(Result195 > Constant129);
	int Result199 = Result195 + Context.Map.INTEGER_02_FireImpact2Add.LoopCount;
	Context.Map.INTEGER_02_FireImpact2Add.Age = Result192;
	Context.Map.INTEGER_02_FireImpact2Add.LoopedAge = Result197;
	Context.Map.Local.EmitterState.LoopCountIncreased = Result198;
	Context.Map.INTEGER_02_FireImpact2Add.LoopCount = Result199;
	float Constant130 = 0;
	float Duration_IfResult4;
	float LoopedAge_IfResult8;
	if(Context.Map.Local.EmitterState.LoopCountIncreased)
	{
	Duration_IfResult4 = Context.Map.Local.EmitterState.LoopDuration;
	LoopedAge_IfResult8 = Constant130;
	}
	else
	{
	Duration_IfResult4 = Context.Map.INTEGER_02_FireImpact2Add.CurrentLoopDuration;
	LoopedAge_IfResult8 = Context.Map.INTEGER_02_FireImpact2Add.LoopedAge;
	}
	Context.Map.INTEGER_02_FireImpact2Add.CurrentLoopDuration = Duration_IfResult4;
	Context.Map.INTEGER_02_FireImpact2Add.LoopedAge = LoopedAge_IfResult8;
	float Result200 = Context.Map.INTEGER_02_FireImpact2Add.LoopedAge / Context.Map.INTEGER_02_FireImpact2Add.CurrentLoopDuration;
	Context.Map.INTEGER_02_FireImpact2Add.NormalizedLoopAge = Result200;
	float Constant131 = 0;
	float Constant132 = 1.0001;
	float Result201 = clamp(Context.Map.Engine.Owner.LODDistanceFraction,Constant131,Constant132);
	Context.Map.INTEGER_02_FireImpact2Add.Scalability.DistanceFraction = Result201;
	int Constant133 = 0;
	Context.Map.Transient.ScalabilityEmitterExecutionState = Constant133;
	int Constant134 = 0;
	bool Result202 = NiagaraAll(Context.Map.Engine.INTEGER_02_FireImpact2Add.NumParticles == Constant134);
	Context.Map.Local.EmitterState.NoActiveEmitterParticles = Result202;
	int Constant135 = 0;
	bool Result203 = NiagaraAll(Context.Map.System.ExecutionStateSource == Constant135);
	EmitterState_EmitterChangeState002_INTEGER_02_FireImpact2Add_Func_(Context.Map.System.ExecutionState, Result203, Context.Map.System.ExecutionStateSource, Context);
	int Constant138 = 1;
	int Constant139 = 1;
	EmitterState_EmitterChangeState_INTEGER_02_FireImpact2Add_Func_(Constant138, Context.Map.Local.EmitterState.LoopCountIncreased, Constant139, Context);
	int Constant142 = 1;
	int Constant143 = 0;
	bool Result216 = NiagaraAll(Context.Map.System.ExecutionState != Constant143);
	int Constant144 = 2;
	bool Result217 = NiagaraAll(Context.Map.System.ExecutionStateSource == Constant144);
	bool Result218 = Result216 && Result217;
	int Constant145 = 1;
	EmitterState_EmitterChangeState005_INTEGER_02_FireImpact2Add_Func_(Constant142, Result218, Constant145, Context);
	int Constant148 = 3;
	int Constant149 = 0;
	bool Result225 = NiagaraAll(Context.Map.INTEGER_02_FireImpact2Add.ExecutionState != Constant149);
	int Constant150 = 0;
	bool Result226 = NiagaraAll(Context.Map.INTEGER_02_FireImpact2Add.ExecutionStateSource != Constant150);
	bool Result227 = Result225 && Result226;
	bool Result228 = Context.Map.Local.EmitterState.NoActiveEmitterParticles && Result227;
	int Constant151 = 3;
	EmitterState_EmitterChangeState003_INTEGER_02_FireImpact2Add_Func_(Constant148, Result228, Constant151, Context);
}

void SpawnBurst_Instantaneous_INTEGER_02_FireImpact2Add_Func_(inout FSimulationContext Context)
{
	Context.Map.SpawnBurst_Instantaneous.Age = Context.Map.INTEGER_02_FireImpact2Add.LoopedAge;
	float Result235 = Context.Map.SpawnBurst_Instantaneous.Age - Context.Map.Engine.DeltaTime;
	float Result236 = Context.Map.Constants.INTEGER_02_FireImpact2Add.SpawnBurst_Instantaneous.SpawnTime - Result235;
	float Constant154 = 0;
	float Output19;
	Output19 = Constant154;
	bool Result237 = NiagaraAll(Result236 >= Output19);
	float Result238 = Context.Map.Constants.INTEGER_02_FireImpact2Add.SpawnBurst_Instantaneous.SpawnTime - Context.Map.SpawnBurst_Instantaneous.Age;
	bool Result239 = NiagaraAll(Result238 < Output19);
	bool Result240 = Result237 && Result239;
	int Constant155 = 0;
	bool Result241 = NiagaraAll(Context.Map.Constants.INTEGER_02_FireImpact2Add.SpawnBurst_Instantaneous.SpawnCount == Constant155);
	float Constant156 = 0;
	float Result242 = Context.Map.Constants.INTEGER_02_FireImpact2Add.SpawnBurst_Instantaneous.SpawnCount * Context.Map.Transient.ScalabilityEmitterSpawnCountScale * Context.Map.Engine.INTEGER_02_FireImpact2Add.SpawnCountScale;
	float Constant157 = 1;
	float Result243 = max(Result242, Constant157);
	float float_IfResult4;
	if(Result241)
	{
	float_IfResult4 = Constant156;
	}
	else
	{
	float_IfResult4 = Result243;
	}
	float Constant158 = 0;
	NiagaraSpawnInfo Output110;
	Output110.Count = float_IfResult4;
	Output110.InterpStartDt = Result236;
	Output110.IntervalDt = Constant158;
	Output110.SpawnGroup = Context.Map.Constants.INTEGER_02_FireImpact2Add.SpawnBurst_Instantaneous.SpawnGroup;
	int Constant159 = 0;
	float Constant160 = 0;
	float Constant161 = 0;
	NiagaraSpawnInfo Output111;
	Output111.Count = Constant159;
	Output111.InterpStartDt = Constant160;
	Output111.SpawnGroup = Context.Map.Constants.INTEGER_02_FireImpact2Add.SpawnBurst_Instantaneous.SpawnGroup;
	Output111.IntervalDt = Constant161;
	NiagaraSpawnInfo SpawnInfo_IfResult3;
	if(Result240)
	{
	SpawnInfo_IfResult3 = Output110;
	}
	else
	{
	SpawnInfo_IfResult3 = Output111;
	}
	Context.Map.INTEGER_02_FireImpact2Add.SpawnBurst_Instantaneous.SpawnBurst = SpawnInfo_IfResult3;
	bool Result244 = NiagaraAll(Context.Map.INTEGER_02_FireImpact2Add.LoopedAge <= Context.Map.Constants.INTEGER_02_FireImpact2Add.SpawnBurst_Instantaneous.SpawnTime);
	bool Result245 = Context.Map.Transient.SpawningbCanEverSpawn || Result244;
	Context.Map.Transient.SpawningbCanEverSpawn = Result245;
}

void INTEGER_02_FireImpact2Add_Func_(inout FSimulationContext Context)
{
	Context.Map.EmitterState.LoopDelay = Context.Map.User.ImpactDelay;
	EnterStatScope(12 );
	EmitterState_INTEGER_02_FireImpact2Add_Func_(Context);
	ExitStatScope( );
	EnterStatScope(13 );
	SpawnBurst_Instantaneous_INTEGER_02_FireImpact2Add_Func_(Context);
	ExitStatScope( );
}

void EmitterState_EmitterChangeState002_INTEGER_02_BeamFlash_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant172 = 3;
	bool Result261 = NiagaraAll(Context.Map.INTEGER_02_BeamFlash.ExecutionState != Constant172);
	int Constant173 = 4;
	bool Result262 = NiagaraAll(Context.Map.INTEGER_02_BeamFlash.ExecutionState != Constant173);
	bool Result263 = Result261 && Result262;
	bool Result264 = In_Condition && Result263;
	bool Result265 = NiagaraAll(Context.Map.INTEGER_02_BeamFlash.ExecutionStateSource <= In_NewStateSource);
	bool Result266 = Result264 && Result265;
	int ENiagaraExecutionState_IfResult19;
	int ENiagaraExecutionStateSource_IfResult19;
	if(Result266)
	{
	ENiagaraExecutionState_IfResult19 = In_NewState;
	ENiagaraExecutionStateSource_IfResult19 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult19 = Context.Map.INTEGER_02_BeamFlash.ExecutionState;
	ENiagaraExecutionStateSource_IfResult19 = Context.Map.INTEGER_02_BeamFlash.ExecutionStateSource;
	}
	Context.Map.INTEGER_02_BeamFlash.ExecutionState = ENiagaraExecutionState_IfResult19;
	Context.Map.INTEGER_02_BeamFlash.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult19;
}

void EmitterState_EmitterChangeState_INTEGER_02_BeamFlash_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant176 = 3;
	bool Result267 = NiagaraAll(Context.Map.INTEGER_02_BeamFlash.ExecutionState != Constant176);
	int Constant177 = 4;
	bool Result268 = NiagaraAll(Context.Map.INTEGER_02_BeamFlash.ExecutionState != Constant177);
	bool Result269 = Result267 && Result268;
	bool Result270 = In_Condition && Result269;
	bool Result271 = NiagaraAll(Context.Map.INTEGER_02_BeamFlash.ExecutionStateSource <= In_NewStateSource);
	bool Result272 = Result270 && Result271;
	int ENiagaraExecutionState_IfResult20;
	int ENiagaraExecutionStateSource_IfResult20;
	if(Result272)
	{
	ENiagaraExecutionState_IfResult20 = In_NewState;
	ENiagaraExecutionStateSource_IfResult20 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult20 = Context.Map.INTEGER_02_BeamFlash.ExecutionState;
	ENiagaraExecutionStateSource_IfResult20 = Context.Map.INTEGER_02_BeamFlash.ExecutionStateSource;
	}
	Context.Map.INTEGER_02_BeamFlash.ExecutionState = ENiagaraExecutionState_IfResult20;
	Context.Map.INTEGER_02_BeamFlash.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult20;
}

void EmitterState_EmitterChangeState005_INTEGER_02_BeamFlash_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant182 = 3;
	bool Result276 = NiagaraAll(Context.Map.INTEGER_02_BeamFlash.ExecutionState != Constant182);
	int Constant183 = 4;
	bool Result277 = NiagaraAll(Context.Map.INTEGER_02_BeamFlash.ExecutionState != Constant183);
	bool Result278 = Result276 && Result277;
	bool Result279 = In_Condition && Result278;
	bool Result280 = NiagaraAll(Context.Map.INTEGER_02_BeamFlash.ExecutionStateSource <= In_NewStateSource);
	bool Result281 = Result279 && Result280;
	int ENiagaraExecutionState_IfResult21;
	int ENiagaraExecutionStateSource_IfResult21;
	if(Result281)
	{
	ENiagaraExecutionState_IfResult21 = In_NewState;
	ENiagaraExecutionStateSource_IfResult21 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult21 = Context.Map.INTEGER_02_BeamFlash.ExecutionState;
	ENiagaraExecutionStateSource_IfResult21 = Context.Map.INTEGER_02_BeamFlash.ExecutionStateSource;
	}
	Context.Map.INTEGER_02_BeamFlash.ExecutionState = ENiagaraExecutionState_IfResult21;
	Context.Map.INTEGER_02_BeamFlash.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult21;
}

void EmitterState_EmitterChangeState003_INTEGER_02_BeamFlash_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant188 = 3;
	bool Result286 = NiagaraAll(Context.Map.INTEGER_02_BeamFlash.ExecutionState != Constant188);
	int Constant189 = 4;
	bool Result287 = NiagaraAll(Context.Map.INTEGER_02_BeamFlash.ExecutionState != Constant189);
	bool Result288 = Result286 && Result287;
	bool Result289 = In_Condition && Result288;
	bool Result290 = NiagaraAll(Context.Map.INTEGER_02_BeamFlash.ExecutionStateSource <= In_NewStateSource);
	bool Result291 = Result289 && Result290;
	int ENiagaraExecutionState_IfResult22;
	int ENiagaraExecutionStateSource_IfResult22;
	if(Result291)
	{
	ENiagaraExecutionState_IfResult22 = In_NewState;
	ENiagaraExecutionStateSource_IfResult22 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult22 = Context.Map.INTEGER_02_BeamFlash.ExecutionState;
	ENiagaraExecutionStateSource_IfResult22 = Context.Map.INTEGER_02_BeamFlash.ExecutionStateSource;
	}
	Context.Map.INTEGER_02_BeamFlash.ExecutionState = ENiagaraExecutionState_IfResult22;
	Context.Map.INTEGER_02_BeamFlash.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult22;
}

void EmitterState_INTEGER_02_BeamFlash_Func_(inout FSimulationContext Context)
{
	Context.Map.Local.EmitterState.PreviousEmitterState = Context.Map.INTEGER_02_BeamFlash.ExecutionState;
	float Constant162 = 0.016667;
	float Result246 = max(Context.Map.Constants.INTEGER_02_BeamFlash.EmitterState.LoopDuration, Constant162);
	Context.Map.Local.EmitterState.LoopDuration = Result246;
	float Constant163 = 0;
	bool Result247 = NiagaraAll(Context.Map.INTEGER_02_BeamFlash.Age == Constant163);
	float Result248 = -(Context.Map.EmitterState.LoopDelay);
	float LoopedAge_IfResult9;
	float CurrentLoopDuration_IfResult5;
	float CurrentLoopDelay_IfResult4;
	if(Result247)
	{
	LoopedAge_IfResult9 = Result248;
	CurrentLoopDuration_IfResult5 = Context.Map.Local.EmitterState.LoopDuration;
	CurrentLoopDelay_IfResult4 = Context.Map.EmitterState.LoopDelay;
	}
	else
	{
	LoopedAge_IfResult9 = Context.Map.INTEGER_02_BeamFlash.LoopedAge;
	CurrentLoopDuration_IfResult5 = Context.Map.INTEGER_02_BeamFlash.CurrentLoopDuration;
	CurrentLoopDelay_IfResult4 = Context.Map.INTEGER_02_BeamFlash.CurrentLoopDelay;
	}
	Context.Map.INTEGER_02_BeamFlash.LoopedAge = LoopedAge_IfResult9;
	Context.Map.INTEGER_02_BeamFlash.CurrentLoopDuration = CurrentLoopDuration_IfResult5;
	Context.Map.INTEGER_02_BeamFlash.CurrentLoopDelay = CurrentLoopDelay_IfResult4;
	float Result249 = Context.Map.INTEGER_02_BeamFlash.Age + Context.Map.Engine.DeltaTime;
	float Result250 = Context.Map.Engine.DeltaTime + Context.Map.INTEGER_02_BeamFlash.LoopedAge;
	float Result251 = Result250 / Context.Map.INTEGER_02_BeamFlash.CurrentLoopDuration;
	int Count5;
	Count5 = Result251;
	int Constant164 = 0;
	int Result252 = max(Count5, Constant164);
	float Result253 = Result252 * Context.Map.INTEGER_02_BeamFlash.CurrentLoopDuration;
	float Result254 = Result250 - Result253;
	int Constant165 = 0;
	bool Result255 = NiagaraAll(Result252 > Constant165);
	int Result256 = Result252 + Context.Map.INTEGER_02_BeamFlash.LoopCount;
	Context.Map.INTEGER_02_BeamFlash.Age = Result249;
	Context.Map.INTEGER_02_BeamFlash.LoopedAge = Result254;
	Context.Map.Local.EmitterState.LoopCountIncreased = Result255;
	Context.Map.INTEGER_02_BeamFlash.LoopCount = Result256;
	float Constant166 = 0;
	float Duration_IfResult5;
	float LoopedAge_IfResult10;
	if(Context.Map.Local.EmitterState.LoopCountIncreased)
	{
	Duration_IfResult5 = Context.Map.Local.EmitterState.LoopDuration;
	LoopedAge_IfResult10 = Constant166;
	}
	else
	{
	Duration_IfResult5 = Context.Map.INTEGER_02_BeamFlash.CurrentLoopDuration;
	LoopedAge_IfResult10 = Context.Map.INTEGER_02_BeamFlash.LoopedAge;
	}
	Context.Map.INTEGER_02_BeamFlash.CurrentLoopDuration = Duration_IfResult5;
	Context.Map.INTEGER_02_BeamFlash.LoopedAge = LoopedAge_IfResult10;
	float Result257 = Context.Map.INTEGER_02_BeamFlash.LoopedAge / Context.Map.INTEGER_02_BeamFlash.CurrentLoopDuration;
	Context.Map.INTEGER_02_BeamFlash.NormalizedLoopAge = Result257;
	float Constant167 = 0;
	float Constant168 = 1.0001;
	float Result258 = clamp(Context.Map.Engine.Owner.LODDistanceFraction,Constant167,Constant168);
	Context.Map.INTEGER_02_BeamFlash.Scalability.DistanceFraction = Result258;
	int Constant169 = 0;
	Context.Map.Transient.ScalabilityEmitterExecutionState = Constant169;
	int Constant170 = 0;
	bool Result259 = NiagaraAll(Context.Map.Engine.INTEGER_02_BeamFlash.NumParticles == Constant170);
	Context.Map.Local.EmitterState.NoActiveEmitterParticles = Result259;
	int Constant171 = 0;
	bool Result260 = NiagaraAll(Context.Map.System.ExecutionStateSource == Constant171);
	EmitterState_EmitterChangeState002_INTEGER_02_BeamFlash_Func_(Context.Map.System.ExecutionState, Result260, Context.Map.System.ExecutionStateSource, Context);
	int Constant174 = 1;
	int Constant175 = 1;
	EmitterState_EmitterChangeState_INTEGER_02_BeamFlash_Func_(Constant174, Context.Map.Local.EmitterState.LoopCountIncreased, Constant175, Context);
	int Constant178 = 1;
	int Constant179 = 0;
	bool Result273 = NiagaraAll(Context.Map.System.ExecutionState != Constant179);
	int Constant180 = 2;
	bool Result274 = NiagaraAll(Context.Map.System.ExecutionStateSource == Constant180);
	bool Result275 = Result273 && Result274;
	int Constant181 = 1;
	EmitterState_EmitterChangeState005_INTEGER_02_BeamFlash_Func_(Constant178, Result275, Constant181, Context);
	int Constant184 = 3;
	int Constant185 = 0;
	bool Result282 = NiagaraAll(Context.Map.INTEGER_02_BeamFlash.ExecutionState != Constant185);
	int Constant186 = 0;
	bool Result283 = NiagaraAll(Context.Map.INTEGER_02_BeamFlash.ExecutionStateSource != Constant186);
	bool Result284 = Result282 && Result283;
	bool Result285 = Context.Map.Local.EmitterState.NoActiveEmitterParticles && Result284;
	int Constant187 = 3;
	EmitterState_EmitterChangeState003_INTEGER_02_BeamFlash_Func_(Constant184, Result285, Constant187, Context);
}

void SpawnBurst_Instantaneous_INTEGER_02_BeamFlash_Func_(inout FSimulationContext Context)
{
	Context.Map.SpawnBurst_Instantaneous.Age = Context.Map.INTEGER_02_BeamFlash.LoopedAge;
	float Result292 = Context.Map.SpawnBurst_Instantaneous.Age - Context.Map.Engine.DeltaTime;
	float Result293 = Context.Map.Constants.INTEGER_02_BeamFlash.SpawnBurst_Instantaneous.SpawnTime - Result292;
	float Constant190 = 0;
	float Output112;
	Output112 = Constant190;
	bool Result294 = NiagaraAll(Result293 >= Output112);
	float Result295 = Context.Map.Constants.INTEGER_02_BeamFlash.SpawnBurst_Instantaneous.SpawnTime - Context.Map.SpawnBurst_Instantaneous.Age;
	bool Result296 = NiagaraAll(Result295 < Output112);
	bool Result297 = Result294 && Result296;
	int Constant191 = 0;
	bool Result298 = NiagaraAll(Context.Map.Constants.INTEGER_02_BeamFlash.SpawnBurst_Instantaneous.SpawnCount == Constant191);
	float Constant192 = 0;
	float Result299 = Context.Map.Constants.INTEGER_02_BeamFlash.SpawnBurst_Instantaneous.SpawnCount * Context.Map.Transient.ScalabilityEmitterSpawnCountScale * Context.Map.Engine.INTEGER_02_BeamFlash.SpawnCountScale;
	float Constant193 = 1;
	float Result300 = max(Result299, Constant193);
	float float_IfResult5;
	if(Result298)
	{
	float_IfResult5 = Constant192;
	}
	else
	{
	float_IfResult5 = Result300;
	}
	float Constant194 = 0;
	NiagaraSpawnInfo Output113;
	Output113.Count = float_IfResult5;
	Output113.InterpStartDt = Result293;
	Output113.IntervalDt = Constant194;
	Output113.SpawnGroup = Context.Map.Constants.INTEGER_02_BeamFlash.SpawnBurst_Instantaneous.SpawnGroup;
	int Constant195 = 0;
	float Constant196 = 0;
	float Constant197 = 0;
	NiagaraSpawnInfo Output114;
	Output114.Count = Constant195;
	Output114.InterpStartDt = Constant196;
	Output114.SpawnGroup = Context.Map.Constants.INTEGER_02_BeamFlash.SpawnBurst_Instantaneous.SpawnGroup;
	Output114.IntervalDt = Constant197;
	NiagaraSpawnInfo SpawnInfo_IfResult4;
	if(Result297)
	{
	SpawnInfo_IfResult4 = Output113;
	}
	else
	{
	SpawnInfo_IfResult4 = Output114;
	}
	Context.Map.INTEGER_02_BeamFlash.SpawnBurst_Instantaneous.SpawnBurst = SpawnInfo_IfResult4;
	bool Result301 = NiagaraAll(Context.Map.INTEGER_02_BeamFlash.LoopedAge <= Context.Map.Constants.INTEGER_02_BeamFlash.SpawnBurst_Instantaneous.SpawnTime);
	bool Result302 = Context.Map.Transient.SpawningbCanEverSpawn || Result301;
	Context.Map.Transient.SpawningbCanEverSpawn = Result302;
}

void INTEGER_02_BeamFlash_Func_(inout FSimulationContext Context)
{
	Context.Map.EmitterState.LoopDelay = Context.Map.User.ImpactDelay;
	EnterStatScope(15 );
	EmitterState_INTEGER_02_BeamFlash_Func_(Context);
	ExitStatScope( );
	EnterStatScope(16 );
	SpawnBurst_Instantaneous_INTEGER_02_BeamFlash_Func_(Context);
	ExitStatScope( );
}

void EmitterState_EmitterChangeState002_INTEGER_02_BeamGround_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant208 = 3;
	bool Result318 = NiagaraAll(Context.Map.INTEGER_02_BeamGround.ExecutionState != Constant208);
	int Constant209 = 4;
	bool Result319 = NiagaraAll(Context.Map.INTEGER_02_BeamGround.ExecutionState != Constant209);
	bool Result320 = Result318 && Result319;
	bool Result321 = In_Condition && Result320;
	bool Result322 = NiagaraAll(Context.Map.INTEGER_02_BeamGround.ExecutionStateSource <= In_NewStateSource);
	bool Result323 = Result321 && Result322;
	int ENiagaraExecutionState_IfResult23;
	int ENiagaraExecutionStateSource_IfResult23;
	if(Result323)
	{
	ENiagaraExecutionState_IfResult23 = In_NewState;
	ENiagaraExecutionStateSource_IfResult23 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult23 = Context.Map.INTEGER_02_BeamGround.ExecutionState;
	ENiagaraExecutionStateSource_IfResult23 = Context.Map.INTEGER_02_BeamGround.ExecutionStateSource;
	}
	Context.Map.INTEGER_02_BeamGround.ExecutionState = ENiagaraExecutionState_IfResult23;
	Context.Map.INTEGER_02_BeamGround.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult23;
}

void EmitterState_EmitterChangeState_INTEGER_02_BeamGround_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant212 = 3;
	bool Result324 = NiagaraAll(Context.Map.INTEGER_02_BeamGround.ExecutionState != Constant212);
	int Constant213 = 4;
	bool Result325 = NiagaraAll(Context.Map.INTEGER_02_BeamGround.ExecutionState != Constant213);
	bool Result326 = Result324 && Result325;
	bool Result327 = In_Condition && Result326;
	bool Result328 = NiagaraAll(Context.Map.INTEGER_02_BeamGround.ExecutionStateSource <= In_NewStateSource);
	bool Result329 = Result327 && Result328;
	int ENiagaraExecutionState_IfResult24;
	int ENiagaraExecutionStateSource_IfResult24;
	if(Result329)
	{
	ENiagaraExecutionState_IfResult24 = In_NewState;
	ENiagaraExecutionStateSource_IfResult24 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult24 = Context.Map.INTEGER_02_BeamGround.ExecutionState;
	ENiagaraExecutionStateSource_IfResult24 = Context.Map.INTEGER_02_BeamGround.ExecutionStateSource;
	}
	Context.Map.INTEGER_02_BeamGround.ExecutionState = ENiagaraExecutionState_IfResult24;
	Context.Map.INTEGER_02_BeamGround.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult24;
}

void EmitterState_EmitterChangeState005_INTEGER_02_BeamGround_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant218 = 3;
	bool Result333 = NiagaraAll(Context.Map.INTEGER_02_BeamGround.ExecutionState != Constant218);
	int Constant219 = 4;
	bool Result334 = NiagaraAll(Context.Map.INTEGER_02_BeamGround.ExecutionState != Constant219);
	bool Result335 = Result333 && Result334;
	bool Result336 = In_Condition && Result335;
	bool Result337 = NiagaraAll(Context.Map.INTEGER_02_BeamGround.ExecutionStateSource <= In_NewStateSource);
	bool Result338 = Result336 && Result337;
	int ENiagaraExecutionState_IfResult25;
	int ENiagaraExecutionStateSource_IfResult25;
	if(Result338)
	{
	ENiagaraExecutionState_IfResult25 = In_NewState;
	ENiagaraExecutionStateSource_IfResult25 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult25 = Context.Map.INTEGER_02_BeamGround.ExecutionState;
	ENiagaraExecutionStateSource_IfResult25 = Context.Map.INTEGER_02_BeamGround.ExecutionStateSource;
	}
	Context.Map.INTEGER_02_BeamGround.ExecutionState = ENiagaraExecutionState_IfResult25;
	Context.Map.INTEGER_02_BeamGround.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult25;
}

void EmitterState_EmitterChangeState003_INTEGER_02_BeamGround_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant224 = 3;
	bool Result343 = NiagaraAll(Context.Map.INTEGER_02_BeamGround.ExecutionState != Constant224);
	int Constant225 = 4;
	bool Result344 = NiagaraAll(Context.Map.INTEGER_02_BeamGround.ExecutionState != Constant225);
	bool Result345 = Result343 && Result344;
	bool Result346 = In_Condition && Result345;
	bool Result347 = NiagaraAll(Context.Map.INTEGER_02_BeamGround.ExecutionStateSource <= In_NewStateSource);
	bool Result348 = Result346 && Result347;
	int ENiagaraExecutionState_IfResult26;
	int ENiagaraExecutionStateSource_IfResult26;
	if(Result348)
	{
	ENiagaraExecutionState_IfResult26 = In_NewState;
	ENiagaraExecutionStateSource_IfResult26 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult26 = Context.Map.INTEGER_02_BeamGround.ExecutionState;
	ENiagaraExecutionStateSource_IfResult26 = Context.Map.INTEGER_02_BeamGround.ExecutionStateSource;
	}
	Context.Map.INTEGER_02_BeamGround.ExecutionState = ENiagaraExecutionState_IfResult26;
	Context.Map.INTEGER_02_BeamGround.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult26;
}

void EmitterState_INTEGER_02_BeamGround_Func_(inout FSimulationContext Context)
{
	Context.Map.Local.EmitterState.PreviousEmitterState = Context.Map.INTEGER_02_BeamGround.ExecutionState;
	float Constant198 = 0.016667;
	float Result303 = max(Context.Map.Constants.INTEGER_02_BeamGround.EmitterState.LoopDuration, Constant198);
	Context.Map.Local.EmitterState.LoopDuration = Result303;
	float Constant199 = 0;
	bool Result304 = NiagaraAll(Context.Map.INTEGER_02_BeamGround.Age == Constant199);
	float Result305 = -(Context.Map.EmitterState.LoopDelay);
	float LoopedAge_IfResult11;
	float CurrentLoopDuration_IfResult6;
	float CurrentLoopDelay_IfResult5;
	if(Result304)
	{
	LoopedAge_IfResult11 = Result305;
	CurrentLoopDuration_IfResult6 = Context.Map.Local.EmitterState.LoopDuration;
	CurrentLoopDelay_IfResult5 = Context.Map.EmitterState.LoopDelay;
	}
	else
	{
	LoopedAge_IfResult11 = Context.Map.INTEGER_02_BeamGround.LoopedAge;
	CurrentLoopDuration_IfResult6 = Context.Map.INTEGER_02_BeamGround.CurrentLoopDuration;
	CurrentLoopDelay_IfResult5 = Context.Map.INTEGER_02_BeamGround.CurrentLoopDelay;
	}
	Context.Map.INTEGER_02_BeamGround.LoopedAge = LoopedAge_IfResult11;
	Context.Map.INTEGER_02_BeamGround.CurrentLoopDuration = CurrentLoopDuration_IfResult6;
	Context.Map.INTEGER_02_BeamGround.CurrentLoopDelay = CurrentLoopDelay_IfResult5;
	float Result306 = Context.Map.INTEGER_02_BeamGround.Age + Context.Map.Engine.DeltaTime;
	float Result307 = Context.Map.Engine.DeltaTime + Context.Map.INTEGER_02_BeamGround.LoopedAge;
	float Result308 = Result307 / Context.Map.INTEGER_02_BeamGround.CurrentLoopDuration;
	int Count6;
	Count6 = Result308;
	int Constant200 = 0;
	int Result309 = max(Count6, Constant200);
	float Result310 = Result309 * Context.Map.INTEGER_02_BeamGround.CurrentLoopDuration;
	float Result311 = Result307 - Result310;
	int Constant201 = 0;
	bool Result312 = NiagaraAll(Result309 > Constant201);
	int Result313 = Result309 + Context.Map.INTEGER_02_BeamGround.LoopCount;
	Context.Map.INTEGER_02_BeamGround.Age = Result306;
	Context.Map.INTEGER_02_BeamGround.LoopedAge = Result311;
	Context.Map.Local.EmitterState.LoopCountIncreased = Result312;
	Context.Map.INTEGER_02_BeamGround.LoopCount = Result313;
	float Constant202 = 0;
	float Duration_IfResult6;
	float LoopedAge_IfResult12;
	if(Context.Map.Local.EmitterState.LoopCountIncreased)
	{
	Duration_IfResult6 = Context.Map.Local.EmitterState.LoopDuration;
	LoopedAge_IfResult12 = Constant202;
	}
	else
	{
	Duration_IfResult6 = Context.Map.INTEGER_02_BeamGround.CurrentLoopDuration;
	LoopedAge_IfResult12 = Context.Map.INTEGER_02_BeamGround.LoopedAge;
	}
	Context.Map.INTEGER_02_BeamGround.CurrentLoopDuration = Duration_IfResult6;
	Context.Map.INTEGER_02_BeamGround.LoopedAge = LoopedAge_IfResult12;
	float Result314 = Context.Map.INTEGER_02_BeamGround.LoopedAge / Context.Map.INTEGER_02_BeamGround.CurrentLoopDuration;
	Context.Map.INTEGER_02_BeamGround.NormalizedLoopAge = Result314;
	float Constant203 = 0;
	float Constant204 = 1.0001;
	float Result315 = clamp(Context.Map.Engine.Owner.LODDistanceFraction,Constant203,Constant204);
	Context.Map.INTEGER_02_BeamGround.Scalability.DistanceFraction = Result315;
	int Constant205 = 0;
	Context.Map.Transient.ScalabilityEmitterExecutionState = Constant205;
	int Constant206 = 0;
	bool Result316 = NiagaraAll(Context.Map.Engine.INTEGER_02_BeamGround.NumParticles == Constant206);
	Context.Map.Local.EmitterState.NoActiveEmitterParticles = Result316;
	int Constant207 = 0;
	bool Result317 = NiagaraAll(Context.Map.System.ExecutionStateSource == Constant207);
	EmitterState_EmitterChangeState002_INTEGER_02_BeamGround_Func_(Context.Map.System.ExecutionState, Result317, Context.Map.System.ExecutionStateSource, Context);
	int Constant210 = 1;
	int Constant211 = 1;
	EmitterState_EmitterChangeState_INTEGER_02_BeamGround_Func_(Constant210, Context.Map.Local.EmitterState.LoopCountIncreased, Constant211, Context);
	int Constant214 = 1;
	int Constant215 = 0;
	bool Result330 = NiagaraAll(Context.Map.System.ExecutionState != Constant215);
	int Constant216 = 2;
	bool Result331 = NiagaraAll(Context.Map.System.ExecutionStateSource == Constant216);
	bool Result332 = Result330 && Result331;
	int Constant217 = 1;
	EmitterState_EmitterChangeState005_INTEGER_02_BeamGround_Func_(Constant214, Result332, Constant217, Context);
	int Constant220 = 3;
	int Constant221 = 0;
	bool Result339 = NiagaraAll(Context.Map.INTEGER_02_BeamGround.ExecutionState != Constant221);
	int Constant222 = 0;
	bool Result340 = NiagaraAll(Context.Map.INTEGER_02_BeamGround.ExecutionStateSource != Constant222);
	bool Result341 = Result339 && Result340;
	bool Result342 = Context.Map.Local.EmitterState.NoActiveEmitterParticles && Result341;
	int Constant223 = 3;
	EmitterState_EmitterChangeState003_INTEGER_02_BeamGround_Func_(Constant220, Result342, Constant223, Context);
}

void SpawnBurst_Instantaneous_INTEGER_02_BeamGround_Func_(inout FSimulationContext Context)
{
	Context.Map.SpawnBurst_Instantaneous.Age = Context.Map.INTEGER_02_BeamGround.LoopedAge;
	float Result349 = Context.Map.SpawnBurst_Instantaneous.Age - Context.Map.Engine.DeltaTime;
	float Result350 = Context.Map.Constants.INTEGER_02_BeamGround.SpawnBurst_Instantaneous.SpawnTime - Result349;
	float Constant226 = 0;
	float Output115;
	Output115 = Constant226;
	bool Result351 = NiagaraAll(Result350 >= Output115);
	float Result352 = Context.Map.Constants.INTEGER_02_BeamGround.SpawnBurst_Instantaneous.SpawnTime - Context.Map.SpawnBurst_Instantaneous.Age;
	bool Result353 = NiagaraAll(Result352 < Output115);
	bool Result354 = Result351 && Result353;
	int Constant227 = 0;
	bool Result355 = NiagaraAll(Context.Map.Constants.INTEGER_02_BeamGround.SpawnBurst_Instantaneous.SpawnCount == Constant227);
	float Constant228 = 0;
	float Result356 = Context.Map.Constants.INTEGER_02_BeamGround.SpawnBurst_Instantaneous.SpawnCount * Context.Map.Transient.ScalabilityEmitterSpawnCountScale * Context.Map.Engine.INTEGER_02_BeamGround.SpawnCountScale;
	float Constant229 = 1;
	float Result357 = max(Result356, Constant229);
	float float_IfResult6;
	if(Result355)
	{
	float_IfResult6 = Constant228;
	}
	else
	{
	float_IfResult6 = Result357;
	}
	float Constant230 = 0;
	NiagaraSpawnInfo Output116;
	Output116.Count = float_IfResult6;
	Output116.InterpStartDt = Result350;
	Output116.IntervalDt = Constant230;
	Output116.SpawnGroup = Context.Map.Constants.INTEGER_02_BeamGround.SpawnBurst_Instantaneous.SpawnGroup;
	int Constant231 = 0;
	float Constant232 = 0;
	float Constant233 = 0;
	NiagaraSpawnInfo Output117;
	Output117.Count = Constant231;
	Output117.InterpStartDt = Constant232;
	Output117.SpawnGroup = Context.Map.Constants.INTEGER_02_BeamGround.SpawnBurst_Instantaneous.SpawnGroup;
	Output117.IntervalDt = Constant233;
	NiagaraSpawnInfo SpawnInfo_IfResult5;
	if(Result354)
	{
	SpawnInfo_IfResult5 = Output116;
	}
	else
	{
	SpawnInfo_IfResult5 = Output117;
	}
	Context.Map.INTEGER_02_BeamGround.SpawnBurst_Instantaneous.SpawnBurst = SpawnInfo_IfResult5;
	bool Result358 = NiagaraAll(Context.Map.INTEGER_02_BeamGround.LoopedAge <= Context.Map.Constants.INTEGER_02_BeamGround.SpawnBurst_Instantaneous.SpawnTime);
	bool Result359 = Context.Map.Transient.SpawningbCanEverSpawn || Result358;
	Context.Map.Transient.SpawningbCanEverSpawn = Result359;
}

void INTEGER_02_BeamGround_Func_(inout FSimulationContext Context)
{
	Context.Map.EmitterState.LoopDelay = Context.Map.User.ImpactDelay;
	EnterStatScope(18 );
	EmitterState_INTEGER_02_BeamGround_Func_(Context);
	ExitStatScope( );
	EnterStatScope(19 );
	SpawnBurst_Instantaneous_INTEGER_02_BeamGround_Func_(Context);
	ExitStatScope( );
}

void EmitterState_EmitterChangeState002_INTEGER_02_SparksOutAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant244 = 3;
	bool Result375 = NiagaraAll(Context.Map.INTEGER_02_SparksOutAdd.ExecutionState != Constant244);
	int Constant245 = 4;
	bool Result376 = NiagaraAll(Context.Map.INTEGER_02_SparksOutAdd.ExecutionState != Constant245);
	bool Result377 = Result375 && Result376;
	bool Result378 = In_Condition && Result377;
	bool Result379 = NiagaraAll(Context.Map.INTEGER_02_SparksOutAdd.ExecutionStateSource <= In_NewStateSource);
	bool Result380 = Result378 && Result379;
	int ENiagaraExecutionState_IfResult27;
	int ENiagaraExecutionStateSource_IfResult27;
	if(Result380)
	{
	ENiagaraExecutionState_IfResult27 = In_NewState;
	ENiagaraExecutionStateSource_IfResult27 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult27 = Context.Map.INTEGER_02_SparksOutAdd.ExecutionState;
	ENiagaraExecutionStateSource_IfResult27 = Context.Map.INTEGER_02_SparksOutAdd.ExecutionStateSource;
	}
	Context.Map.INTEGER_02_SparksOutAdd.ExecutionState = ENiagaraExecutionState_IfResult27;
	Context.Map.INTEGER_02_SparksOutAdd.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult27;
}

void EmitterState_EmitterChangeState_INTEGER_02_SparksOutAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant248 = 3;
	bool Result381 = NiagaraAll(Context.Map.INTEGER_02_SparksOutAdd.ExecutionState != Constant248);
	int Constant249 = 4;
	bool Result382 = NiagaraAll(Context.Map.INTEGER_02_SparksOutAdd.ExecutionState != Constant249);
	bool Result383 = Result381 && Result382;
	bool Result384 = In_Condition && Result383;
	bool Result385 = NiagaraAll(Context.Map.INTEGER_02_SparksOutAdd.ExecutionStateSource <= In_NewStateSource);
	bool Result386 = Result384 && Result385;
	int ENiagaraExecutionState_IfResult28;
	int ENiagaraExecutionStateSource_IfResult28;
	if(Result386)
	{
	ENiagaraExecutionState_IfResult28 = In_NewState;
	ENiagaraExecutionStateSource_IfResult28 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult28 = Context.Map.INTEGER_02_SparksOutAdd.ExecutionState;
	ENiagaraExecutionStateSource_IfResult28 = Context.Map.INTEGER_02_SparksOutAdd.ExecutionStateSource;
	}
	Context.Map.INTEGER_02_SparksOutAdd.ExecutionState = ENiagaraExecutionState_IfResult28;
	Context.Map.INTEGER_02_SparksOutAdd.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult28;
}

void EmitterState_EmitterChangeState005_INTEGER_02_SparksOutAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant254 = 3;
	bool Result390 = NiagaraAll(Context.Map.INTEGER_02_SparksOutAdd.ExecutionState != Constant254);
	int Constant255 = 4;
	bool Result391 = NiagaraAll(Context.Map.INTEGER_02_SparksOutAdd.ExecutionState != Constant255);
	bool Result392 = Result390 && Result391;
	bool Result393 = In_Condition && Result392;
	bool Result394 = NiagaraAll(Context.Map.INTEGER_02_SparksOutAdd.ExecutionStateSource <= In_NewStateSource);
	bool Result395 = Result393 && Result394;
	int ENiagaraExecutionState_IfResult29;
	int ENiagaraExecutionStateSource_IfResult29;
	if(Result395)
	{
	ENiagaraExecutionState_IfResult29 = In_NewState;
	ENiagaraExecutionStateSource_IfResult29 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult29 = Context.Map.INTEGER_02_SparksOutAdd.ExecutionState;
	ENiagaraExecutionStateSource_IfResult29 = Context.Map.INTEGER_02_SparksOutAdd.ExecutionStateSource;
	}
	Context.Map.INTEGER_02_SparksOutAdd.ExecutionState = ENiagaraExecutionState_IfResult29;
	Context.Map.INTEGER_02_SparksOutAdd.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult29;
}

void EmitterState_EmitterChangeState003_INTEGER_02_SparksOutAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant260 = 3;
	bool Result400 = NiagaraAll(Context.Map.INTEGER_02_SparksOutAdd.ExecutionState != Constant260);
	int Constant261 = 4;
	bool Result401 = NiagaraAll(Context.Map.INTEGER_02_SparksOutAdd.ExecutionState != Constant261);
	bool Result402 = Result400 && Result401;
	bool Result403 = In_Condition && Result402;
	bool Result404 = NiagaraAll(Context.Map.INTEGER_02_SparksOutAdd.ExecutionStateSource <= In_NewStateSource);
	bool Result405 = Result403 && Result404;
	int ENiagaraExecutionState_IfResult30;
	int ENiagaraExecutionStateSource_IfResult30;
	if(Result405)
	{
	ENiagaraExecutionState_IfResult30 = In_NewState;
	ENiagaraExecutionStateSource_IfResult30 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult30 = Context.Map.INTEGER_02_SparksOutAdd.ExecutionState;
	ENiagaraExecutionStateSource_IfResult30 = Context.Map.INTEGER_02_SparksOutAdd.ExecutionStateSource;
	}
	Context.Map.INTEGER_02_SparksOutAdd.ExecutionState = ENiagaraExecutionState_IfResult30;
	Context.Map.INTEGER_02_SparksOutAdd.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult30;
}

void EmitterState_INTEGER_02_SparksOutAdd_Func_(inout FSimulationContext Context)
{
	Context.Map.Local.EmitterState.PreviousEmitterState = Context.Map.INTEGER_02_SparksOutAdd.ExecutionState;
	float Constant234 = 0.016667;
	float Result360 = max(Context.Map.Constants.INTEGER_02_SparksOutAdd.EmitterState.LoopDuration, Constant234);
	Context.Map.Local.EmitterState.LoopDuration = Result360;
	float Constant235 = 0;
	bool Result361 = NiagaraAll(Context.Map.INTEGER_02_SparksOutAdd.Age == Constant235);
	float Result362 = -(Context.Map.EmitterState.LoopDelay);
	float LoopedAge_IfResult13;
	float CurrentLoopDuration_IfResult7;
	float CurrentLoopDelay_IfResult6;
	if(Result361)
	{
	LoopedAge_IfResult13 = Result362;
	CurrentLoopDuration_IfResult7 = Context.Map.Local.EmitterState.LoopDuration;
	CurrentLoopDelay_IfResult6 = Context.Map.EmitterState.LoopDelay;
	}
	else
	{
	LoopedAge_IfResult13 = Context.Map.INTEGER_02_SparksOutAdd.LoopedAge;
	CurrentLoopDuration_IfResult7 = Context.Map.INTEGER_02_SparksOutAdd.CurrentLoopDuration;
	CurrentLoopDelay_IfResult6 = Context.Map.INTEGER_02_SparksOutAdd.CurrentLoopDelay;
	}
	Context.Map.INTEGER_02_SparksOutAdd.LoopedAge = LoopedAge_IfResult13;
	Context.Map.INTEGER_02_SparksOutAdd.CurrentLoopDuration = CurrentLoopDuration_IfResult7;
	Context.Map.INTEGER_02_SparksOutAdd.CurrentLoopDelay = CurrentLoopDelay_IfResult6;
	float Result363 = Context.Map.INTEGER_02_SparksOutAdd.Age + Context.Map.Engine.DeltaTime;
	float Result364 = Context.Map.Engine.DeltaTime + Context.Map.INTEGER_02_SparksOutAdd.LoopedAge;
	float Result365 = Result364 / Context.Map.INTEGER_02_SparksOutAdd.CurrentLoopDuration;
	int Count7;
	Count7 = Result365;
	int Constant236 = 0;
	int Result366 = max(Count7, Constant236);
	float Result367 = Result366 * Context.Map.INTEGER_02_SparksOutAdd.CurrentLoopDuration;
	float Result368 = Result364 - Result367;
	int Constant237 = 0;
	bool Result369 = NiagaraAll(Result366 > Constant237);
	int Result370 = Result366 + Context.Map.INTEGER_02_SparksOutAdd.LoopCount;
	Context.Map.INTEGER_02_SparksOutAdd.Age = Result363;
	Context.Map.INTEGER_02_SparksOutAdd.LoopedAge = Result368;
	Context.Map.Local.EmitterState.LoopCountIncreased = Result369;
	Context.Map.INTEGER_02_SparksOutAdd.LoopCount = Result370;
	float Constant238 = 0;
	float Duration_IfResult7;
	float LoopedAge_IfResult14;
	if(Context.Map.Local.EmitterState.LoopCountIncreased)
	{
	Duration_IfResult7 = Context.Map.Local.EmitterState.LoopDuration;
	LoopedAge_IfResult14 = Constant238;
	}
	else
	{
	Duration_IfResult7 = Context.Map.INTEGER_02_SparksOutAdd.CurrentLoopDuration;
	LoopedAge_IfResult14 = Context.Map.INTEGER_02_SparksOutAdd.LoopedAge;
	}
	Context.Map.INTEGER_02_SparksOutAdd.CurrentLoopDuration = Duration_IfResult7;
	Context.Map.INTEGER_02_SparksOutAdd.LoopedAge = LoopedAge_IfResult14;
	float Result371 = Context.Map.INTEGER_02_SparksOutAdd.LoopedAge / Context.Map.INTEGER_02_SparksOutAdd.CurrentLoopDuration;
	Context.Map.INTEGER_02_SparksOutAdd.NormalizedLoopAge = Result371;
	float Constant239 = 0;
	float Constant240 = 1.0001;
	float Result372 = clamp(Context.Map.Engine.Owner.LODDistanceFraction,Constant239,Constant240);
	Context.Map.INTEGER_02_SparksOutAdd.Scalability.DistanceFraction = Result372;
	int Constant241 = 0;
	Context.Map.Transient.ScalabilityEmitterExecutionState = Constant241;
	int Constant242 = 0;
	bool Result373 = NiagaraAll(Context.Map.Engine.INTEGER_02_SparksOutAdd.NumParticles == Constant242);
	Context.Map.Local.EmitterState.NoActiveEmitterParticles = Result373;
	int Constant243 = 0;
	bool Result374 = NiagaraAll(Context.Map.System.ExecutionStateSource == Constant243);
	EmitterState_EmitterChangeState002_INTEGER_02_SparksOutAdd_Func_(Context.Map.System.ExecutionState, Result374, Context.Map.System.ExecutionStateSource, Context);
	int Constant246 = 1;
	int Constant247 = 1;
	EmitterState_EmitterChangeState_INTEGER_02_SparksOutAdd_Func_(Constant246, Context.Map.Local.EmitterState.LoopCountIncreased, Constant247, Context);
	int Constant250 = 1;
	int Constant251 = 0;
	bool Result387 = NiagaraAll(Context.Map.System.ExecutionState != Constant251);
	int Constant252 = 2;
	bool Result388 = NiagaraAll(Context.Map.System.ExecutionStateSource == Constant252);
	bool Result389 = Result387 && Result388;
	int Constant253 = 1;
	EmitterState_EmitterChangeState005_INTEGER_02_SparksOutAdd_Func_(Constant250, Result389, Constant253, Context);
	int Constant256 = 3;
	int Constant257 = 0;
	bool Result396 = NiagaraAll(Context.Map.INTEGER_02_SparksOutAdd.ExecutionState != Constant257);
	int Constant258 = 0;
	bool Result397 = NiagaraAll(Context.Map.INTEGER_02_SparksOutAdd.ExecutionStateSource != Constant258);
	bool Result398 = Result396 && Result397;
	bool Result399 = Context.Map.Local.EmitterState.NoActiveEmitterParticles && Result398;
	int Constant259 = 3;
	EmitterState_EmitterChangeState003_INTEGER_02_SparksOutAdd_Func_(Constant256, Result399, Constant259, Context);
}

void GetRandomInfo_Emitter_Determinism_false_Emitter_Emitter_Emitter_Func_(int In_Seed, int In_Engine_System_TickCount, bool In_OverrideSeed, int In_Particles_UniqueID, int In_Emitter_RandomSeed, bool In_FixedOverrideSeed, int In_RandomnessMode, out NiagaraRandInfo Out_RandomInfo, out bool Out_UseDeterministicRandoms, inout FSimulationContext Context)
{
	bool Constant272 = false;
	int Constant273 = 0;
	bool Result406 = NiagaraAll(In_RandomnessMode == Constant273);
	bool Result407 = Constant272 && Result406;
	int Constant274 = 1;
	bool Result408 = NiagaraAll(In_RandomnessMode == Constant274);
	bool Result409 = Result407 || Result408;
	int Seed_IfResult;
	if(In_OverrideSeed)
	{
	Seed_IfResult = In_Seed;
	}
	else
	{
	Seed_IfResult = Context.Map.User.INTEGER_02_SparksOutAdd.RandomSeed;
	}
	int Constant275 = 0;
	int Constant276 = 0;
	int Constant277 = 0;
	int Seed1_IfResult;
	int Seed2_IfResult;
	int Seed3_IfResult;
	if(In_FixedOverrideSeed)
	{
	Seed1_IfResult = Seed_IfResult;
	Seed2_IfResult = Constant275;
	Seed3_IfResult = Constant276;
	}
	else
	{
	Seed1_IfResult = Constant277;
	Seed2_IfResult = Context.Map.Engine.System.TickCount;
	Seed3_IfResult = Seed_IfResult;
	}
	int Constant278 = -1;
	int Constant279 = -1;
	int Constant280 = -1;
	int Seed1_IfResult1;
	int Seed2_IfResult1;
	int Seed3_IfResult1;
	if(Result409)
	{
	Seed1_IfResult1 = Seed1_IfResult;
	Seed2_IfResult1 = Seed2_IfResult;
	Seed3_IfResult1 = Seed3_IfResult;
	}
	else
	{
	Seed1_IfResult1 = Constant278;
	Seed2_IfResult1 = Constant279;
	Seed3_IfResult1 = Constant280;
	}
	NiagaraRandInfo Output118;
	Output118.Seed1 = Seed1_IfResult1;
	Output118.Seed2 = Seed2_IfResult1;
	Output118.Seed3 = Seed3_IfResult1;
	Out_RandomInfo = Output118;
	Out_UseDeterministicRandoms = Result409;
}

void RandomRangeInteger_Func_(int In_Min, int In_Max, int In_Seed, int In_RandomnessMode, bool In_OverrideSeed, bool In_FixedOverrideSeed, out int Out_Result, inout FSimulationContext Context)
{
	int Constant268 = (0);
	bool Constant269 = false;
	int Constant270 = 0;
	int Constant271 = (0);
	NiagaraRandInfo GetRandomInfo_Emitter_Determinism_false_Emitter_Emitter_Emitter_Func_Output_RandomInfo;
	bool GetRandomInfo_Emitter_Determinism_false_Emitter_Emitter_Emitter_Func_Output_UseDeterministicRandoms;
	GetRandomInfo_Emitter_Determinism_false_Emitter_Emitter_Emitter_Func_(In_Seed, Constant268, In_OverrideSeed, Constant270, Constant271, In_FixedOverrideSeed, In_RandomnessMode, GetRandomInfo_Emitter_Determinism_false_Emitter_Emitter_Emitter_Func_Output_RandomInfo, GetRandomInfo_Emitter_Determinism_false_Emitter_Emitter_Emitter_Func_Output_UseDeterministicRandoms, Context);
	int Result410 = In_Max - In_Min;
	int Constant281 = 1;
	int Result411 = Result410 + Constant281;
	int Seed1;
	int Seed2;
	int Seed3;
	Seed1 = GetRandomInfo_Emitter_Determinism_false_Emitter_Emitter_Emitter_Func_Output_RandomInfo.Seed1;
	Seed2 = GetRandomInfo_Emitter_Determinism_false_Emitter_Emitter_Emitter_Func_Output_RandomInfo.Seed2;
	Seed3 = GetRandomInfo_Emitter_Determinism_false_Emitter_Emitter_Emitter_Func_Output_RandomInfo.Seed3;
	int Result412 = rand_int(Result411, Seed1, Seed2, Seed3);
	int Result413 = rand_int(Result411);
	int Random_IfResult;
	if(GetRandomInfo_Emitter_Determinism_false_Emitter_Emitter_Emitter_Func_Output_UseDeterministicRandoms)
	{
	Random_IfResult = Result412;
	}
	else
	{
	Random_IfResult = Result413;
	}
	int Result414 = In_Min + Random_IfResult;
	Out_Result = Result414;
}

void UniformRangedInt_INTEGER_02_SparksOutAdd_Func_(out int Out_UniformRangedInt, inout FSimulationContext Context)
{
	bool Constant262 = false;
	Context.Map.UniformRangedInt.OverrideRandomness = Constant262;
	int Constant263 = 0;
	Context.Map.UniformRangedInt.RandomnessMode = Constant263;
	bool Constant264 = false;
	Context.Map.UniformRangedInt.OverrideSeed = Constant264;
	bool Constant265 = false;
	Context.Map.UniformRangedInt.FixedRandomSeed = Constant265;
	int Constant266 = 0;
	bool Constant267 = false;
	int Mode_IfResult;
	bool Override_IfResult;
	if(Context.Map.UniformRangedInt.OverrideRandomness)
	{
	Mode_IfResult = Context.Map.UniformRangedInt.RandomnessMode;
	Override_IfResult = Context.Map.UniformRangedInt.OverrideSeed;
	}
	else
	{
	Mode_IfResult = Constant266;
	Override_IfResult = Constant267;
	}
	int RandomRangeInteger_Func_Output_Result;
	RandomRangeInteger_Func_(Context.Map.Constants.INTEGER_02_SparksOutAdd.UniformRangedInt.Minimum, Context.Map.Constants.INTEGER_02_SparksOutAdd.UniformRangedInt.Maximum, Context.Map.Constants.INTEGER_02_SparksOutAdd.UniformRangedInt.RandomSeed, Mode_IfResult, Override_IfResult, Context.Map.UniformRangedInt.FixedRandomSeed, RandomRangeInteger_Func_Output_Result, Context);
	Out_UniformRangedInt = RandomRangeInteger_Func_Output_Result;
}

void SpawnBurst_Instantaneous_INTEGER_02_SparksOutAdd_Func_(inout FSimulationContext Context)
{
	Context.Map.SpawnBurst_Instantaneous.Age = Context.Map.INTEGER_02_SparksOutAdd.LoopedAge;
	float Result415 = Context.Map.SpawnBurst_Instantaneous.Age - Context.Map.Engine.DeltaTime;
	float Result416 = Context.Map.Constants.INTEGER_02_SparksOutAdd.SpawnBurst_Instantaneous.SpawnTime - Result415;
	float Constant282 = 0;
	float Output119;
	Output119 = Constant282;
	bool Result417 = NiagaraAll(Result416 >= Output119);
	float Result418 = Context.Map.Constants.INTEGER_02_SparksOutAdd.SpawnBurst_Instantaneous.SpawnTime - Context.Map.SpawnBurst_Instantaneous.Age;
	bool Result419 = NiagaraAll(Result418 < Output119);
	bool Result420 = Result417 && Result419;
	int Constant283 = 0;
	bool Result421 = NiagaraAll(Context.Map.SpawnBurst_Instantaneous.SpawnCount == Constant283);
	float Constant284 = 0;
	float Result422 = Context.Map.SpawnBurst_Instantaneous.SpawnCount * Context.Map.Transient.ScalabilityEmitterSpawnCountScale * Context.Map.Engine.INTEGER_02_SparksOutAdd.SpawnCountScale;
	float Constant285 = 1;
	float Result423 = max(Result422, Constant285);
	float float_IfResult7;
	if(Result421)
	{
	float_IfResult7 = Constant284;
	}
	else
	{
	float_IfResult7 = Result423;
	}
	float Constant286 = 0;
	NiagaraSpawnInfo Output120;
	Output120.Count = float_IfResult7;
	Output120.InterpStartDt = Result416;
	Output120.IntervalDt = Constant286;
	Output120.SpawnGroup = Context.Map.Constants.INTEGER_02_SparksOutAdd.SpawnBurst_Instantaneous.SpawnGroup;
	int Constant287 = 0;
	float Constant288 = 0;
	float Constant289 = 0;
	NiagaraSpawnInfo Output121;
	Output121.Count = Constant287;
	Output121.InterpStartDt = Constant288;
	Output121.SpawnGroup = Context.Map.Constants.INTEGER_02_SparksOutAdd.SpawnBurst_Instantaneous.SpawnGroup;
	Output121.IntervalDt = Constant289;
	NiagaraSpawnInfo SpawnInfo_IfResult6;
	if(Result420)
	{
	SpawnInfo_IfResult6 = Output120;
	}
	else
	{
	SpawnInfo_IfResult6 = Output121;
	}
	Context.Map.INTEGER_02_SparksOutAdd.SpawnBurst_Instantaneous.SpawnBurst = SpawnInfo_IfResult6;
	bool Result424 = NiagaraAll(Context.Map.INTEGER_02_SparksOutAdd.LoopedAge <= Context.Map.Constants.INTEGER_02_SparksOutAdd.SpawnBurst_Instantaneous.SpawnTime);
	bool Result425 = Context.Map.Transient.SpawningbCanEverSpawn || Result424;
	Context.Map.Transient.SpawningbCanEverSpawn = Result425;
}

void INTEGER_02_SparksOutAdd_Func_(inout FSimulationContext Context)
{
	Context.Map.EmitterState.LoopDelay = Context.Map.User.ImpactDelay;
	EnterStatScope(21 );
	EmitterState_INTEGER_02_SparksOutAdd_Func_(Context);
	ExitStatScope( );
	int UniformRangedInt_INTEGER_02_SparksOutAdd_Func_Output_UniformRangedInt;
	UniformRangedInt_INTEGER_02_SparksOutAdd_Func_(UniformRangedInt_INTEGER_02_SparksOutAdd_Func_Output_UniformRangedInt, Context);
	Context.Map.SpawnBurst_Instantaneous.SpawnCount = UniformRangedInt_INTEGER_02_SparksOutAdd_Func_Output_UniformRangedInt;
	EnterStatScope(22 );
	SpawnBurst_Instantaneous_INTEGER_02_SparksOutAdd_Func_(Context);
	ExitStatScope( );
}

void EmitterState_EmitterChangeState002_INTEGER_02_CylinderAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant300 = 3;
	bool Result441 = NiagaraAll(Context.Map.INTEGER_02_CylinderAdd.ExecutionState != Constant300);
	int Constant301 = 4;
	bool Result442 = NiagaraAll(Context.Map.INTEGER_02_CylinderAdd.ExecutionState != Constant301);
	bool Result443 = Result441 && Result442;
	bool Result444 = In_Condition && Result443;
	bool Result445 = NiagaraAll(Context.Map.INTEGER_02_CylinderAdd.ExecutionStateSource <= In_NewStateSource);
	bool Result446 = Result444 && Result445;
	int ENiagaraExecutionState_IfResult31;
	int ENiagaraExecutionStateSource_IfResult31;
	if(Result446)
	{
	ENiagaraExecutionState_IfResult31 = In_NewState;
	ENiagaraExecutionStateSource_IfResult31 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult31 = Context.Map.INTEGER_02_CylinderAdd.ExecutionState;
	ENiagaraExecutionStateSource_IfResult31 = Context.Map.INTEGER_02_CylinderAdd.ExecutionStateSource;
	}
	Context.Map.INTEGER_02_CylinderAdd.ExecutionState = ENiagaraExecutionState_IfResult31;
	Context.Map.INTEGER_02_CylinderAdd.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult31;
}

void EmitterState_EmitterChangeState_INTEGER_02_CylinderAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant304 = 3;
	bool Result447 = NiagaraAll(Context.Map.INTEGER_02_CylinderAdd.ExecutionState != Constant304);
	int Constant305 = 4;
	bool Result448 = NiagaraAll(Context.Map.INTEGER_02_CylinderAdd.ExecutionState != Constant305);
	bool Result449 = Result447 && Result448;
	bool Result450 = In_Condition && Result449;
	bool Result451 = NiagaraAll(Context.Map.INTEGER_02_CylinderAdd.ExecutionStateSource <= In_NewStateSource);
	bool Result452 = Result450 && Result451;
	int ENiagaraExecutionState_IfResult32;
	int ENiagaraExecutionStateSource_IfResult32;
	if(Result452)
	{
	ENiagaraExecutionState_IfResult32 = In_NewState;
	ENiagaraExecutionStateSource_IfResult32 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult32 = Context.Map.INTEGER_02_CylinderAdd.ExecutionState;
	ENiagaraExecutionStateSource_IfResult32 = Context.Map.INTEGER_02_CylinderAdd.ExecutionStateSource;
	}
	Context.Map.INTEGER_02_CylinderAdd.ExecutionState = ENiagaraExecutionState_IfResult32;
	Context.Map.INTEGER_02_CylinderAdd.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult32;
}

void EmitterState_EmitterChangeState005_INTEGER_02_CylinderAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant310 = 3;
	bool Result456 = NiagaraAll(Context.Map.INTEGER_02_CylinderAdd.ExecutionState != Constant310);
	int Constant311 = 4;
	bool Result457 = NiagaraAll(Context.Map.INTEGER_02_CylinderAdd.ExecutionState != Constant311);
	bool Result458 = Result456 && Result457;
	bool Result459 = In_Condition && Result458;
	bool Result460 = NiagaraAll(Context.Map.INTEGER_02_CylinderAdd.ExecutionStateSource <= In_NewStateSource);
	bool Result461 = Result459 && Result460;
	int ENiagaraExecutionState_IfResult33;
	int ENiagaraExecutionStateSource_IfResult33;
	if(Result461)
	{
	ENiagaraExecutionState_IfResult33 = In_NewState;
	ENiagaraExecutionStateSource_IfResult33 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult33 = Context.Map.INTEGER_02_CylinderAdd.ExecutionState;
	ENiagaraExecutionStateSource_IfResult33 = Context.Map.INTEGER_02_CylinderAdd.ExecutionStateSource;
	}
	Context.Map.INTEGER_02_CylinderAdd.ExecutionState = ENiagaraExecutionState_IfResult33;
	Context.Map.INTEGER_02_CylinderAdd.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult33;
}

void EmitterState_EmitterChangeState003_INTEGER_02_CylinderAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant316 = 3;
	bool Result466 = NiagaraAll(Context.Map.INTEGER_02_CylinderAdd.ExecutionState != Constant316);
	int Constant317 = 4;
	bool Result467 = NiagaraAll(Context.Map.INTEGER_02_CylinderAdd.ExecutionState != Constant317);
	bool Result468 = Result466 && Result467;
	bool Result469 = In_Condition && Result468;
	bool Result470 = NiagaraAll(Context.Map.INTEGER_02_CylinderAdd.ExecutionStateSource <= In_NewStateSource);
	bool Result471 = Result469 && Result470;
	int ENiagaraExecutionState_IfResult34;
	int ENiagaraExecutionStateSource_IfResult34;
	if(Result471)
	{
	ENiagaraExecutionState_IfResult34 = In_NewState;
	ENiagaraExecutionStateSource_IfResult34 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult34 = Context.Map.INTEGER_02_CylinderAdd.ExecutionState;
	ENiagaraExecutionStateSource_IfResult34 = Context.Map.INTEGER_02_CylinderAdd.ExecutionStateSource;
	}
	Context.Map.INTEGER_02_CylinderAdd.ExecutionState = ENiagaraExecutionState_IfResult34;
	Context.Map.INTEGER_02_CylinderAdd.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult34;
}

void EmitterState_INTEGER_02_CylinderAdd_Func_(inout FSimulationContext Context)
{
	Context.Map.Local.EmitterState.PreviousEmitterState = Context.Map.INTEGER_02_CylinderAdd.ExecutionState;
	float Constant290 = 0.016667;
	float Result426 = max(Context.Map.Constants.INTEGER_02_CylinderAdd.EmitterState.LoopDuration, Constant290);
	Context.Map.Local.EmitterState.LoopDuration = Result426;
	float Constant291 = 0;
	bool Result427 = NiagaraAll(Context.Map.INTEGER_02_CylinderAdd.Age == Constant291);
	float Result428 = -(Context.Map.EmitterState.LoopDelay);
	float LoopedAge_IfResult15;
	float CurrentLoopDuration_IfResult8;
	float CurrentLoopDelay_IfResult7;
	if(Result427)
	{
	LoopedAge_IfResult15 = Result428;
	CurrentLoopDuration_IfResult8 = Context.Map.Local.EmitterState.LoopDuration;
	CurrentLoopDelay_IfResult7 = Context.Map.EmitterState.LoopDelay;
	}
	else
	{
	LoopedAge_IfResult15 = Context.Map.INTEGER_02_CylinderAdd.LoopedAge;
	CurrentLoopDuration_IfResult8 = Context.Map.INTEGER_02_CylinderAdd.CurrentLoopDuration;
	CurrentLoopDelay_IfResult7 = Context.Map.INTEGER_02_CylinderAdd.CurrentLoopDelay;
	}
	Context.Map.INTEGER_02_CylinderAdd.LoopedAge = LoopedAge_IfResult15;
	Context.Map.INTEGER_02_CylinderAdd.CurrentLoopDuration = CurrentLoopDuration_IfResult8;
	Context.Map.INTEGER_02_CylinderAdd.CurrentLoopDelay = CurrentLoopDelay_IfResult7;
	float Result429 = Context.Map.INTEGER_02_CylinderAdd.Age + Context.Map.Engine.DeltaTime;
	float Result430 = Context.Map.Engine.DeltaTime + Context.Map.INTEGER_02_CylinderAdd.LoopedAge;
	float Result431 = Result430 / Context.Map.INTEGER_02_CylinderAdd.CurrentLoopDuration;
	int Count8;
	Count8 = Result431;
	int Constant292 = 0;
	int Result432 = max(Count8, Constant292);
	float Result433 = Result432 * Context.Map.INTEGER_02_CylinderAdd.CurrentLoopDuration;
	float Result434 = Result430 - Result433;
	int Constant293 = 0;
	bool Result435 = NiagaraAll(Result432 > Constant293);
	int Result436 = Result432 + Context.Map.INTEGER_02_CylinderAdd.LoopCount;
	Context.Map.INTEGER_02_CylinderAdd.Age = Result429;
	Context.Map.INTEGER_02_CylinderAdd.LoopedAge = Result434;
	Context.Map.Local.EmitterState.LoopCountIncreased = Result435;
	Context.Map.INTEGER_02_CylinderAdd.LoopCount = Result436;
	float Constant294 = 0;
	float Duration_IfResult8;
	float LoopedAge_IfResult16;
	if(Context.Map.Local.EmitterState.LoopCountIncreased)
	{
	Duration_IfResult8 = Context.Map.Local.EmitterState.LoopDuration;
	LoopedAge_IfResult16 = Constant294;
	}
	else
	{
	Duration_IfResult8 = Context.Map.INTEGER_02_CylinderAdd.CurrentLoopDuration;
	LoopedAge_IfResult16 = Context.Map.INTEGER_02_CylinderAdd.LoopedAge;
	}
	Context.Map.INTEGER_02_CylinderAdd.CurrentLoopDuration = Duration_IfResult8;
	Context.Map.INTEGER_02_CylinderAdd.LoopedAge = LoopedAge_IfResult16;
	float Result437 = Context.Map.INTEGER_02_CylinderAdd.LoopedAge / Context.Map.INTEGER_02_CylinderAdd.CurrentLoopDuration;
	Context.Map.INTEGER_02_CylinderAdd.NormalizedLoopAge = Result437;
	float Constant295 = 0;
	float Constant296 = 1.0001;
	float Result438 = clamp(Context.Map.Engine.Owner.LODDistanceFraction,Constant295,Constant296);
	Context.Map.INTEGER_02_CylinderAdd.Scalability.DistanceFraction = Result438;
	int Constant297 = 0;
	Context.Map.Transient.ScalabilityEmitterExecutionState = Constant297;
	int Constant298 = 0;
	bool Result439 = NiagaraAll(Context.Map.Engine.INTEGER_02_CylinderAdd.NumParticles == Constant298);
	Context.Map.Local.EmitterState.NoActiveEmitterParticles = Result439;
	int Constant299 = 0;
	bool Result440 = NiagaraAll(Context.Map.System.ExecutionStateSource == Constant299);
	EmitterState_EmitterChangeState002_INTEGER_02_CylinderAdd_Func_(Context.Map.System.ExecutionState, Result440, Context.Map.System.ExecutionStateSource, Context);
	int Constant302 = 1;
	int Constant303 = 1;
	EmitterState_EmitterChangeState_INTEGER_02_CylinderAdd_Func_(Constant302, Context.Map.Local.EmitterState.LoopCountIncreased, Constant303, Context);
	int Constant306 = 1;
	int Constant307 = 0;
	bool Result453 = NiagaraAll(Context.Map.System.ExecutionState != Constant307);
	int Constant308 = 2;
	bool Result454 = NiagaraAll(Context.Map.System.ExecutionStateSource == Constant308);
	bool Result455 = Result453 && Result454;
	int Constant309 = 1;
	EmitterState_EmitterChangeState005_INTEGER_02_CylinderAdd_Func_(Constant306, Result455, Constant309, Context);
	int Constant312 = 3;
	int Constant313 = 0;
	bool Result462 = NiagaraAll(Context.Map.INTEGER_02_CylinderAdd.ExecutionState != Constant313);
	int Constant314 = 0;
	bool Result463 = NiagaraAll(Context.Map.INTEGER_02_CylinderAdd.ExecutionStateSource != Constant314);
	bool Result464 = Result462 && Result463;
	bool Result465 = Context.Map.Local.EmitterState.NoActiveEmitterParticles && Result464;
	int Constant315 = 3;
	EmitterState_EmitterChangeState003_INTEGER_02_CylinderAdd_Func_(Constant312, Result465, Constant315, Context);
}

void SpawnBurst_Instantaneous_INTEGER_02_CylinderAdd_Func_(inout FSimulationContext Context)
{
	Context.Map.SpawnBurst_Instantaneous.Age = Context.Map.INTEGER_02_CylinderAdd.LoopedAge;
	float Result472 = Context.Map.SpawnBurst_Instantaneous.Age - Context.Map.Engine.DeltaTime;
	float Result473 = Context.Map.Constants.INTEGER_02_CylinderAdd.SpawnBurst_Instantaneous.SpawnTime - Result472;
	float Constant318 = 0;
	float Output122;
	Output122 = Constant318;
	bool Result474 = NiagaraAll(Result473 >= Output122);
	float Result475 = Context.Map.Constants.INTEGER_02_CylinderAdd.SpawnBurst_Instantaneous.SpawnTime - Context.Map.SpawnBurst_Instantaneous.Age;
	bool Result476 = NiagaraAll(Result475 < Output122);
	bool Result477 = Result474 && Result476;
	int Constant319 = 0;
	bool Result478 = NiagaraAll(Context.Map.Constants.INTEGER_02_CylinderAdd.SpawnBurst_Instantaneous.SpawnCount == Constant319);
	float Constant320 = 0;
	float Result479 = Context.Map.Constants.INTEGER_02_CylinderAdd.SpawnBurst_Instantaneous.SpawnCount * Context.Map.Transient.ScalabilityEmitterSpawnCountScale * Context.Map.Engine.INTEGER_02_CylinderAdd.SpawnCountScale;
	float Constant321 = 1;
	float Result480 = max(Result479, Constant321);
	float float_IfResult8;
	if(Result478)
	{
	float_IfResult8 = Constant320;
	}
	else
	{
	float_IfResult8 = Result480;
	}
	float Constant322 = 0;
	NiagaraSpawnInfo Output123;
	Output123.Count = float_IfResult8;
	Output123.InterpStartDt = Result473;
	Output123.IntervalDt = Constant322;
	Output123.SpawnGroup = Context.Map.Constants.INTEGER_02_CylinderAdd.SpawnBurst_Instantaneous.SpawnGroup;
	int Constant323 = 0;
	float Constant324 = 0;
	float Constant325 = 0;
	NiagaraSpawnInfo Output124;
	Output124.Count = Constant323;
	Output124.InterpStartDt = Constant324;
	Output124.SpawnGroup = Context.Map.Constants.INTEGER_02_CylinderAdd.SpawnBurst_Instantaneous.SpawnGroup;
	Output124.IntervalDt = Constant325;
	NiagaraSpawnInfo SpawnInfo_IfResult7;
	if(Result477)
	{
	SpawnInfo_IfResult7 = Output123;
	}
	else
	{
	SpawnInfo_IfResult7 = Output124;
	}
	Context.Map.INTEGER_02_CylinderAdd.SpawnBurst_Instantaneous.SpawnBurst = SpawnInfo_IfResult7;
	bool Result481 = NiagaraAll(Context.Map.INTEGER_02_CylinderAdd.LoopedAge <= Context.Map.Constants.INTEGER_02_CylinderAdd.SpawnBurst_Instantaneous.SpawnTime);
	bool Result482 = Context.Map.Transient.SpawningbCanEverSpawn || Result481;
	Context.Map.Transient.SpawningbCanEverSpawn = Result482;
}

void INTEGER_02_CylinderAdd_Func_(inout FSimulationContext Context)
{
	Context.Map.EmitterState.LoopDelay = Context.Map.User.ImpactDelay;
	EnterStatScope(24 );
	EmitterState_INTEGER_02_CylinderAdd_Func_(Context);
	ExitStatScope( );
	EnterStatScope(25 );
	SpawnBurst_Instantaneous_INTEGER_02_CylinderAdd_Func_(Context);
	ExitStatScope( );
}

void Divide_Float001_INTEGER_01_SparksInAdd_Func_(out float Out_Result, inout FSimulationContext Context)
{
	float Result483 = Context.Map.Divide_Float001.A / Context.Map.Constants.INTEGER_01_SparksInAdd.Divide_Float001.B;
	Out_Result = Result483;
}

void EmitterState_EmitterChangeState002_INTEGER_01_SparksInAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant336 = 3;
	bool Result493 = NiagaraAll(Context.Map.INTEGER_01_SparksInAdd.ExecutionState != Constant336);
	int Constant337 = 4;
	bool Result494 = NiagaraAll(Context.Map.INTEGER_01_SparksInAdd.ExecutionState != Constant337);
	bool Result495 = Result493 && Result494;
	bool Result496 = In_Condition && Result495;
	bool Result497 = NiagaraAll(Context.Map.INTEGER_01_SparksInAdd.ExecutionStateSource <= In_NewStateSource);
	bool Result498 = Result496 && Result497;
	int ENiagaraExecutionState_IfResult35;
	int ENiagaraExecutionStateSource_IfResult35;
	if(Result498)
	{
	ENiagaraExecutionState_IfResult35 = In_NewState;
	ENiagaraExecutionStateSource_IfResult35 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult35 = Context.Map.INTEGER_01_SparksInAdd.ExecutionState;
	ENiagaraExecutionStateSource_IfResult35 = Context.Map.INTEGER_01_SparksInAdd.ExecutionStateSource;
	}
	Context.Map.INTEGER_01_SparksInAdd.ExecutionState = ENiagaraExecutionState_IfResult35;
	Context.Map.INTEGER_01_SparksInAdd.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult35;
}

void EmitterState_EmitterChangeState_INTEGER_01_SparksInAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant340 = 3;
	bool Result499 = NiagaraAll(Context.Map.INTEGER_01_SparksInAdd.ExecutionState != Constant340);
	int Constant341 = 4;
	bool Result500 = NiagaraAll(Context.Map.INTEGER_01_SparksInAdd.ExecutionState != Constant341);
	bool Result501 = Result499 && Result500;
	bool Result502 = In_Condition && Result501;
	bool Result503 = NiagaraAll(Context.Map.INTEGER_01_SparksInAdd.ExecutionStateSource <= In_NewStateSource);
	bool Result504 = Result502 && Result503;
	int ENiagaraExecutionState_IfResult36;
	int ENiagaraExecutionStateSource_IfResult36;
	if(Result504)
	{
	ENiagaraExecutionState_IfResult36 = In_NewState;
	ENiagaraExecutionStateSource_IfResult36 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult36 = Context.Map.INTEGER_01_SparksInAdd.ExecutionState;
	ENiagaraExecutionStateSource_IfResult36 = Context.Map.INTEGER_01_SparksInAdd.ExecutionStateSource;
	}
	Context.Map.INTEGER_01_SparksInAdd.ExecutionState = ENiagaraExecutionState_IfResult36;
	Context.Map.INTEGER_01_SparksInAdd.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult36;
}

void EmitterState_EmitterChangeState005_INTEGER_01_SparksInAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant346 = 3;
	bool Result508 = NiagaraAll(Context.Map.INTEGER_01_SparksInAdd.ExecutionState != Constant346);
	int Constant347 = 4;
	bool Result509 = NiagaraAll(Context.Map.INTEGER_01_SparksInAdd.ExecutionState != Constant347);
	bool Result510 = Result508 && Result509;
	bool Result511 = In_Condition && Result510;
	bool Result512 = NiagaraAll(Context.Map.INTEGER_01_SparksInAdd.ExecutionStateSource <= In_NewStateSource);
	bool Result513 = Result511 && Result512;
	int ENiagaraExecutionState_IfResult37;
	int ENiagaraExecutionStateSource_IfResult37;
	if(Result513)
	{
	ENiagaraExecutionState_IfResult37 = In_NewState;
	ENiagaraExecutionStateSource_IfResult37 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult37 = Context.Map.INTEGER_01_SparksInAdd.ExecutionState;
	ENiagaraExecutionStateSource_IfResult37 = Context.Map.INTEGER_01_SparksInAdd.ExecutionStateSource;
	}
	Context.Map.INTEGER_01_SparksInAdd.ExecutionState = ENiagaraExecutionState_IfResult37;
	Context.Map.INTEGER_01_SparksInAdd.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult37;
}

void EmitterState_EmitterChangeState003_INTEGER_01_SparksInAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant352 = 3;
	bool Result518 = NiagaraAll(Context.Map.INTEGER_01_SparksInAdd.ExecutionState != Constant352);
	int Constant353 = 4;
	bool Result519 = NiagaraAll(Context.Map.INTEGER_01_SparksInAdd.ExecutionState != Constant353);
	bool Result520 = Result518 && Result519;
	bool Result521 = In_Condition && Result520;
	bool Result522 = NiagaraAll(Context.Map.INTEGER_01_SparksInAdd.ExecutionStateSource <= In_NewStateSource);
	bool Result523 = Result521 && Result522;
	int ENiagaraExecutionState_IfResult38;
	int ENiagaraExecutionStateSource_IfResult38;
	if(Result523)
	{
	ENiagaraExecutionState_IfResult38 = In_NewState;
	ENiagaraExecutionStateSource_IfResult38 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult38 = Context.Map.INTEGER_01_SparksInAdd.ExecutionState;
	ENiagaraExecutionStateSource_IfResult38 = Context.Map.INTEGER_01_SparksInAdd.ExecutionStateSource;
	}
	Context.Map.INTEGER_01_SparksInAdd.ExecutionState = ENiagaraExecutionState_IfResult38;
	Context.Map.INTEGER_01_SparksInAdd.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult38;
}

void EmitterState_INTEGER_01_SparksInAdd_Func_(inout FSimulationContext Context)
{
	Context.Map.Local.EmitterState.PreviousEmitterState = Context.Map.INTEGER_01_SparksInAdd.ExecutionState;
	float Constant326 = 0.016667;
	float Result484 = max(Context.Map.EmitterState.LoopDuration, Constant326);
	Context.Map.Local.EmitterState.LoopDuration = Result484;
	float Constant327 = 0;
	bool Result485 = NiagaraAll(Context.Map.INTEGER_01_SparksInAdd.Age == Constant327);
	float Duration_IfResult9;
	if(Result485)
	{
	Duration_IfResult9 = Context.Map.Local.EmitterState.LoopDuration;
	}
	else
	{
	Duration_IfResult9 = Context.Map.INTEGER_01_SparksInAdd.CurrentLoopDuration;
	}
	float Constant328 = 0;
	Context.Map.INTEGER_01_SparksInAdd.CurrentLoopDuration = Duration_IfResult9;
	Context.Map.EmitterState.LoopDelay = Constant328;
	float Result486 = Context.Map.INTEGER_01_SparksInAdd.Age + Context.Map.Engine.DeltaTime;
	float Result487 = Context.Map.Engine.DeltaTime + Context.Map.INTEGER_01_SparksInAdd.LoopedAge;
	bool Result488 = NiagaraAll(Result487 >= Context.Map.INTEGER_01_SparksInAdd.CurrentLoopDuration);
	int Constant329 = 0;
	Context.Map.INTEGER_01_SparksInAdd.Age = Result486;
	Context.Map.INTEGER_01_SparksInAdd.LoopedAge = Result487;
	Context.Map.Local.EmitterState.LoopCountIncreased = Result488;
	Context.Map.INTEGER_01_SparksInAdd.LoopCount = Constant329;
	float Constant330 = 0;
	float Duration_IfResult10;
	float LoopedAge_IfResult17;
	if(Context.Map.Local.EmitterState.LoopCountIncreased)
	{
	Duration_IfResult10 = Context.Map.Local.EmitterState.LoopDuration;
	LoopedAge_IfResult17 = Constant330;
	}
	else
	{
	Duration_IfResult10 = Context.Map.INTEGER_01_SparksInAdd.CurrentLoopDuration;
	LoopedAge_IfResult17 = Context.Map.INTEGER_01_SparksInAdd.LoopedAge;
	}
	Context.Map.INTEGER_01_SparksInAdd.CurrentLoopDuration = Duration_IfResult10;
	Context.Map.INTEGER_01_SparksInAdd.LoopedAge = LoopedAge_IfResult17;
	float Result489 = Context.Map.INTEGER_01_SparksInAdd.LoopedAge / Context.Map.INTEGER_01_SparksInAdd.CurrentLoopDuration;
	Context.Map.INTEGER_01_SparksInAdd.NormalizedLoopAge = Result489;
	float Constant331 = 0;
	float Constant332 = 1.0001;
	float Result490 = clamp(Context.Map.Engine.Owner.LODDistanceFraction,Constant331,Constant332);
	Context.Map.INTEGER_01_SparksInAdd.Scalability.DistanceFraction = Result490;
	int Constant333 = 0;
	Context.Map.Transient.ScalabilityEmitterExecutionState = Constant333;
	int Constant334 = 0;
	bool Result491 = NiagaraAll(Context.Map.Engine.INTEGER_01_SparksInAdd.NumParticles == Constant334);
	Context.Map.Local.EmitterState.NoActiveEmitterParticles = Result491;
	int Constant335 = 0;
	bool Result492 = NiagaraAll(Context.Map.System.ExecutionStateSource == Constant335);
	EmitterState_EmitterChangeState002_INTEGER_01_SparksInAdd_Func_(Context.Map.System.ExecutionState, Result492, Context.Map.System.ExecutionStateSource, Context);
	int Constant338 = 1;
	int Constant339 = 1;
	EmitterState_EmitterChangeState_INTEGER_01_SparksInAdd_Func_(Constant338, Context.Map.Local.EmitterState.LoopCountIncreased, Constant339, Context);
	int Constant342 = 1;
	int Constant343 = 0;
	bool Result505 = NiagaraAll(Context.Map.System.ExecutionState != Constant343);
	int Constant344 = 2;
	bool Result506 = NiagaraAll(Context.Map.System.ExecutionStateSource == Constant344);
	bool Result507 = Result505 && Result506;
	int Constant345 = 1;
	EmitterState_EmitterChangeState005_INTEGER_01_SparksInAdd_Func_(Constant342, Result507, Constant345, Context);
	int Constant348 = 3;
	int Constant349 = 0;
	bool Result514 = NiagaraAll(Context.Map.INTEGER_01_SparksInAdd.ExecutionState != Constant349);
	int Constant350 = 0;
	bool Result515 = NiagaraAll(Context.Map.INTEGER_01_SparksInAdd.ExecutionStateSource != Constant350);
	bool Result516 = Result514 && Result515;
	bool Result517 = Context.Map.Local.EmitterState.NoActiveEmitterParticles && Result516;
	int Constant351 = 3;
	EmitterState_EmitterChangeState003_INTEGER_01_SparksInAdd_Func_(Constant348, Result517, Constant351, Context);
}

void SpawnRate_INTEGER_01_SparksInAdd_Func_(inout FSimulationContext Context)
{
	float Result524 = Context.Map.Constants.INTEGER_01_SparksInAdd.SpawnRate.SpawnRate * Context.Map.Transient.ScalabilityEmitterSpawnCountScale * Context.Map.Engine.INTEGER_01_SparksInAdd.SpawnCountScale;
	float Result525 = Reciprocal(Result524);
	float Result526 = 1 - Context.Map.INTEGER_01_SparksInAdd.SpawnRate.SpawnRemainder;
	float Result527 = Result525 * Result526;
	Context.Map.Local.SpawnRate.SpawnRate = Result524;
	Context.Map.Local.SpawnRate.IntervalDT = Result525;
	Context.Map.Local.SpawnRate.InterpStartDT = Result527;
	float Constant354 = 0;
	bool Result528 = NiagaraAll(Context.Map.INTEGER_01_SparksInAdd.LoopedAge >= Constant354);
	float Constant355 = 1;
	float Constant356 = 0;
	float float_IfResult9;
	if(Result528)
	{
	float_IfResult9 = Constant355;
	}
	else
	{
	float_IfResult9 = Constant356;
	}
	float Result529 = Context.Map.Local.SpawnRate.SpawnRate * float_IfResult9;
	float Result530 = Result529 * Context.Map.Engine.DeltaTime + Context.Map.INTEGER_01_SparksInAdd.SpawnRate.SpawnRemainder;
	float Result531 = floor(Result530);
	float Result532 = Result530 - Result531;
	Context.Map.Local.SpawnRate.SpawnCount = Result531;
	Context.Map.INTEGER_01_SparksInAdd.SpawnRate.SpawnRemainder = Result532;
	NiagaraSpawnInfo Output125;
	Output125.Count = Context.Map.Local.SpawnRate.SpawnCount;
	Output125.InterpStartDt = Context.Map.Local.SpawnRate.InterpStartDT;
	Output125.IntervalDt = Context.Map.Local.SpawnRate.IntervalDT;
	Output125.SpawnGroup = Context.Map.Constants.INTEGER_01_SparksInAdd.SpawnRate.SpawnGroup;
	bool Constant357 = true;
	Context.Map.INTEGER_01_SparksInAdd.SpawnRate.SpawnOutputInfo = Output125;
	Context.Map.Transient.SpawningbCanEverSpawn = Constant357;
}

void INTEGER_01_SparksInAdd_Func_(inout FSimulationContext Context)
{
	Context.Map.Divide_Float001.A = Context.Map.User.ImpactDelay;
	float Divide_Float001_INTEGER_01_SparksInAdd_Func_Output_Result;
	Divide_Float001_INTEGER_01_SparksInAdd_Func_(Divide_Float001_INTEGER_01_SparksInAdd_Func_Output_Result, Context);
	Context.Map.EmitterState.LoopDuration = Divide_Float001_INTEGER_01_SparksInAdd_Func_Output_Result;
	EnterStatScope(27 );
	EmitterState_INTEGER_01_SparksInAdd_Func_(Context);
	ExitStatScope( );
	EnterStatScope(28 );
	SpawnRate_INTEGER_01_SparksInAdd_Func_(Context);
	ExitStatScope( );
}

void EmitterState_EmitterChangeState002_INTEGER_01_GroupBeamAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant368 = 3;
	bool Result542 = NiagaraAll(Context.Map.INTEGER_01_GroupBeamAdd.ExecutionState != Constant368);
	int Constant369 = 4;
	bool Result543 = NiagaraAll(Context.Map.INTEGER_01_GroupBeamAdd.ExecutionState != Constant369);
	bool Result544 = Result542 && Result543;
	bool Result545 = In_Condition && Result544;
	bool Result546 = NiagaraAll(Context.Map.INTEGER_01_GroupBeamAdd.ExecutionStateSource <= In_NewStateSource);
	bool Result547 = Result545 && Result546;
	int ENiagaraExecutionState_IfResult39;
	int ENiagaraExecutionStateSource_IfResult39;
	if(Result547)
	{
	ENiagaraExecutionState_IfResult39 = In_NewState;
	ENiagaraExecutionStateSource_IfResult39 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult39 = Context.Map.INTEGER_01_GroupBeamAdd.ExecutionState;
	ENiagaraExecutionStateSource_IfResult39 = Context.Map.INTEGER_01_GroupBeamAdd.ExecutionStateSource;
	}
	Context.Map.INTEGER_01_GroupBeamAdd.ExecutionState = ENiagaraExecutionState_IfResult39;
	Context.Map.INTEGER_01_GroupBeamAdd.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult39;
}

void EmitterState_EmitterChangeState_INTEGER_01_GroupBeamAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant372 = 3;
	bool Result548 = NiagaraAll(Context.Map.INTEGER_01_GroupBeamAdd.ExecutionState != Constant372);
	int Constant373 = 4;
	bool Result549 = NiagaraAll(Context.Map.INTEGER_01_GroupBeamAdd.ExecutionState != Constant373);
	bool Result550 = Result548 && Result549;
	bool Result551 = In_Condition && Result550;
	bool Result552 = NiagaraAll(Context.Map.INTEGER_01_GroupBeamAdd.ExecutionStateSource <= In_NewStateSource);
	bool Result553 = Result551 && Result552;
	int ENiagaraExecutionState_IfResult40;
	int ENiagaraExecutionStateSource_IfResult40;
	if(Result553)
	{
	ENiagaraExecutionState_IfResult40 = In_NewState;
	ENiagaraExecutionStateSource_IfResult40 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult40 = Context.Map.INTEGER_01_GroupBeamAdd.ExecutionState;
	ENiagaraExecutionStateSource_IfResult40 = Context.Map.INTEGER_01_GroupBeamAdd.ExecutionStateSource;
	}
	Context.Map.INTEGER_01_GroupBeamAdd.ExecutionState = ENiagaraExecutionState_IfResult40;
	Context.Map.INTEGER_01_GroupBeamAdd.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult40;
}

void EmitterState_EmitterChangeState005_INTEGER_01_GroupBeamAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant378 = 3;
	bool Result557 = NiagaraAll(Context.Map.INTEGER_01_GroupBeamAdd.ExecutionState != Constant378);
	int Constant379 = 4;
	bool Result558 = NiagaraAll(Context.Map.INTEGER_01_GroupBeamAdd.ExecutionState != Constant379);
	bool Result559 = Result557 && Result558;
	bool Result560 = In_Condition && Result559;
	bool Result561 = NiagaraAll(Context.Map.INTEGER_01_GroupBeamAdd.ExecutionStateSource <= In_NewStateSource);
	bool Result562 = Result560 && Result561;
	int ENiagaraExecutionState_IfResult41;
	int ENiagaraExecutionStateSource_IfResult41;
	if(Result562)
	{
	ENiagaraExecutionState_IfResult41 = In_NewState;
	ENiagaraExecutionStateSource_IfResult41 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult41 = Context.Map.INTEGER_01_GroupBeamAdd.ExecutionState;
	ENiagaraExecutionStateSource_IfResult41 = Context.Map.INTEGER_01_GroupBeamAdd.ExecutionStateSource;
	}
	Context.Map.INTEGER_01_GroupBeamAdd.ExecutionState = ENiagaraExecutionState_IfResult41;
	Context.Map.INTEGER_01_GroupBeamAdd.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult41;
}

void EmitterState_EmitterChangeState003_INTEGER_01_GroupBeamAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant384 = 3;
	bool Result567 = NiagaraAll(Context.Map.INTEGER_01_GroupBeamAdd.ExecutionState != Constant384);
	int Constant385 = 4;
	bool Result568 = NiagaraAll(Context.Map.INTEGER_01_GroupBeamAdd.ExecutionState != Constant385);
	bool Result569 = Result567 && Result568;
	bool Result570 = In_Condition && Result569;
	bool Result571 = NiagaraAll(Context.Map.INTEGER_01_GroupBeamAdd.ExecutionStateSource <= In_NewStateSource);
	bool Result572 = Result570 && Result571;
	int ENiagaraExecutionState_IfResult42;
	int ENiagaraExecutionStateSource_IfResult42;
	if(Result572)
	{
	ENiagaraExecutionState_IfResult42 = In_NewState;
	ENiagaraExecutionStateSource_IfResult42 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult42 = Context.Map.INTEGER_01_GroupBeamAdd.ExecutionState;
	ENiagaraExecutionStateSource_IfResult42 = Context.Map.INTEGER_01_GroupBeamAdd.ExecutionStateSource;
	}
	Context.Map.INTEGER_01_GroupBeamAdd.ExecutionState = ENiagaraExecutionState_IfResult42;
	Context.Map.INTEGER_01_GroupBeamAdd.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult42;
}

void EmitterState_INTEGER_01_GroupBeamAdd_Func_(inout FSimulationContext Context)
{
	Context.Map.Local.EmitterState.PreviousEmitterState = Context.Map.INTEGER_01_GroupBeamAdd.ExecutionState;
	float Constant358 = 0.016667;
	float Result533 = max(Context.Map.Constants.INTEGER_01_GroupBeamAdd.EmitterState.LoopDuration, Constant358);
	Context.Map.Local.EmitterState.LoopDuration = Result533;
	float Constant359 = 0;
	bool Result534 = NiagaraAll(Context.Map.INTEGER_01_GroupBeamAdd.Age == Constant359);
	float Duration_IfResult11;
	if(Result534)
	{
	Duration_IfResult11 = Context.Map.Local.EmitterState.LoopDuration;
	}
	else
	{
	Duration_IfResult11 = Context.Map.INTEGER_01_GroupBeamAdd.CurrentLoopDuration;
	}
	float Constant360 = 0;
	Context.Map.INTEGER_01_GroupBeamAdd.CurrentLoopDuration = Duration_IfResult11;
	Context.Map.EmitterState.LoopDelay = Constant360;
	float Result535 = Context.Map.INTEGER_01_GroupBeamAdd.Age + Context.Map.Engine.DeltaTime;
	float Result536 = Context.Map.Engine.DeltaTime + Context.Map.INTEGER_01_GroupBeamAdd.LoopedAge;
	bool Result537 = NiagaraAll(Result536 >= Context.Map.INTEGER_01_GroupBeamAdd.CurrentLoopDuration);
	int Constant361 = 0;
	Context.Map.INTEGER_01_GroupBeamAdd.Age = Result535;
	Context.Map.INTEGER_01_GroupBeamAdd.LoopedAge = Result536;
	Context.Map.Local.EmitterState.LoopCountIncreased = Result537;
	Context.Map.INTEGER_01_GroupBeamAdd.LoopCount = Constant361;
	float Constant362 = 0;
	float Duration_IfResult12;
	float LoopedAge_IfResult18;
	if(Context.Map.Local.EmitterState.LoopCountIncreased)
	{
	Duration_IfResult12 = Context.Map.Local.EmitterState.LoopDuration;
	LoopedAge_IfResult18 = Constant362;
	}
	else
	{
	Duration_IfResult12 = Context.Map.INTEGER_01_GroupBeamAdd.CurrentLoopDuration;
	LoopedAge_IfResult18 = Context.Map.INTEGER_01_GroupBeamAdd.LoopedAge;
	}
	Context.Map.INTEGER_01_GroupBeamAdd.CurrentLoopDuration = Duration_IfResult12;
	Context.Map.INTEGER_01_GroupBeamAdd.LoopedAge = LoopedAge_IfResult18;
	float Result538 = Context.Map.INTEGER_01_GroupBeamAdd.LoopedAge / Context.Map.INTEGER_01_GroupBeamAdd.CurrentLoopDuration;
	Context.Map.INTEGER_01_GroupBeamAdd.NormalizedLoopAge = Result538;
	float Constant363 = 0;
	float Constant364 = 1.0001;
	float Result539 = clamp(Context.Map.Engine.Owner.LODDistanceFraction,Constant363,Constant364);
	Context.Map.INTEGER_01_GroupBeamAdd.Scalability.DistanceFraction = Result539;
	int Constant365 = 0;
	Context.Map.Transient.ScalabilityEmitterExecutionState = Constant365;
	int Constant366 = 0;
	bool Result540 = NiagaraAll(Context.Map.Engine.INTEGER_01_GroupBeamAdd.NumParticles == Constant366);
	Context.Map.Local.EmitterState.NoActiveEmitterParticles = Result540;
	int Constant367 = 0;
	bool Result541 = NiagaraAll(Context.Map.System.ExecutionStateSource == Constant367);
	EmitterState_EmitterChangeState002_INTEGER_01_GroupBeamAdd_Func_(Context.Map.System.ExecutionState, Result541, Context.Map.System.ExecutionStateSource, Context);
	int Constant370 = 1;
	int Constant371 = 1;
	EmitterState_EmitterChangeState_INTEGER_01_GroupBeamAdd_Func_(Constant370, Context.Map.Local.EmitterState.LoopCountIncreased, Constant371, Context);
	int Constant374 = 1;
	int Constant375 = 0;
	bool Result554 = NiagaraAll(Context.Map.System.ExecutionState != Constant375);
	int Constant376 = 2;
	bool Result555 = NiagaraAll(Context.Map.System.ExecutionStateSource == Constant376);
	bool Result556 = Result554 && Result555;
	int Constant377 = 1;
	EmitterState_EmitterChangeState005_INTEGER_01_GroupBeamAdd_Func_(Constant374, Result556, Constant377, Context);
	int Constant380 = 3;
	int Constant381 = 0;
	bool Result563 = NiagaraAll(Context.Map.INTEGER_01_GroupBeamAdd.ExecutionState != Constant381);
	int Constant382 = 0;
	bool Result564 = NiagaraAll(Context.Map.INTEGER_01_GroupBeamAdd.ExecutionStateSource != Constant382);
	bool Result565 = Result563 && Result564;
	bool Result566 = Context.Map.Local.EmitterState.NoActiveEmitterParticles && Result565;
	int Constant383 = 3;
	EmitterState_EmitterChangeState003_INTEGER_01_GroupBeamAdd_Func_(Constant380, Result566, Constant383, Context);
}

void SpawnBurst_Instantaneous_INTEGER_01_GroupBeamAdd_Func_(inout FSimulationContext Context)
{
	Context.Map.SpawnBurst_Instantaneous.Age = Context.Map.INTEGER_01_GroupBeamAdd.LoopedAge;
	float Result573 = Context.Map.SpawnBurst_Instantaneous.Age - Context.Map.Engine.DeltaTime;
	float Result574 = Context.Map.Constants.INTEGER_01_GroupBeamAdd.SpawnBurst_Instantaneous.SpawnTime - Result573;
	float Constant386 = 0;
	float Output126;
	Output126 = Constant386;
	bool Result575 = NiagaraAll(Result574 >= Output126);
	float Result576 = Context.Map.Constants.INTEGER_01_GroupBeamAdd.SpawnBurst_Instantaneous.SpawnTime - Context.Map.SpawnBurst_Instantaneous.Age;
	bool Result577 = NiagaraAll(Result576 < Output126);
	bool Result578 = Result575 && Result577;
	int Constant387 = 0;
	bool Result579 = NiagaraAll(Context.Map.Constants.INTEGER_01_GroupBeamAdd.SpawnBurst_Instantaneous.SpawnCount == Constant387);
	float Constant388 = 0;
	float Result580 = Context.Map.Constants.INTEGER_01_GroupBeamAdd.SpawnBurst_Instantaneous.SpawnCount * Context.Map.Transient.ScalabilityEmitterSpawnCountScale * Context.Map.Engine.INTEGER_01_GroupBeamAdd.SpawnCountScale;
	float Constant389 = 1;
	float Result581 = max(Result580, Constant389);
	float float_IfResult10;
	if(Result579)
	{
	float_IfResult10 = Constant388;
	}
	else
	{
	float_IfResult10 = Result581;
	}
	float Constant390 = 0;
	NiagaraSpawnInfo Output127;
	Output127.Count = float_IfResult10;
	Output127.InterpStartDt = Result574;
	Output127.IntervalDt = Constant390;
	Output127.SpawnGroup = Context.Map.Constants.INTEGER_01_GroupBeamAdd.SpawnBurst_Instantaneous.SpawnGroup;
	int Constant391 = 0;
	float Constant392 = 0;
	float Constant393 = 0;
	NiagaraSpawnInfo Output128;
	Output128.Count = Constant391;
	Output128.InterpStartDt = Constant392;
	Output128.SpawnGroup = Context.Map.Constants.INTEGER_01_GroupBeamAdd.SpawnBurst_Instantaneous.SpawnGroup;
	Output128.IntervalDt = Constant393;
	NiagaraSpawnInfo SpawnInfo_IfResult8;
	if(Result578)
	{
	SpawnInfo_IfResult8 = Output127;
	}
	else
	{
	SpawnInfo_IfResult8 = Output128;
	}
	Context.Map.INTEGER_01_GroupBeamAdd.SpawnBurst_Instantaneous.SpawnBurst = SpawnInfo_IfResult8;
	bool Result582 = NiagaraAll(Context.Map.INTEGER_01_GroupBeamAdd.LoopedAge <= Context.Map.Constants.INTEGER_01_GroupBeamAdd.SpawnBurst_Instantaneous.SpawnTime);
	bool Result583 = Context.Map.Transient.SpawningbCanEverSpawn || Result582;
	Context.Map.Transient.SpawningbCanEverSpawn = Result583;
}

void INTEGER_01_GroupBeamAdd_Func_(inout FSimulationContext Context)
{
	EnterStatScope(30 );
	EmitterState_INTEGER_01_GroupBeamAdd_Func_(Context);
	ExitStatScope( );
	EnterStatScope(31 );
	SpawnBurst_Instantaneous_INTEGER_01_GroupBeamAdd_Func_(Context);
	ExitStatScope( );
}

void EmitterState_EmitterChangeState002_INTEGER_01_CylinderAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant404 = 3;
	bool Result593 = NiagaraAll(Context.Map.INTEGER_01_CylinderAdd.ExecutionState != Constant404);
	int Constant405 = 4;
	bool Result594 = NiagaraAll(Context.Map.INTEGER_01_CylinderAdd.ExecutionState != Constant405);
	bool Result595 = Result593 && Result594;
	bool Result596 = In_Condition && Result595;
	bool Result597 = NiagaraAll(Context.Map.INTEGER_01_CylinderAdd.ExecutionStateSource <= In_NewStateSource);
	bool Result598 = Result596 && Result597;
	int ENiagaraExecutionState_IfResult43;
	int ENiagaraExecutionStateSource_IfResult43;
	if(Result598)
	{
	ENiagaraExecutionState_IfResult43 = In_NewState;
	ENiagaraExecutionStateSource_IfResult43 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult43 = Context.Map.INTEGER_01_CylinderAdd.ExecutionState;
	ENiagaraExecutionStateSource_IfResult43 = Context.Map.INTEGER_01_CylinderAdd.ExecutionStateSource;
	}
	Context.Map.INTEGER_01_CylinderAdd.ExecutionState = ENiagaraExecutionState_IfResult43;
	Context.Map.INTEGER_01_CylinderAdd.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult43;
}

void EmitterState_EmitterChangeState_INTEGER_01_CylinderAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant408 = 3;
	bool Result599 = NiagaraAll(Context.Map.INTEGER_01_CylinderAdd.ExecutionState != Constant408);
	int Constant409 = 4;
	bool Result600 = NiagaraAll(Context.Map.INTEGER_01_CylinderAdd.ExecutionState != Constant409);
	bool Result601 = Result599 && Result600;
	bool Result602 = In_Condition && Result601;
	bool Result603 = NiagaraAll(Context.Map.INTEGER_01_CylinderAdd.ExecutionStateSource <= In_NewStateSource);
	bool Result604 = Result602 && Result603;
	int ENiagaraExecutionState_IfResult44;
	int ENiagaraExecutionStateSource_IfResult44;
	if(Result604)
	{
	ENiagaraExecutionState_IfResult44 = In_NewState;
	ENiagaraExecutionStateSource_IfResult44 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult44 = Context.Map.INTEGER_01_CylinderAdd.ExecutionState;
	ENiagaraExecutionStateSource_IfResult44 = Context.Map.INTEGER_01_CylinderAdd.ExecutionStateSource;
	}
	Context.Map.INTEGER_01_CylinderAdd.ExecutionState = ENiagaraExecutionState_IfResult44;
	Context.Map.INTEGER_01_CylinderAdd.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult44;
}

void EmitterState_EmitterChangeState005_INTEGER_01_CylinderAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant414 = 3;
	bool Result608 = NiagaraAll(Context.Map.INTEGER_01_CylinderAdd.ExecutionState != Constant414);
	int Constant415 = 4;
	bool Result609 = NiagaraAll(Context.Map.INTEGER_01_CylinderAdd.ExecutionState != Constant415);
	bool Result610 = Result608 && Result609;
	bool Result611 = In_Condition && Result610;
	bool Result612 = NiagaraAll(Context.Map.INTEGER_01_CylinderAdd.ExecutionStateSource <= In_NewStateSource);
	bool Result613 = Result611 && Result612;
	int ENiagaraExecutionState_IfResult45;
	int ENiagaraExecutionStateSource_IfResult45;
	if(Result613)
	{
	ENiagaraExecutionState_IfResult45 = In_NewState;
	ENiagaraExecutionStateSource_IfResult45 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult45 = Context.Map.INTEGER_01_CylinderAdd.ExecutionState;
	ENiagaraExecutionStateSource_IfResult45 = Context.Map.INTEGER_01_CylinderAdd.ExecutionStateSource;
	}
	Context.Map.INTEGER_01_CylinderAdd.ExecutionState = ENiagaraExecutionState_IfResult45;
	Context.Map.INTEGER_01_CylinderAdd.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult45;
}

void EmitterState_EmitterChangeState003_INTEGER_01_CylinderAdd_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)
{
	int Constant420 = 3;
	bool Result618 = NiagaraAll(Context.Map.INTEGER_01_CylinderAdd.ExecutionState != Constant420);
	int Constant421 = 4;
	bool Result619 = NiagaraAll(Context.Map.INTEGER_01_CylinderAdd.ExecutionState != Constant421);
	bool Result620 = Result618 && Result619;
	bool Result621 = In_Condition && Result620;
	bool Result622 = NiagaraAll(Context.Map.INTEGER_01_CylinderAdd.ExecutionStateSource <= In_NewStateSource);
	bool Result623 = Result621 && Result622;
	int ENiagaraExecutionState_IfResult46;
	int ENiagaraExecutionStateSource_IfResult46;
	if(Result623)
	{
	ENiagaraExecutionState_IfResult46 = In_NewState;
	ENiagaraExecutionStateSource_IfResult46 = In_NewStateSource;
	}
	else
	{
	ENiagaraExecutionState_IfResult46 = Context.Map.INTEGER_01_CylinderAdd.ExecutionState;
	ENiagaraExecutionStateSource_IfResult46 = Context.Map.INTEGER_01_CylinderAdd.ExecutionStateSource;
	}
	Context.Map.INTEGER_01_CylinderAdd.ExecutionState = ENiagaraExecutionState_IfResult46;
	Context.Map.INTEGER_01_CylinderAdd.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult46;
}

void EmitterState_INTEGER_01_CylinderAdd_Func_(inout FSimulationContext Context)
{
	Context.Map.Local.EmitterState.PreviousEmitterState = Context.Map.INTEGER_01_CylinderAdd.ExecutionState;
	float Constant394 = 0.016667;
	float Result584 = max(Context.Map.Constants.INTEGER_01_CylinderAdd.EmitterState.LoopDuration, Constant394);
	Context.Map.Local.EmitterState.LoopDuration = Result584;
	float Constant395 = 0;
	bool Result585 = NiagaraAll(Context.Map.INTEGER_01_CylinderAdd.Age == Constant395);
	float Duration_IfResult13;
	if(Result585)
	{
	Duration_IfResult13 = Context.Map.Local.EmitterState.LoopDuration;
	}
	else
	{
	Duration_IfResult13 = Context.Map.INTEGER_01_CylinderAdd.CurrentLoopDuration;
	}
	float Constant396 = 0;
	Context.Map.INTEGER_01_CylinderAdd.CurrentLoopDuration = Duration_IfResult13;
	Context.Map.EmitterState.LoopDelay = Constant396;
	float Result586 = Context.Map.INTEGER_01_CylinderAdd.Age + Context.Map.Engine.DeltaTime;
	float Result587 = Context.Map.Engine.DeltaTime + Context.Map.INTEGER_01_CylinderAdd.LoopedAge;
	bool Result588 = NiagaraAll(Result587 >= Context.Map.INTEGER_01_CylinderAdd.CurrentLoopDuration);
	int Constant397 = 0;
	Context.Map.INTEGER_01_CylinderAdd.Age = Result586;
	Context.Map.INTEGER_01_CylinderAdd.LoopedAge = Result587;
	Context.Map.Local.EmitterState.LoopCountIncreased = Result588;
	Context.Map.INTEGER_01_CylinderAdd.LoopCount = Constant397;
	float Constant398 = 0;
	float Duration_IfResult14;
	float LoopedAge_IfResult19;
	if(Context.Map.Local.EmitterState.LoopCountIncreased)
	{
	Duration_IfResult14 = Context.Map.Local.EmitterState.LoopDuration;
	LoopedAge_IfResult19 = Constant398;
	}
	else
	{
	Duration_IfResult14 = Context.Map.INTEGER_01_CylinderAdd.CurrentLoopDuration;
	LoopedAge_IfResult19 = Context.Map.INTEGER_01_CylinderAdd.LoopedAge;
	}
	Context.Map.INTEGER_01_CylinderAdd.CurrentLoopDuration = Duration_IfResult14;
	Context.Map.INTEGER_01_CylinderAdd.LoopedAge = LoopedAge_IfResult19;
	float Result589 = Context.Map.INTEGER_01_CylinderAdd.LoopedAge / Context.Map.INTEGER_01_CylinderAdd.CurrentLoopDuration;
	Context.Map.INTEGER_01_CylinderAdd.NormalizedLoopAge = Result589;
	float Constant399 = 0;
	float Constant400 = 1.0001;
	float Result590 = clamp(Context.Map.Engine.Owner.LODDistanceFraction,Constant399,Constant400);
	Context.Map.INTEGER_01_CylinderAdd.Scalability.DistanceFraction = Result590;
	int Constant401 = 0;
	Context.Map.Transient.ScalabilityEmitterExecutionState = Constant401;
	int Constant402 = 0;
	bool Result591 = NiagaraAll(Context.Map.Engine.INTEGER_01_CylinderAdd.NumParticles == Constant402);
	Context.Map.Local.EmitterState.NoActiveEmitterParticles = Result591;
	int Constant403 = 0;
	bool Result592 = NiagaraAll(Context.Map.System.ExecutionStateSource == Constant403);
	EmitterState_EmitterChangeState002_INTEGER_01_CylinderAdd_Func_(Context.Map.System.ExecutionState, Result592, Context.Map.System.ExecutionStateSource, Context);
	int Constant406 = 1;
	int Constant407 = 1;
	EmitterState_EmitterChangeState_INTEGER_01_CylinderAdd_Func_(Constant406, Context.Map.Local.EmitterState.LoopCountIncreased, Constant407, Context);
	int Constant410 = 1;
	int Constant411 = 0;
	bool Result605 = NiagaraAll(Context.Map.System.ExecutionState != Constant411);
	int Constant412 = 2;
	bool Result606 = NiagaraAll(Context.Map.System.ExecutionStateSource == Constant412);
	bool Result607 = Result605 && Result606;
	int Constant413 = 1;
	EmitterState_EmitterChangeState005_INTEGER_01_CylinderAdd_Func_(Constant410, Result607, Constant413, Context);
	int Constant416 = 3;
	int Constant417 = 0;
	bool Result614 = NiagaraAll(Context.Map.INTEGER_01_CylinderAdd.ExecutionState != Constant417);
	int Constant418 = 0;
	bool Result615 = NiagaraAll(Context.Map.INTEGER_01_CylinderAdd.ExecutionStateSource != Constant418);
	bool Result616 = Result614 && Result615;
	bool Result617 = Context.Map.Local.EmitterState.NoActiveEmitterParticles && Result616;
	int Constant419 = 3;
	EmitterState_EmitterChangeState003_INTEGER_01_CylinderAdd_Func_(Constant416, Result617, Constant419, Context);
}

void SpawnBurst_Instantaneous_INTEGER_01_CylinderAdd_Func_(inout FSimulationContext Context)
{
	Context.Map.SpawnBurst_Instantaneous.Age = Context.Map.INTEGER_01_CylinderAdd.LoopedAge;
	float Result624 = Context.Map.SpawnBurst_Instantaneous.Age - Context.Map.Engine.DeltaTime;
	float Result625 = Context.Map.Constants.INTEGER_01_CylinderAdd.SpawnBurst_Instantaneous.SpawnTime - Result624;
	float Constant422 = 0;
	float Output129;
	Output129 = Constant422;
	bool Result626 = NiagaraAll(Result625 >= Output129);
	float Result627 = Context.Map.Constants.INTEGER_01_CylinderAdd.SpawnBurst_Instantaneous.SpawnTime - Context.Map.SpawnBurst_Instantaneous.Age;
	bool Result628 = NiagaraAll(Result627 < Output129);
	bool Result629 = Result626 && Result628;
	int Constant423 = 0;
	bool Result630 = NiagaraAll(Context.Map.Constants.INTEGER_01_CylinderAdd.SpawnBurst_Instantaneous.SpawnCount == Constant423);
	float Constant424 = 0;
	float Result631 = Context.Map.Constants.INTEGER_01_CylinderAdd.SpawnBurst_Instantaneous.SpawnCount * Context.Map.Transient.ScalabilityEmitterSpawnCountScale * Context.Map.Engine.INTEGER_01_CylinderAdd.SpawnCountScale;
	float Constant425 = 1;
	float Result632 = max(Result631, Constant425);
	float float_IfResult11;
	if(Result630)
	{
	float_IfResult11 = Constant424;
	}
	else
	{
	float_IfResult11 = Result632;
	}
	float Constant426 = 0;
	NiagaraSpawnInfo Output130;
	Output130.Count = float_IfResult11;
	Output130.InterpStartDt = Result625;
	Output130.IntervalDt = Constant426;
	Output130.SpawnGroup = Context.Map.Constants.INTEGER_01_CylinderAdd.SpawnBurst_Instantaneous.SpawnGroup;
	int Constant427 = 0;
	float Constant428 = 0;
	float Constant429 = 0;
	NiagaraSpawnInfo Output131;
	Output131.Count = Constant427;
	Output131.InterpStartDt = Constant428;
	Output131.SpawnGroup = Context.Map.Constants.INTEGER_01_CylinderAdd.SpawnBurst_Instantaneous.SpawnGroup;
	Output131.IntervalDt = Constant429;
	NiagaraSpawnInfo SpawnInfo_IfResult9;
	if(Result629)
	{
	SpawnInfo_IfResult9 = Output130;
	}
	else
	{
	SpawnInfo_IfResult9 = Output131;
	}
	Context.Map.INTEGER_01_CylinderAdd.SpawnBurst_Instantaneous.SpawnBurst = SpawnInfo_IfResult9;
	bool Result633 = NiagaraAll(Context.Map.INTEGER_01_CylinderAdd.LoopedAge <= Context.Map.Constants.INTEGER_01_CylinderAdd.SpawnBurst_Instantaneous.SpawnTime);
	bool Result634 = Context.Map.Transient.SpawningbCanEverSpawn || Result633;
	Context.Map.Transient.SpawningbCanEverSpawn = Result634;
}

void INTEGER_01_CylinderAdd_Func_(inout FSimulationContext Context)
{
	EnterStatScope(33 );
	EmitterState_INTEGER_01_CylinderAdd_Func_(Context);
	ExitStatScope( );
	EnterStatScope(34 );
	SpawnBurst_Instantaneous_INTEGER_01_CylinderAdd_Func_(Context);
	ExitStatScope( );
}

float GetSpawnInterpolation()
{
	return 1.0f;}


void ReadDataSets(inout FSimulationContext Context)
{
}

void WriteDataSets(inout FSimulationContext Context)
{
}

void Simulate(inout FSimulationContext Context)
{
	EnterStatScope(0 );


	bool Constant = (false);
	Context.Map.Local.SystemState.LoopCountIncreased = Constant;
	bool Constant1 = false;
	Context.Map.SystemState.RecalculateDurationEachLoop = Constant1;
	int Constant2 = 0;
	Context.Map.Transient.ScalabilityExecutionState = Constant2;
	EnterStatScope(1 );
	SystemState_Func_(Context);
	ExitStatScope( );
	EnterStatScope(2 );
	INTEGER_02_ShockwaveAdd002_Func_(Context);
	ExitStatScope( );
	EnterStatScope(5 );
	INTEGER_02_ShockwaveAdd001_Func_(Context);
	ExitStatScope( );
	EnterStatScope(8 );
	INTEGER_02_ShockwaveAdd_Func_(Context);
	ExitStatScope( );
	EnterStatScope(11 );
	INTEGER_02_FireImpact2Add_Func_(Context);
	ExitStatScope( );
	EnterStatScope(14 );
	INTEGER_02_BeamFlash_Func_(Context);
	ExitStatScope( );
	EnterStatScope(17 );
	INTEGER_02_BeamGround_Func_(Context);
	ExitStatScope( );
	EnterStatScope(20 );
	INTEGER_02_SparksOutAdd_Func_(Context);
	ExitStatScope( );
	EnterStatScope(23 );
	INTEGER_02_CylinderAdd_Func_(Context);
	ExitStatScope( );
	EnterStatScope(26 );
	INTEGER_01_SparksInAdd_Func_(Context);
	ExitStatScope( );
	EnterStatScope(29 );
	INTEGER_01_GroupBeamAdd_Func_(Context);
	ExitStatScope( );
	EnterStatScope(32 );
	INTEGER_01_CylinderAdd_Func_(Context);
	ExitStatScope( );
	ExitStatScope( );
}
void SimulateMain()
{
EnterStatScope(35 );

	FSimulationContext Context = (FSimulationContext)0;
	Context.Map.INTEGER_01_CylinderAdd.Age = InputDataFloat(0, 0);
	Context.Map.INTEGER_01_CylinderAdd.CurrentLoopDuration = InputDataFloat(0, 1);
	Context.Map.INTEGER_01_CylinderAdd.ExecutionState = InputDataInt(0, 2);
	Context.Map.INTEGER_01_CylinderAdd.ExecutionStateSource = InputDataInt(0, 3);
	Context.Map.INTEGER_01_CylinderAdd.LocalSpace = InputDataBool(0, 4);
	Context.Map.INTEGER_01_CylinderAdd.LoopCount = InputDataInt(0, 5);
	Context.Map.INTEGER_01_CylinderAdd.LoopedAge = InputDataFloat(0, 6);
	Context.Map.INTEGER_01_CylinderAdd.NormalizedLoopAge = InputDataFloat(0, 7);
	Context.Map.INTEGER_01_CylinderAdd.Scalability.DistanceFraction = InputDataFloat(0, 8);
	Context.Map.INTEGER_01_CylinderAdd.SpawnBurst_Instantaneous.SpawnBurst.Count = 0;
	Context.Map.INTEGER_01_CylinderAdd.SpawnBurst_Instantaneous.SpawnBurst.InterpStartDt = 0.0f;
	Context.Map.INTEGER_01_CylinderAdd.SpawnBurst_Instantaneous.SpawnBurst.IntervalDt = 0.0f;
	Context.Map.INTEGER_01_CylinderAdd.SpawnBurst_Instantaneous.SpawnBurst.SpawnGroup = 0;
	Context.Map.INTEGER_01_GroupBeamAdd.Age = InputDataFloat(0, 13);
	Context.Map.INTEGER_01_GroupBeamAdd.CurrentLoopDuration = InputDataFloat(0, 14);
	Context.Map.INTEGER_01_GroupBeamAdd.ExecutionState = InputDataInt(0, 15);
	Context.Map.INTEGER_01_GroupBeamAdd.ExecutionStateSource = InputDataInt(0, 16);
	Context.Map.INTEGER_01_GroupBeamAdd.LocalSpace = InputDataBool(0, 17);
	Context.Map.INTEGER_01_GroupBeamAdd.LoopCount = InputDataInt(0, 18);
	Context.Map.INTEGER_01_GroupBeamAdd.LoopedAge = InputDataFloat(0, 19);
	Context.Map.INTEGER_01_GroupBeamAdd.NormalizedLoopAge = InputDataFloat(0, 20);
	Context.Map.INTEGER_01_GroupBeamAdd.Scalability.DistanceFraction = InputDataFloat(0, 21);
	Context.Map.INTEGER_01_GroupBeamAdd.SpawnBurst_Instantaneous.SpawnBurst.Count = 0;
	Context.Map.INTEGER_01_GroupBeamAdd.SpawnBurst_Instantaneous.SpawnBurst.InterpStartDt = 0.0f;
	Context.Map.INTEGER_01_GroupBeamAdd.SpawnBurst_Instantaneous.SpawnBurst.IntervalDt = 0.0f;
	Context.Map.INTEGER_01_GroupBeamAdd.SpawnBurst_Instantaneous.SpawnBurst.SpawnGroup = 0;
	Context.Map.INTEGER_01_SparksInAdd.Age = InputDataFloat(0, 26);
	Context.Map.INTEGER_01_SparksInAdd.CurrentLoopDuration = InputDataFloat(0, 27);
	Context.Map.INTEGER_01_SparksInAdd.ExecutionState = InputDataInt(0, 28);
	Context.Map.INTEGER_01_SparksInAdd.ExecutionStateSource = InputDataInt(0, 29);
	Context.Map.INTEGER_01_SparksInAdd.LocalSpace = InputDataBool(0, 30);
	Context.Map.INTEGER_01_SparksInAdd.LoopCount = InputDataInt(0, 31);
	Context.Map.INTEGER_01_SparksInAdd.LoopedAge = InputDataFloat(0, 32);
	Context.Map.INTEGER_01_SparksInAdd.NormalizedLoopAge = InputDataFloat(0, 33);
	Context.Map.INTEGER_01_SparksInAdd.Scalability.DistanceFraction = InputDataFloat(0, 34);
	Context.Map.INTEGER_01_SparksInAdd.SpawnRate.SpawnOutputInfo.Count = 0;
	Context.Map.INTEGER_01_SparksInAdd.SpawnRate.SpawnOutputInfo.InterpStartDt = 0.0f;
	Context.Map.INTEGER_01_SparksInAdd.SpawnRate.SpawnOutputInfo.IntervalDt = 0.0f;
	Context.Map.INTEGER_01_SparksInAdd.SpawnRate.SpawnOutputInfo.SpawnGroup = 0;
	Context.Map.INTEGER_01_SparksInAdd.SpawnRate.SpawnRemainder = InputDataFloat(0, 39);
	Context.Map.INTEGER_01_SparksInAdd.SphereRadius = InputDataFloat(0, 40);
	Context.Map.INTEGER_02_BeamFlash.Age = InputDataFloat(0, 41);
	Context.Map.INTEGER_02_BeamFlash.CurrentLoopDelay = InputDataFloat(0, 42);
	Context.Map.INTEGER_02_BeamFlash.CurrentLoopDuration = InputDataFloat(0, 43);
	Context.Map.INTEGER_02_BeamFlash.ExecutionState = InputDataInt(0, 44);
	Context.Map.INTEGER_02_BeamFlash.ExecutionStateSource = InputDataInt(0, 45);
	Context.Map.INTEGER_02_BeamFlash.LocalSpace = InputDataBool(0, 46);
	Context.Map.INTEGER_02_BeamFlash.LoopCount = InputDataInt(0, 47);
	Context.Map.INTEGER_02_BeamFlash.LoopedAge = InputDataFloat(0, 48);
	Context.Map.INTEGER_02_BeamFlash.NormalizedLoopAge = InputDataFloat(0, 49);
	Context.Map.INTEGER_02_BeamFlash.Scalability.DistanceFraction = InputDataFloat(0, 50);
	Context.Map.INTEGER_02_BeamFlash.SpawnBurst_Instantaneous.SpawnBurst.Count = 0;
	Context.Map.INTEGER_02_BeamFlash.SpawnBurst_Instantaneous.SpawnBurst.InterpStartDt = 0.0f;
	Context.Map.INTEGER_02_BeamFlash.SpawnBurst_Instantaneous.SpawnBurst.IntervalDt = 0.0f;
	Context.Map.INTEGER_02_BeamFlash.SpawnBurst_Instantaneous.SpawnBurst.SpawnGroup = 0;
	Context.Map.INTEGER_02_BeamGround.Age = InputDataFloat(0, 55);
	Context.Map.INTEGER_02_BeamGround.CurrentLoopDelay = InputDataFloat(0, 56);
	Context.Map.INTEGER_02_BeamGround.CurrentLoopDuration = InputDataFloat(0, 57);
	Context.Map.INTEGER_02_BeamGround.ExecutionState = InputDataInt(0, 58);
	Context.Map.INTEGER_02_BeamGround.ExecutionStateSource = InputDataInt(0, 59);
	Context.Map.INTEGER_02_BeamGround.LocalSpace = InputDataBool(0, 60);
	Context.Map.INTEGER_02_BeamGround.LoopCount = InputDataInt(0, 61);
	Context.Map.INTEGER_02_BeamGround.LoopedAge = InputDataFloat(0, 62);
	Context.Map.INTEGER_02_BeamGround.NormalizedLoopAge = InputDataFloat(0, 63);
	Context.Map.INTEGER_02_BeamGround.Scalability.DistanceFraction = InputDataFloat(0, 64);
	Context.Map.INTEGER_02_BeamGround.SpawnBurst_Instantaneous.SpawnBurst.Count = 0;
	Context.Map.INTEGER_02_BeamGround.SpawnBurst_Instantaneous.SpawnBurst.InterpStartDt = 0.0f;
	Context.Map.INTEGER_02_BeamGround.SpawnBurst_Instantaneous.SpawnBurst.IntervalDt = 0.0f;
	Context.Map.INTEGER_02_BeamGround.SpawnBurst_Instantaneous.SpawnBurst.SpawnGroup = 0;
	Context.Map.INTEGER_02_CylinderAdd.Age = InputDataFloat(0, 69);
	Context.Map.INTEGER_02_CylinderAdd.CurrentLoopDelay = InputDataFloat(0, 70);
	Context.Map.INTEGER_02_CylinderAdd.CurrentLoopDuration = InputDataFloat(0, 71);
	Context.Map.INTEGER_02_CylinderAdd.ExecutionState = InputDataInt(0, 72);
	Context.Map.INTEGER_02_CylinderAdd.ExecutionStateSource = InputDataInt(0, 73);
	Context.Map.INTEGER_02_CylinderAdd.LocalSpace = InputDataBool(0, 74);
	Context.Map.INTEGER_02_CylinderAdd.LoopCount = InputDataInt(0, 75);
	Context.Map.INTEGER_02_CylinderAdd.LoopedAge = InputDataFloat(0, 76);
	Context.Map.INTEGER_02_CylinderAdd.NormalizedLoopAge = InputDataFloat(0, 77);
	Context.Map.INTEGER_02_CylinderAdd.Scalability.DistanceFraction = InputDataFloat(0, 78);
	Context.Map.INTEGER_02_CylinderAdd.SpawnBurst_Instantaneous.SpawnBurst.Count = 0;
	Context.Map.INTEGER_02_CylinderAdd.SpawnBurst_Instantaneous.SpawnBurst.InterpStartDt = 0.0f;
	Context.Map.INTEGER_02_CylinderAdd.SpawnBurst_Instantaneous.SpawnBurst.IntervalDt = 0.0f;
	Context.Map.INTEGER_02_CylinderAdd.SpawnBurst_Instantaneous.SpawnBurst.SpawnGroup = 0;
	Context.Map.INTEGER_02_FireImpact2Add.Age = InputDataFloat(0, 83);
	Context.Map.INTEGER_02_FireImpact2Add.CurrentLoopDelay = InputDataFloat(0, 84);
	Context.Map.INTEGER_02_FireImpact2Add.CurrentLoopDuration = InputDataFloat(0, 85);
	Context.Map.INTEGER_02_FireImpact2Add.ExecutionState = InputDataInt(0, 86);
	Context.Map.INTEGER_02_FireImpact2Add.ExecutionStateSource = InputDataInt(0, 87);
	Context.Map.INTEGER_02_FireImpact2Add.LocalSpace = InputDataBool(0, 88);
	Context.Map.INTEGER_02_FireImpact2Add.LoopCount = InputDataInt(0, 89);
	Context.Map.INTEGER_02_FireImpact2Add.LoopedAge = InputDataFloat(0, 90);
	Context.Map.INTEGER_02_FireImpact2Add.NormalizedLoopAge = InputDataFloat(0, 91);
	Context.Map.INTEGER_02_FireImpact2Add.Scalability.DistanceFraction = InputDataFloat(0, 92);
	Context.Map.INTEGER_02_FireImpact2Add.SpawnBurst_Instantaneous.SpawnBurst.Count = 0;
	Context.Map.INTEGER_02_FireImpact2Add.SpawnBurst_Instantaneous.SpawnBurst.InterpStartDt = 0.0f;
	Context.Map.INTEGER_02_FireImpact2Add.SpawnBurst_Instantaneous.SpawnBurst.IntervalDt = 0.0f;
	Context.Map.INTEGER_02_FireImpact2Add.SpawnBurst_Instantaneous.SpawnBurst.SpawnGroup = 0;
	Context.Map.INTEGER_02_ShockwaveAdd.Age = InputDataFloat(0, 97);
	Context.Map.INTEGER_02_ShockwaveAdd.CurrentLoopDelay = InputDataFloat(0, 98);
	Context.Map.INTEGER_02_ShockwaveAdd.CurrentLoopDuration = InputDataFloat(0, 99);
	Context.Map.INTEGER_02_ShockwaveAdd.ExecutionState = InputDataInt(0, 100);
	Context.Map.INTEGER_02_ShockwaveAdd.ExecutionStateSource = InputDataInt(0, 101);
	Context.Map.INTEGER_02_ShockwaveAdd.LocalSpace = InputDataBool(0, 102);
	Context.Map.INTEGER_02_ShockwaveAdd.LoopCount = InputDataInt(0, 103);
	Context.Map.INTEGER_02_ShockwaveAdd.LoopedAge = InputDataFloat(0, 104);
	Context.Map.INTEGER_02_ShockwaveAdd.NormalizedLoopAge = InputDataFloat(0, 105);
	Context.Map.INTEGER_02_ShockwaveAdd.Scalability.DistanceFraction = InputDataFloat(0, 106);
	Context.Map.INTEGER_02_ShockwaveAdd.SpawnBurst_Instantaneous.SpawnBurst.Count = 0;
	Context.Map.INTEGER_02_ShockwaveAdd.SpawnBurst_Instantaneous.SpawnBurst.InterpStartDt = 0.0f;
	Context.Map.INTEGER_02_ShockwaveAdd.SpawnBurst_Instantaneous.SpawnBurst.IntervalDt = 0.0f;
	Context.Map.INTEGER_02_ShockwaveAdd.SpawnBurst_Instantaneous.SpawnBurst.SpawnGroup = 0;
	Context.Map.INTEGER_02_ShockwaveAdd001.Age = InputDataFloat(0, 111);
	Context.Map.INTEGER_02_ShockwaveAdd001.CurrentLoopDelay = InputDataFloat(0, 112);
	Context.Map.INTEGER_02_ShockwaveAdd001.CurrentLoopDuration = InputDataFloat(0, 113);
	Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionState = InputDataInt(0, 114);
	Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionStateSource = InputDataInt(0, 115);
	Context.Map.INTEGER_02_ShockwaveAdd001.LocalSpace = InputDataBool(0, 116);
	Context.Map.INTEGER_02_ShockwaveAdd001.LoopCount = InputDataInt(0, 117);
	Context.Map.INTEGER_02_ShockwaveAdd001.LoopedAge = InputDataFloat(0, 118);
	Context.Map.INTEGER_02_ShockwaveAdd001.NormalizedLoopAge = InputDataFloat(0, 119);
	Context.Map.INTEGER_02_ShockwaveAdd001.Scalability.DistanceFraction = InputDataFloat(0, 120);
	Context.Map.INTEGER_02_ShockwaveAdd001.SpawnBurst_Instantaneous.SpawnBurst.Count = 0;
	Context.Map.INTEGER_02_ShockwaveAdd001.SpawnBurst_Instantaneous.SpawnBurst.InterpStartDt = 0.0f;
	Context.Map.INTEGER_02_ShockwaveAdd001.SpawnBurst_Instantaneous.SpawnBurst.IntervalDt = 0.0f;
	Context.Map.INTEGER_02_ShockwaveAdd001.SpawnBurst_Instantaneous.SpawnBurst.SpawnGroup = 0;
	Context.Map.INTEGER_02_ShockwaveAdd002.Age = InputDataFloat(0, 125);
	Context.Map.INTEGER_02_ShockwaveAdd002.CurrentLoopDelay = InputDataFloat(0, 126);
	Context.Map.INTEGER_02_ShockwaveAdd002.CurrentLoopDuration = InputDataFloat(0, 127);
	Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionState = InputDataInt(0, 128);
	Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionStateSource = InputDataInt(0, 129);
	Context.Map.INTEGER_02_ShockwaveAdd002.LocalSpace = InputDataBool(0, 130);
	Context.Map.INTEGER_02_ShockwaveAdd002.LoopCount = InputDataInt(0, 131);
	Context.Map.INTEGER_02_ShockwaveAdd002.LoopedAge = InputDataFloat(0, 132);
	Context.Map.INTEGER_02_ShockwaveAdd002.NormalizedLoopAge = InputDataFloat(0, 133);
	Context.Map.INTEGER_02_ShockwaveAdd002.Scalability.DistanceFraction = InputDataFloat(0, 134);
	Context.Map.INTEGER_02_ShockwaveAdd002.SpawnBurst_Instantaneous.SpawnBurst.Count = 0;
	Context.Map.INTEGER_02_ShockwaveAdd002.SpawnBurst_Instantaneous.SpawnBurst.InterpStartDt = 0.0f;
	Context.Map.INTEGER_02_ShockwaveAdd002.SpawnBurst_Instantaneous.SpawnBurst.IntervalDt = 0.0f;
	Context.Map.INTEGER_02_ShockwaveAdd002.SpawnBurst_Instantaneous.SpawnBurst.SpawnGroup = 0;
	Context.Map.INTEGER_02_SparksOutAdd.Age = InputDataFloat(0, 139);
	Context.Map.INTEGER_02_SparksOutAdd.CurrentLoopDelay = InputDataFloat(0, 140);
	Context.Map.INTEGER_02_SparksOutAdd.CurrentLoopDuration = InputDataFloat(0, 141);
	Context.Map.INTEGER_02_SparksOutAdd.ExecutionState = InputDataInt(0, 142);
	Context.Map.INTEGER_02_SparksOutAdd.ExecutionStateSource = InputDataInt(0, 143);
	Context.Map.INTEGER_02_SparksOutAdd.LocalSpace = InputDataBool(0, 144);
	Context.Map.INTEGER_02_SparksOutAdd.LoopCount = InputDataInt(0, 145);
	Context.Map.INTEGER_02_SparksOutAdd.LoopedAge = InputDataFloat(0, 146);
	Context.Map.INTEGER_02_SparksOutAdd.NormalizedLoopAge = InputDataFloat(0, 147);
	Context.Map.INTEGER_02_SparksOutAdd.Scalability.DistanceFraction = InputDataFloat(0, 148);
	Context.Map.INTEGER_02_SparksOutAdd.SpawnBurst_Instantaneous.SpawnBurst.Count = 0;
	Context.Map.INTEGER_02_SparksOutAdd.SpawnBurst_Instantaneous.SpawnBurst.InterpStartDt = 0.0f;
	Context.Map.INTEGER_02_SparksOutAdd.SpawnBurst_Instantaneous.SpawnBurst.IntervalDt = 0.0f;
	Context.Map.INTEGER_02_SparksOutAdd.SpawnBurst_Instantaneous.SpawnBurst.SpawnGroup = 0;
	Context.Map.INTEGER_02_SparksOutAdd.SphereRadius = InputDataFloat(0, 153);
	Context.Map.Emitter.RandomSeed = InputDataInt(0, 154);
	Context.Map.System.Age = InputDataFloat(0, 155);
	Context.Map.System.bCompleteOnInactive = InputDataBool(0, 156);
	Context.Map.System.CurrentLoopDuration = InputDataFloat(0, 157);
	Context.Map.System.ExecutionState = InputDataInt(0, 158);
	Context.Map.System.ExecutionStateSource = InputDataInt(0, 159);
	Context.Map.System.LoopCount = InputDataInt(0, 160);
	Context.Map.System.LoopedAge = InputDataFloat(0, 161);
	Context.Map.System.NormalizedLoopAge = InputDataFloat(0, 162);
	Context.Map.Engine.INTEGER_01_CylinderAdd.NumParticles = InputDataInt(1, 0);
	Context.Map.Engine.INTEGER_01_CylinderAdd.SpawnCountScale = InputDataFloat(1, 1);
	Context.Map.Engine.INTEGER_01_GroupBeamAdd.NumParticles = InputDataInt(1, 2);
	Context.Map.Engine.INTEGER_01_GroupBeamAdd.SpawnCountScale = InputDataFloat(1, 3);
	Context.Map.Engine.INTEGER_01_SparksInAdd.NumParticles = InputDataInt(1, 4);
	Context.Map.Engine.INTEGER_01_SparksInAdd.SpawnCountScale = InputDataFloat(1, 5);
	Context.Map.Engine.INTEGER_02_BeamFlash.NumParticles = InputDataInt(1, 6);
	Context.Map.Engine.INTEGER_02_BeamFlash.SpawnCountScale = InputDataFloat(1, 7);
	Context.Map.Engine.INTEGER_02_BeamGround.NumParticles = InputDataInt(1, 8);
	Context.Map.Engine.INTEGER_02_BeamGround.SpawnCountScale = InputDataFloat(1, 9);
	Context.Map.Engine.INTEGER_02_CylinderAdd.NumParticles = InputDataInt(1, 10);
	Context.Map.Engine.INTEGER_02_CylinderAdd.SpawnCountScale = InputDataFloat(1, 11);
	Context.Map.Engine.INTEGER_02_FireImpact2Add.NumParticles = InputDataInt(1, 12);
	Context.Map.Engine.INTEGER_02_FireImpact2Add.SpawnCountScale = InputDataFloat(1, 13);
	Context.Map.Engine.INTEGER_02_ShockwaveAdd.NumParticles = InputDataInt(1, 14);
	Context.Map.Engine.INTEGER_02_ShockwaveAdd.SpawnCountScale = InputDataFloat(1, 15);
	Context.Map.Engine.INTEGER_02_ShockwaveAdd001.NumParticles = InputDataInt(1, 16);
	Context.Map.Engine.INTEGER_02_ShockwaveAdd001.SpawnCountScale = InputDataFloat(1, 17);
	Context.Map.Engine.INTEGER_02_ShockwaveAdd002.NumParticles = InputDataInt(1, 18);
	Context.Map.Engine.INTEGER_02_ShockwaveAdd002.SpawnCountScale = InputDataFloat(1, 19);
	Context.Map.Engine.INTEGER_02_SparksOutAdd.NumParticles = InputDataInt(1, 20);
	Context.Map.Engine.INTEGER_02_SparksOutAdd.SpawnCountScale = InputDataFloat(1, 21);
	Context.Map.Engine.Emitter.TotalSpawnedParticles = InputDataInt(1, 22);
	Context.Map.Engine.Owner.ExecutionState = InputDataInt(1, 23);
	Context.Map.Engine.Owner.LODDistanceFraction = InputDataFloat(1, 24);
	Context.Map.Engine.System.TickCount = InputDataInt(1, 25);
	Context.Map.User.INTEGER_02_SparksOutAdd.RandomSeed = InputDataInt(1, 26);
	Context.Map.User.ImpactDelay = InputDataFloat(1, 27);
	Context.Map.Constants.SystemState.LoopDelay = Constants_SystemState_LoopDelay;
	Context.Map.Constants.SystemState.LoopDuration = Constants_SystemState_LoopDuration;
	Context.Map.Engine.DeltaTime = Engine_DeltaTime;
	Context.Map.Constants.INTEGER_02_ShockwaveAdd002.EmitterState.LoopDuration = Constants_INTEGER_02_ShockwaveAdd002_EmitterState_LoopDuration;
	Context.Map.Constants.INTEGER_02_ShockwaveAdd002.SpawnBurst_Instantaneous.SpawnTime = Constants_INTEGER_02_ShockwaveAdd002_SpawnBurst_Instantaneous_SpawnTime;
	Context.Map.Constants.INTEGER_02_ShockwaveAdd002.SpawnBurst_Instantaneous.SpawnGroup = Constants_INTEGER_02_ShockwaveAdd002_SpawnBurst_Instantaneous_SpawnGroup;
	Context.Map.Constants.INTEGER_02_ShockwaveAdd002.SpawnBurst_Instantaneous.SpawnProbability = Constants_INTEGER_02_ShockwaveAdd002_SpawnBurst_Instantaneous_SpawnProbability;
	Context.Map.Constants.INTEGER_02_ShockwaveAdd002.SpawnBurst_Instantaneous.SpawnCount = Constants_INTEGER_02_ShockwaveAdd002_SpawnBurst_Instantaneous_SpawnCount;
	Context.Map.Constants.INTEGER_02_ShockwaveAdd001.EmitterState.LoopDuration = Constants_INTEGER_02_ShockwaveAdd001_EmitterState_LoopDuration;
	Context.Map.Constants.INTEGER_02_ShockwaveAdd001.SpawnBurst_Instantaneous.SpawnTime = Constants_INTEGER_02_ShockwaveAdd001_SpawnBurst_Instantaneous_SpawnTime;
	Context.Map.Constants.INTEGER_02_ShockwaveAdd001.SpawnBurst_Instantaneous.SpawnGroup = Constants_INTEGER_02_ShockwaveAdd001_SpawnBurst_Instantaneous_SpawnGroup;
	Context.Map.Constants.INTEGER_02_ShockwaveAdd001.SpawnBurst_Instantaneous.SpawnProbability = Constants_INTEGER_02_ShockwaveAdd001_SpawnBurst_Instantaneous_SpawnProbability;
	Context.Map.Constants.INTEGER_02_ShockwaveAdd001.SpawnBurst_Instantaneous.SpawnCount = Constants_INTEGER_02_ShockwaveAdd001_SpawnBurst_Instantaneous_SpawnCount;
	Context.Map.Constants.INTEGER_02_ShockwaveAdd.EmitterState.LoopDuration = Constants_INTEGER_02_ShockwaveAdd_EmitterState_LoopDuration;
	Context.Map.Constants.INTEGER_02_ShockwaveAdd.SpawnBurst_Instantaneous.SpawnTime = Constants_INTEGER_02_ShockwaveAdd_SpawnBurst_Instantaneous_SpawnTime;
	Context.Map.Constants.INTEGER_02_ShockwaveAdd.SpawnBurst_Instantaneous.SpawnGroup = Constants_INTEGER_02_ShockwaveAdd_SpawnBurst_Instantaneous_SpawnGroup;
	Context.Map.Constants.INTEGER_02_ShockwaveAdd.SpawnBurst_Instantaneous.SpawnProbability = Constants_INTEGER_02_ShockwaveAdd_SpawnBurst_Instantaneous_SpawnProbability;
	Context.Map.Constants.INTEGER_02_ShockwaveAdd.SpawnBurst_Instantaneous.SpawnCount = Constants_INTEGER_02_ShockwaveAdd_SpawnBurst_Instantaneous_SpawnCount;
	Context.Map.Constants.INTEGER_02_FireImpact2Add.EmitterState.LoopDuration = Constants_INTEGER_02_FireImpact2Add_EmitterState_LoopDuration;
	Context.Map.Constants.INTEGER_02_FireImpact2Add.SpawnBurst_Instantaneous.SpawnTime = Constants_INTEGER_02_FireImpact2Add_SpawnBurst_Instantaneous_SpawnTime;
	Context.Map.Constants.INTEGER_02_FireImpact2Add.SpawnBurst_Instantaneous.SpawnGroup = Constants_INTEGER_02_FireImpact2Add_SpawnBurst_Instantaneous_SpawnGroup;
	Context.Map.Constants.INTEGER_02_FireImpact2Add.SpawnBurst_Instantaneous.SpawnProbability = Constants_INTEGER_02_FireImpact2Add_SpawnBurst_Instantaneous_SpawnProbability;
	Context.Map.Constants.INTEGER_02_FireImpact2Add.SpawnBurst_Instantaneous.SpawnCount = Constants_INTEGER_02_FireImpact2Add_SpawnBurst_Instantaneous_SpawnCount;
	Context.Map.Constants.INTEGER_02_BeamFlash.EmitterState.LoopDuration = Constants_INTEGER_02_BeamFlash_EmitterState_LoopDuration;
	Context.Map.Constants.INTEGER_02_BeamFlash.SpawnBurst_Instantaneous.SpawnTime = Constants_INTEGER_02_BeamFlash_SpawnBurst_Instantaneous_SpawnTime;
	Context.Map.Constants.INTEGER_02_BeamFlash.SpawnBurst_Instantaneous.SpawnGroup = Constants_INTEGER_02_BeamFlash_SpawnBurst_Instantaneous_SpawnGroup;
	Context.Map.Constants.INTEGER_02_BeamFlash.SpawnBurst_Instantaneous.SpawnProbability = Constants_INTEGER_02_BeamFlash_SpawnBurst_Instantaneous_SpawnProbability;
	Context.Map.Constants.INTEGER_02_BeamFlash.SpawnBurst_Instantaneous.SpawnCount = Constants_INTEGER_02_BeamFlash_SpawnBurst_Instantaneous_SpawnCount;
	Context.Map.Constants.INTEGER_02_BeamGround.EmitterState.LoopDuration = Constants_INTEGER_02_BeamGround_EmitterState_LoopDuration;
	Context.Map.Constants.INTEGER_02_BeamGround.SpawnBurst_Instantaneous.SpawnTime = Constants_INTEGER_02_BeamGround_SpawnBurst_Instantaneous_SpawnTime;
	Context.Map.Constants.INTEGER_02_BeamGround.SpawnBurst_Instantaneous.SpawnGroup = Constants_INTEGER_02_BeamGround_SpawnBurst_Instantaneous_SpawnGroup;
	Context.Map.Constants.INTEGER_02_BeamGround.SpawnBurst_Instantaneous.SpawnProbability = Constants_INTEGER_02_BeamGround_SpawnBurst_Instantaneous_SpawnProbability;
	Context.Map.Constants.INTEGER_02_BeamGround.SpawnBurst_Instantaneous.SpawnCount = Constants_INTEGER_02_BeamGround_SpawnBurst_Instantaneous_SpawnCount;
	Context.Map.Constants.INTEGER_02_SparksOutAdd.EmitterState.LoopDuration = Constants_INTEGER_02_SparksOutAdd_EmitterState_LoopDuration;
	Context.Map.Constants.INTEGER_02_SparksOutAdd.UniformRangedInt.Minimum = Constants_INTEGER_02_SparksOutAdd_UniformRangedInt_Minimum;
	Context.Map.Constants.INTEGER_02_SparksOutAdd.UniformRangedInt.Maximum = Constants_INTEGER_02_SparksOutAdd_UniformRangedInt_Maximum;
	Context.Map.Constants.INTEGER_02_SparksOutAdd.UniformRangedInt.RandomSeed = Constants_INTEGER_02_SparksOutAdd_UniformRangedInt_RandomSeed;
	Context.Map.Constants.INTEGER_02_SparksOutAdd.SpawnBurst_Instantaneous.SpawnTime = Constants_INTEGER_02_SparksOutAdd_SpawnBurst_Instantaneous_SpawnTime;
	Context.Map.Constants.INTEGER_02_SparksOutAdd.SpawnBurst_Instantaneous.SpawnGroup = Constants_INTEGER_02_SparksOutAdd_SpawnBurst_Instantaneous_SpawnGroup;
	Context.Map.Constants.INTEGER_02_SparksOutAdd.SpawnBurst_Instantaneous.SpawnProbability = Constants_INTEGER_02_SparksOutAdd_SpawnBurst_Instantaneous_SpawnProbability;
	Context.Map.Constants.INTEGER_02_CylinderAdd.EmitterState.LoopDuration = Constants_INTEGER_02_CylinderAdd_EmitterState_LoopDuration;
	Context.Map.Constants.INTEGER_02_CylinderAdd.SpawnBurst_Instantaneous.SpawnTime = Constants_INTEGER_02_CylinderAdd_SpawnBurst_Instantaneous_SpawnTime;
	Context.Map.Constants.INTEGER_02_CylinderAdd.SpawnBurst_Instantaneous.SpawnGroup = Constants_INTEGER_02_CylinderAdd_SpawnBurst_Instantaneous_SpawnGroup;
	Context.Map.Constants.INTEGER_02_CylinderAdd.SpawnBurst_Instantaneous.SpawnProbability = Constants_INTEGER_02_CylinderAdd_SpawnBurst_Instantaneous_SpawnProbability;
	Context.Map.Constants.INTEGER_02_CylinderAdd.SpawnBurst_Instantaneous.SpawnCount = Constants_INTEGER_02_CylinderAdd_SpawnBurst_Instantaneous_SpawnCount;
	Context.Map.Constants.INTEGER_01_SparksInAdd.Divide_Float001.B = Constants_INTEGER_01_SparksInAdd_Divide_Float001_B;
	Context.Map.Constants.INTEGER_01_SparksInAdd.EmitterState.LoopDelay = Constants_INTEGER_01_SparksInAdd_EmitterState_LoopDelay;
	Context.Map.Constants.INTEGER_01_SparksInAdd.SpawnRate.SpawnRate = Constants_INTEGER_01_SparksInAdd_SpawnRate_SpawnRate;
	Context.Map.Constants.INTEGER_01_SparksInAdd.SpawnRate.SpawnGroup = Constants_INTEGER_01_SparksInAdd_SpawnRate_SpawnGroup;
	Context.Map.Constants.INTEGER_01_SparksInAdd.SpawnRate.SpawnProbability = Constants_INTEGER_01_SparksInAdd_SpawnRate_SpawnProbability;
	Context.Map.Constants.INTEGER_01_GroupBeamAdd.EmitterState.LoopDuration = Constants_INTEGER_01_GroupBeamAdd_EmitterState_LoopDuration;
	Context.Map.Constants.INTEGER_01_GroupBeamAdd.EmitterState.LoopDelay = Constants_INTEGER_01_GroupBeamAdd_EmitterState_LoopDelay;
	Context.Map.Constants.INTEGER_01_GroupBeamAdd.SpawnBurst_Instantaneous.SpawnTime = Constants_INTEGER_01_GroupBeamAdd_SpawnBurst_Instantaneous_SpawnTime;
	Context.Map.Constants.INTEGER_01_GroupBeamAdd.SpawnBurst_Instantaneous.SpawnGroup = Constants_INTEGER_01_GroupBeamAdd_SpawnBurst_Instantaneous_SpawnGroup;
	Context.Map.Constants.INTEGER_01_GroupBeamAdd.SpawnBurst_Instantaneous.SpawnProbability = Constants_INTEGER_01_GroupBeamAdd_SpawnBurst_Instantaneous_SpawnProbability;
	Context.Map.Constants.INTEGER_01_GroupBeamAdd.SpawnBurst_Instantaneous.SpawnCount = Constants_INTEGER_01_GroupBeamAdd_SpawnBurst_Instantaneous_SpawnCount;
	Context.Map.Constants.INTEGER_01_CylinderAdd.EmitterState.LoopDuration = Constants_INTEGER_01_CylinderAdd_EmitterState_LoopDuration;
	Context.Map.Constants.INTEGER_01_CylinderAdd.EmitterState.LoopDelay = Constants_INTEGER_01_CylinderAdd_EmitterState_LoopDelay;
	Context.Map.Constants.INTEGER_01_CylinderAdd.SpawnBurst_Instantaneous.SpawnTime = Constants_INTEGER_01_CylinderAdd_SpawnBurst_Instantaneous_SpawnTime;
	Context.Map.Constants.INTEGER_01_CylinderAdd.SpawnBurst_Instantaneous.SpawnGroup = Constants_INTEGER_01_CylinderAdd_SpawnBurst_Instantaneous_SpawnGroup;
	Context.Map.Constants.INTEGER_01_CylinderAdd.SpawnBurst_Instantaneous.SpawnProbability = Constants_INTEGER_01_CylinderAdd_SpawnBurst_Instantaneous_SpawnProbability;
	Context.Map.Constants.INTEGER_01_CylinderAdd.SpawnBurst_Instantaneous.SpawnCount = Constants_INTEGER_01_CylinderAdd_SpawnBurst_Instantaneous_SpawnCount;
	Context.Map.Emitter.RandomSeed = Emitter_RandomSeed;
	ReadDataSets(Context);
	Simulate(Context);
	WriteDataSets(Context);
	{
	int TmpWriteIndex = OutputIndex(0, false, true);
	OutputDataFloat(0, 0, TmpWriteIndex, Context.Map.INTEGER_01_CylinderAdd.Age);
	OutputDataFloat(0, 1, TmpWriteIndex, Context.Map.INTEGER_01_CylinderAdd.CurrentLoopDuration);
	OutputDataInt(0, 2, TmpWriteIndex, Context.Map.INTEGER_01_CylinderAdd.ExecutionState);
	OutputDataInt(0, 3, TmpWriteIndex, Context.Map.INTEGER_01_CylinderAdd.ExecutionStateSource);
	OutputDataBool(0, 4, TmpWriteIndex, Context.Map.INTEGER_01_CylinderAdd.LocalSpace);
	OutputDataInt(0, 5, TmpWriteIndex, Context.Map.INTEGER_01_CylinderAdd.LoopCount);
	OutputDataFloat(0, 6, TmpWriteIndex, Context.Map.INTEGER_01_CylinderAdd.LoopedAge);
	OutputDataFloat(0, 7, TmpWriteIndex, Context.Map.INTEGER_01_CylinderAdd.NormalizedLoopAge);
	OutputDataFloat(0, 8, TmpWriteIndex, Context.Map.INTEGER_01_CylinderAdd.Scalability.DistanceFraction);
	OutputDataInt(0, 9, TmpWriteIndex, Context.Map.INTEGER_01_CylinderAdd.SpawnBurst_Instantaneous.SpawnBurst.Count);
	OutputDataFloat(0, 10, TmpWriteIndex, Context.Map.INTEGER_01_CylinderAdd.SpawnBurst_Instantaneous.SpawnBurst.InterpStartDt);
	OutputDataFloat(0, 11, TmpWriteIndex, Context.Map.INTEGER_01_CylinderAdd.SpawnBurst_Instantaneous.SpawnBurst.IntervalDt);
	OutputDataInt(0, 12, TmpWriteIndex, Context.Map.INTEGER_01_CylinderAdd.SpawnBurst_Instantaneous.SpawnBurst.SpawnGroup);
	OutputDataFloat(0, 13, TmpWriteIndex, Context.Map.INTEGER_01_GroupBeamAdd.Age);
	OutputDataFloat(0, 14, TmpWriteIndex, Context.Map.INTEGER_01_GroupBeamAdd.CurrentLoopDuration);
	OutputDataInt(0, 15, TmpWriteIndex, Context.Map.INTEGER_01_GroupBeamAdd.ExecutionState);
	OutputDataInt(0, 16, TmpWriteIndex, Context.Map.INTEGER_01_GroupBeamAdd.ExecutionStateSource);
	OutputDataBool(0, 17, TmpWriteIndex, Context.Map.INTEGER_01_GroupBeamAdd.LocalSpace);
	OutputDataInt(0, 18, TmpWriteIndex, Context.Map.INTEGER_01_GroupBeamAdd.LoopCount);
	OutputDataFloat(0, 19, TmpWriteIndex, Context.Map.INTEGER_01_GroupBeamAdd.LoopedAge);
	OutputDataFloat(0, 20, TmpWriteIndex, Context.Map.INTEGER_01_GroupBeamAdd.NormalizedLoopAge);
	OutputDataFloat(0, 21, TmpWriteIndex, Context.Map.INTEGER_01_GroupBeamAdd.Scalability.DistanceFraction);
	OutputDataInt(0, 22, TmpWriteIndex, Context.Map.INTEGER_01_GroupBeamAdd.SpawnBurst_Instantaneous.SpawnBurst.Count);
	OutputDataFloat(0, 23, TmpWriteIndex, Context.Map.INTEGER_01_GroupBeamAdd.SpawnBurst_Instantaneous.SpawnBurst.InterpStartDt);
	OutputDataFloat(0, 24, TmpWriteIndex, Context.Map.INTEGER_01_GroupBeamAdd.SpawnBurst_Instantaneous.SpawnBurst.IntervalDt);
	OutputDataInt(0, 25, TmpWriteIndex, Context.Map.INTEGER_01_GroupBeamAdd.SpawnBurst_Instantaneous.SpawnBurst.SpawnGroup);
	OutputDataFloat(0, 26, TmpWriteIndex, Context.Map.INTEGER_01_SparksInAdd.Age);
	OutputDataFloat(0, 27, TmpWriteIndex, Context.Map.INTEGER_01_SparksInAdd.CurrentLoopDuration);
	OutputDataInt(0, 28, TmpWriteIndex, Context.Map.INTEGER_01_SparksInAdd.ExecutionState);
	OutputDataInt(0, 29, TmpWriteIndex, Context.Map.INTEGER_01_SparksInAdd.ExecutionStateSource);
	OutputDataBool(0, 30, TmpWriteIndex, Context.Map.INTEGER_01_SparksInAdd.LocalSpace);
	OutputDataInt(0, 31, TmpWriteIndex, Context.Map.INTEGER_01_SparksInAdd.LoopCount);
	OutputDataFloat(0, 32, TmpWriteIndex, Context.Map.INTEGER_01_SparksInAdd.LoopedAge);
	OutputDataFloat(0, 33, TmpWriteIndex, Context.Map.INTEGER_01_SparksInAdd.NormalizedLoopAge);
	OutputDataFloat(0, 34, TmpWriteIndex, Context.Map.INTEGER_01_SparksInAdd.Scalability.DistanceFraction);
	OutputDataInt(0, 35, TmpWriteIndex, Context.Map.INTEGER_01_SparksInAdd.SpawnRate.SpawnOutputInfo.Count);
	OutputDataFloat(0, 36, TmpWriteIndex, Context.Map.INTEGER_01_SparksInAdd.SpawnRate.SpawnOutputInfo.InterpStartDt);
	OutputDataFloat(0, 37, TmpWriteIndex, Context.Map.INTEGER_01_SparksInAdd.SpawnRate.SpawnOutputInfo.IntervalDt);
	OutputDataInt(0, 38, TmpWriteIndex, Context.Map.INTEGER_01_SparksInAdd.SpawnRate.SpawnOutputInfo.SpawnGroup);
	OutputDataFloat(0, 39, TmpWriteIndex, Context.Map.INTEGER_01_SparksInAdd.SpawnRate.SpawnRemainder);
	OutputDataFloat(0, 40, TmpWriteIndex, Context.Map.INTEGER_01_SparksInAdd.SphereRadius);
	OutputDataFloat(0, 41, TmpWriteIndex, Context.Map.INTEGER_02_BeamFlash.Age);
	OutputDataFloat(0, 42, TmpWriteIndex, Context.Map.INTEGER_02_BeamFlash.CurrentLoopDelay);
	OutputDataFloat(0, 43, TmpWriteIndex, Context.Map.INTEGER_02_BeamFlash.CurrentLoopDuration);
	OutputDataInt(0, 44, TmpWriteIndex, Context.Map.INTEGER_02_BeamFlash.ExecutionState);
	OutputDataInt(0, 45, TmpWriteIndex, Context.Map.INTEGER_02_BeamFlash.ExecutionStateSource);
	OutputDataBool(0, 46, TmpWriteIndex, Context.Map.INTEGER_02_BeamFlash.LocalSpace);
	OutputDataInt(0, 47, TmpWriteIndex, Context.Map.INTEGER_02_BeamFlash.LoopCount);
	OutputDataFloat(0, 48, TmpWriteIndex, Context.Map.INTEGER_02_BeamFlash.LoopedAge);
	OutputDataFloat(0, 49, TmpWriteIndex, Context.Map.INTEGER_02_BeamFlash.NormalizedLoopAge);
	OutputDataFloat(0, 50, TmpWriteIndex, Context.Map.INTEGER_02_BeamFlash.Scalability.DistanceFraction);
	OutputDataInt(0, 51, TmpWriteIndex, Context.Map.INTEGER_02_BeamFlash.SpawnBurst_Instantaneous.SpawnBurst.Count);
	OutputDataFloat(0, 52, TmpWriteIndex, Context.Map.INTEGER_02_BeamFlash.SpawnBurst_Instantaneous.SpawnBurst.InterpStartDt);
	OutputDataFloat(0, 53, TmpWriteIndex, Context.Map.INTEGER_02_BeamFlash.SpawnBurst_Instantaneous.SpawnBurst.IntervalDt);
	OutputDataInt(0, 54, TmpWriteIndex, Context.Map.INTEGER_02_BeamFlash.SpawnBurst_Instantaneous.SpawnBurst.SpawnGroup);
	OutputDataFloat(0, 55, TmpWriteIndex, Context.Map.INTEGER_02_BeamGround.Age);
	OutputDataFloat(0, 56, TmpWriteIndex, Context.Map.INTEGER_02_BeamGround.CurrentLoopDelay);
	OutputDataFloat(0, 57, TmpWriteIndex, Context.Map.INTEGER_02_BeamGround.CurrentLoopDuration);
	OutputDataInt(0, 58, TmpWriteIndex, Context.Map.INTEGER_02_BeamGround.ExecutionState);
	OutputDataInt(0, 59, TmpWriteIndex, Context.Map.INTEGER_02_BeamGround.ExecutionStateSource);
	OutputDataBool(0, 60, TmpWriteIndex, Context.Map.INTEGER_02_BeamGround.LocalSpace);
	OutputDataInt(0, 61, TmpWriteIndex, Context.Map.INTEGER_02_BeamGround.LoopCount);
	OutputDataFloat(0, 62, TmpWriteIndex, Context.Map.INTEGER_02_BeamGround.LoopedAge);
	OutputDataFloat(0, 63, TmpWriteIndex, Context.Map.INTEGER_02_BeamGround.NormalizedLoopAge);
	OutputDataFloat(0, 64, TmpWriteIndex, Context.Map.INTEGER_02_BeamGround.Scalability.DistanceFraction);
	OutputDataInt(0, 65, TmpWriteIndex, Context.Map.INTEGER_02_BeamGround.SpawnBurst_Instantaneous.SpawnBurst.Count);
	OutputDataFloat(0, 66, TmpWriteIndex, Context.Map.INTEGER_02_BeamGround.SpawnBurst_Instantaneous.SpawnBurst.InterpStartDt);
	OutputDataFloat(0, 67, TmpWriteIndex, Context.Map.INTEGER_02_BeamGround.SpawnBurst_Instantaneous.SpawnBurst.IntervalDt);
	OutputDataInt(0, 68, TmpWriteIndex, Context.Map.INTEGER_02_BeamGround.SpawnBurst_Instantaneous.SpawnBurst.SpawnGroup);
	OutputDataFloat(0, 69, TmpWriteIndex, Context.Map.INTEGER_02_CylinderAdd.Age);
	OutputDataFloat(0, 70, TmpWriteIndex, Context.Map.INTEGER_02_CylinderAdd.CurrentLoopDelay);
	OutputDataFloat(0, 71, TmpWriteIndex, Context.Map.INTEGER_02_CylinderAdd.CurrentLoopDuration);
	OutputDataInt(0, 72, TmpWriteIndex, Context.Map.INTEGER_02_CylinderAdd.ExecutionState);
	OutputDataInt(0, 73, TmpWriteIndex, Context.Map.INTEGER_02_CylinderAdd.ExecutionStateSource);
	OutputDataBool(0, 74, TmpWriteIndex, Context.Map.INTEGER_02_CylinderAdd.LocalSpace);
	OutputDataInt(0, 75, TmpWriteIndex, Context.Map.INTEGER_02_CylinderAdd.LoopCount);
	OutputDataFloat(0, 76, TmpWriteIndex, Context.Map.INTEGER_02_CylinderAdd.LoopedAge);
	OutputDataFloat(0, 77, TmpWriteIndex, Context.Map.INTEGER_02_CylinderAdd.NormalizedLoopAge);
	OutputDataFloat(0, 78, TmpWriteIndex, Context.Map.INTEGER_02_CylinderAdd.Scalability.DistanceFraction);
	OutputDataInt(0, 79, TmpWriteIndex, Context.Map.INTEGER_02_CylinderAdd.SpawnBurst_Instantaneous.SpawnBurst.Count);
	OutputDataFloat(0, 80, TmpWriteIndex, Context.Map.INTEGER_02_CylinderAdd.SpawnBurst_Instantaneous.SpawnBurst.InterpStartDt);
	OutputDataFloat(0, 81, TmpWriteIndex, Context.Map.INTEGER_02_CylinderAdd.SpawnBurst_Instantaneous.SpawnBurst.IntervalDt);
	OutputDataInt(0, 82, TmpWriteIndex, Context.Map.INTEGER_02_CylinderAdd.SpawnBurst_Instantaneous.SpawnBurst.SpawnGroup);
	OutputDataFloat(0, 83, TmpWriteIndex, Context.Map.INTEGER_02_FireImpact2Add.Age);
	OutputDataFloat(0, 84, TmpWriteIndex, Context.Map.INTEGER_02_FireImpact2Add.CurrentLoopDelay);
	OutputDataFloat(0, 85, TmpWriteIndex, Context.Map.INTEGER_02_FireImpact2Add.CurrentLoopDuration);
	OutputDataInt(0, 86, TmpWriteIndex, Context.Map.INTEGER_02_FireImpact2Add.ExecutionState);
	OutputDataInt(0, 87, TmpWriteIndex, Context.Map.INTEGER_02_FireImpact2Add.ExecutionStateSource);
	OutputDataBool(0, 88, TmpWriteIndex, Context.Map.INTEGER_02_FireImpact2Add.LocalSpace);
	OutputDataInt(0, 89, TmpWriteIndex, Context.Map.INTEGER_02_FireImpact2Add.LoopCount);
	OutputDataFloat(0, 90, TmpWriteIndex, Context.Map.INTEGER_02_FireImpact2Add.LoopedAge);
	OutputDataFloat(0, 91, TmpWriteIndex, Context.Map.INTEGER_02_FireImpact2Add.NormalizedLoopAge);
	OutputDataFloat(0, 92, TmpWriteIndex, Context.Map.INTEGER_02_FireImpact2Add.Scalability.DistanceFraction);
	OutputDataInt(0, 93, TmpWriteIndex, Context.Map.INTEGER_02_FireImpact2Add.SpawnBurst_Instantaneous.SpawnBurst.Count);
	OutputDataFloat(0, 94, TmpWriteIndex, Context.Map.INTEGER_02_FireImpact2Add.SpawnBurst_Instantaneous.SpawnBurst.InterpStartDt);
	OutputDataFloat(0, 95, TmpWriteIndex, Context.Map.INTEGER_02_FireImpact2Add.SpawnBurst_Instantaneous.SpawnBurst.IntervalDt);
	OutputDataInt(0, 96, TmpWriteIndex, Context.Map.INTEGER_02_FireImpact2Add.SpawnBurst_Instantaneous.SpawnBurst.SpawnGroup);
	OutputDataFloat(0, 97, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd.Age);
	OutputDataFloat(0, 98, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd.CurrentLoopDelay);
	OutputDataFloat(0, 99, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd.CurrentLoopDuration);
	OutputDataInt(0, 100, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd.ExecutionState);
	OutputDataInt(0, 101, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd.ExecutionStateSource);
	OutputDataBool(0, 102, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd.LocalSpace);
	OutputDataInt(0, 103, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd.LoopCount);
	OutputDataFloat(0, 104, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd.LoopedAge);
	OutputDataFloat(0, 105, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd.NormalizedLoopAge);
	OutputDataFloat(0, 106, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd.Scalability.DistanceFraction);
	OutputDataInt(0, 107, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd.SpawnBurst_Instantaneous.SpawnBurst.Count);
	OutputDataFloat(0, 108, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd.SpawnBurst_Instantaneous.SpawnBurst.InterpStartDt);
	OutputDataFloat(0, 109, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd.SpawnBurst_Instantaneous.SpawnBurst.IntervalDt);
	OutputDataInt(0, 110, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd.SpawnBurst_Instantaneous.SpawnBurst.SpawnGroup);
	OutputDataFloat(0, 111, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd001.Age);
	OutputDataFloat(0, 112, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd001.CurrentLoopDelay);
	OutputDataFloat(0, 113, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd001.CurrentLoopDuration);
	OutputDataInt(0, 114, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionState);
	OutputDataInt(0, 115, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd001.ExecutionStateSource);
	OutputDataBool(0, 116, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd001.LocalSpace);
	OutputDataInt(0, 117, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd001.LoopCount);
	OutputDataFloat(0, 118, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd001.LoopedAge);
	OutputDataFloat(0, 119, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd001.NormalizedLoopAge);
	OutputDataFloat(0, 120, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd001.Scalability.DistanceFraction);
	OutputDataInt(0, 121, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd001.SpawnBurst_Instantaneous.SpawnBurst.Count);
	OutputDataFloat(0, 122, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd001.SpawnBurst_Instantaneous.SpawnBurst.InterpStartDt);
	OutputDataFloat(0, 123, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd001.SpawnBurst_Instantaneous.SpawnBurst.IntervalDt);
	OutputDataInt(0, 124, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd001.SpawnBurst_Instantaneous.SpawnBurst.SpawnGroup);
	OutputDataFloat(0, 125, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd002.Age);
	OutputDataFloat(0, 126, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd002.CurrentLoopDelay);
	OutputDataFloat(0, 127, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd002.CurrentLoopDuration);
	OutputDataInt(0, 128, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionState);
	OutputDataInt(0, 129, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd002.ExecutionStateSource);
	OutputDataBool(0, 130, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd002.LocalSpace);
	OutputDataInt(0, 131, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd002.LoopCount);
	OutputDataFloat(0, 132, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd002.LoopedAge);
	OutputDataFloat(0, 133, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd002.NormalizedLoopAge);
	OutputDataFloat(0, 134, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd002.Scalability.DistanceFraction);
	OutputDataInt(0, 135, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd002.SpawnBurst_Instantaneous.SpawnBurst.Count);
	OutputDataFloat(0, 136, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd002.SpawnBurst_Instantaneous.SpawnBurst.InterpStartDt);
	OutputDataFloat(0, 137, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd002.SpawnBurst_Instantaneous.SpawnBurst.IntervalDt);
	OutputDataInt(0, 138, TmpWriteIndex, Context.Map.INTEGER_02_ShockwaveAdd002.SpawnBurst_Instantaneous.SpawnBurst.SpawnGroup);
	OutputDataFloat(0, 139, TmpWriteIndex, Context.Map.INTEGER_02_SparksOutAdd.Age);
	OutputDataFloat(0, 140, TmpWriteIndex, Context.Map.INTEGER_02_SparksOutAdd.CurrentLoopDelay);
	OutputDataFloat(0, 141, TmpWriteIndex, Context.Map.INTEGER_02_SparksOutAdd.CurrentLoopDuration);
	OutputDataInt(0, 142, TmpWriteIndex, Context.Map.INTEGER_02_SparksOutAdd.ExecutionState);
	OutputDataInt(0, 143, TmpWriteIndex, Context.Map.INTEGER_02_SparksOutAdd.ExecutionStateSource);
	OutputDataBool(0, 144, TmpWriteIndex, Context.Map.INTEGER_02_SparksOutAdd.LocalSpace);
	OutputDataInt(0, 145, TmpWriteIndex, Context.Map.INTEGER_02_SparksOutAdd.LoopCount);
	OutputDataFloat(0, 146, TmpWriteIndex, Context.Map.INTEGER_02_SparksOutAdd.LoopedAge);
	OutputDataFloat(0, 147, TmpWriteIndex, Context.Map.INTEGER_02_SparksOutAdd.NormalizedLoopAge);
	OutputDataFloat(0, 148, TmpWriteIndex, Context.Map.INTEGER_02_SparksOutAdd.Scalability.DistanceFraction);
	OutputDataInt(0, 149, TmpWriteIndex, Context.Map.INTEGER_02_SparksOutAdd.SpawnBurst_Instantaneous.SpawnBurst.Count);
	OutputDataFloat(0, 150, TmpWriteIndex, Context.Map.INTEGER_02_SparksOutAdd.SpawnBurst_Instantaneous.SpawnBurst.InterpStartDt);
	OutputDataFloat(0, 151, TmpWriteIndex, Context.Map.INTEGER_02_SparksOutAdd.SpawnBurst_Instantaneous.SpawnBurst.IntervalDt);
	OutputDataInt(0, 152, TmpWriteIndex, Context.Map.INTEGER_02_SparksOutAdd.SpawnBurst_Instantaneous.SpawnBurst.SpawnGroup);
	OutputDataFloat(0, 153, TmpWriteIndex, Context.Map.INTEGER_02_SparksOutAdd.SphereRadius);
	OutputDataInt(0, 154, TmpWriteIndex, Context.Map.Emitter.RandomSeed);
	OutputDataFloat(0, 155, TmpWriteIndex, Context.Map.System.Age);
	OutputDataBool(0, 156, TmpWriteIndex, Context.Map.System.bCompleteOnInactive);
	OutputDataFloat(0, 157, TmpWriteIndex, Context.Map.System.CurrentLoopDuration);
	OutputDataInt(0, 158, TmpWriteIndex, Context.Map.System.ExecutionState);
	OutputDataInt(0, 159, TmpWriteIndex, Context.Map.System.ExecutionStateSource);
	OutputDataInt(0, 160, TmpWriteIndex, Context.Map.System.LoopCount);
	OutputDataFloat(0, 161, TmpWriteIndex, Context.Map.System.LoopedAge);
	OutputDataFloat(0, 162, TmpWriteIndex, Context.Map.System.NormalizedLoopAge);
	}
ExitStatScope( );
}
#line 703 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"

#if 0 /*BEGIN_RESOURCE_TABLES*/
NULL, 0
NULL, NULL, 0, 0
#endif /*END_RESOURCE_TABLES*/
